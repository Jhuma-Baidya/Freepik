%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 150327_ 221654728 Vector line emblems and badges frames for logo and labels.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 3/27/2015
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-03T09:17:34+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-03T09:17:34+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-03T09:17:34+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9MZUydirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVU57i3t4jLcSpDECAZJGCqCxCjc0G5NMVVMVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVQOt3V/aaTc3On2/1q8iTnFb7/AB0O4AG5NK7DrhVht7+ajWk2mQ3F&#xA;jHbNcTRw6g11OLf0ebyCqrMsT09OL1TzVSqsnJQW2UovUIda13VdO8w6Xb8bTRDM1lb3JaFr/wBd&#xA;eEhWv90oUfu2dauf5UNWUKN/+aNtb67a2MVsptmhMt8JpRFd2/B6T8rdvi/cJSRv5lNVqBupZB5b&#xA;1rVdUkvXu7A2VrEwW0ZhIGf4nDV9RUr8IQ8kqhr8LNSuKE7wK7FWNaz5nm/T9v5b0eezXVpImuLi&#xA;S7JdIogSqqIUeN5JHYH4QwooJPapSwO781+YJrm8k126kMMEl3a2Nvo0zWDxz2b8TNdxMZnSORSr&#xA;hnkaNVpVDUHFU50fzT56i0nU7zULrSr2PQZ/q1yUV4/rQSKORmiuzKsPqfvCnH0VHMU27Ks+0rVL&#xA;HVdOt9RsJlntLpFkhkUggqwrv4HxGKEVgV2KsJ1zzvNLZTTaLKlu1lIRcLdIecwf1YYRbqvPmz3E&#xA;JXhsxp+zWuFKXeZbXztfww6ff2z38d/Gktzp9tHGlmjxlpRF9ZLeqrRvHHyZjSStFUb8VVX9Meer&#xA;TRodTnm420s4jvDqFulvLbo2yzARcuEXMhH9RWKD46so3VZHoXmVbm5h0e7PqavHbh7ueFf9GeWN&#xA;YjMImJqQpnTelN6VqCAoT/ArsVSnzJqt5YW1sliiPf39zHaWvrV9JWerO7hSCQkaM1ARWlKitcKs&#xA;L1nzJ5uuXutDgVNWtARHqutaFE8ctpG20kSQyyTK07KdvTlZkHxFPs1Uqui+Z/OslzbaJe/V9HuC&#xA;h+oX2rwvLNqCqxVaQwywxxy8AC6mUtvUIBirMPLOrXOqaUJ7uJYb2Gae1u4oySgmtpmhcoWoeDFO&#xA;S+xxQmuBXYq7FWGea/PItJ7jSLKF/rL8rX69zRBHO6xAekpNZWiN1EzL8PX4eTAgFKA8r+a30V4/&#xA;LF/ZOpsWMbyLOLhoUkljMSEEBzFCt5DF6h3P2gvEFgq9CwIdirsVdiqA16zuL3Rb20t7n6nNPC6L&#xA;c7/BUbmoKkbdwdsKsH8ieT55YI7u9u3n05JJWsfQ52Ky1S2VbgR2xiUq8kMzAt9oMG74pej4EMd8&#xA;2+WrnU4TcadO9vqkYHpOZ5lhogYqGhVvSarNvyQ7YVSz8r9JuLHT72Rr714JpQFsTEsLWk0dRNHI&#xA;iHgHqQG4ih489+WKWa4EJB591F9O8mazdxztbTJayLBKh4yCVxwjEZH+7GZgE/yqYVef6boVvq2s&#xA;RWmk2UGi6bqcFpqkLt6Vzc+np9yrfWI5YpH4SzeqqtzLd25FuQxS9Wk0zTZJ5biS0he4ni+rzzNG&#xA;hd4f99sxFWT/ACTtihjnnTRBFpNnf6ettDD5cMt6lhLBztnRLeRKCKMrRow3JOPcU71xSxbyPNZ6&#xA;V5o0fSVtf0dd3mnTS3ciSwtDfs3pyQS8IXYLLRZSKqDxBAZlGKvVcCEHrOorpmkX2pMnqrY28ty0&#xA;YIUsIkL8anYV44VYf5W01E85ahPqNlbJrUqmRrxoCjyqgVWNpVEAijeXgzlmdtixAKgKWeYENMoY&#xA;FWFQdiD0IxV5xoTxaN5gvr3TtPgh025u4LS8ktoSkMss0/1UPbuUUhopQBNHyZCDyUhg3IpekYEN&#xA;MwUFmNANyT0AxV5JpWmw+bPNMlo011qmi6XfPeyX091MbWa1ngkW3git2bjJSZmX1QvHjHsxLHCl&#xA;6taWdpZWyWtnBHbW0Q4xwQosaKPBVUADAhbf6dYahavaX9tFd2sn24JkWRD81YEYq8tjs08qecrX&#xA;S5ri607SZ72bUI7pbudrM2zfYtpIeRSE/WZACzjiw2rybYpetYEOxVJfNt/fWelc7NniZ5Ak11HH&#xA;6rQRUJaQIFk7gLy4MFryIoDhVhdlofmPUmuJ9Kup7Wzu5Fg1ex1B1e4ikltUVruCRUJWeNJk+EMo&#xA;BQjvQKVTUPKvmCwhZbu+VfL1o0TtDZ/uJrl2lLLHyf1WggieRQi+qaBT4ghVkfknU9TvI7pLlbk2&#xA;0fA273sfCdHLOJbd24xiQxcFq4WlW48mKk4oZPgV2KuxVjPmzyle61IJ4NTniWOML+imb/Qbgo5f&#xA;jcotGZJPsvv0p25BiqbaJqsOo2XqLE1tNCzQXVm9OcMsdA0ZpttUEEbFSCNiMVTDAq15EjQvIwRF&#xA;BLMxoAAKkknFWHWmi3evat/iSC9udIspWhNvb254G8ihJpPdKw/3YpARaV4faqSFQpZngQxn8wDJ&#xA;baPb6yIzPDoV1HqV1aggGWGFXWSnIgFow/qoK7sowpSjyBremXWrTQ2emaXaSXtsb25fSyvqRMsg&#xA;T0L0COM+r8ZIr4NttUqs9wIQ2qXX1PTLu79Frj6vDJL9XShaTghbgtdqtSmKvMNG1K01PV7DQdL0&#xA;7Sbcy3FtrE2oaK6+giWriSWOQiOPlMeSx7VqjknjTCl6xgQl/mG8Sx0DUr14UuEtbWeZoJNkkEcb&#xA;MUaobZqUO2FWJeQtMbT9auLRJPrqWkDw3U3C6SK0mZ0kS2tTcSzAwvG3OidOK16gBSz3Ah2KvMo4&#xA;Dbea11C4QfWLbUeD6RIlyIoU1C5aCC6tGeQ27SutZZCidOf2T1KXpuBCV+Z9Km1fy/f6bA6xy3UL&#xA;Ro0gJjJP7Lhd+DfZanbCrGvKuv297541W2uIBpepW+n2No+lu6Fi8LzyyGMoeMkaJcRlSvZtwOmK&#xA;Wc4EOxVgHmLWoU88y6VZW0esajqGlm1+oMy+lEVkLk3RJ+CN45asKFmA2GFLMtD0+TTdF0/TpJjc&#xA;SWVtDbvcN1kaKMIXNa/apXFCNwK8t1DU9PvvN0lzaahbJqkd4g06e6ZxA1r6EUY9G4RGqouvUVol&#xA;dVkYlSfsnCl6JoulJpdgtsJGnlLPLc3L0DyzSsXkkYDYcmOwGwGw2GKFe/sba/sbiyul521zG0Uy&#xA;VpVXHE7jp1wK8v1uWDTvMCSarqsV3q9r9Vg0+WAO1wOEoaaSbijC3427FplV+Lj4ioqFwpeqQTwX&#xA;EMc8EizQSqHiljIZGVhUMrDYgjvgQvxV2KpT5thtJvLWpQ3cz29vJAyPLGpkYctgBGu8lTQcP2vs&#xA;98KvKNJ1G58vXlk9kS11eXH1dvXLMsizenaMV5U9Flk0zg6kMq7fGFIxS9ZsvMml3Nlc3Msn1M2I&#xA;P6RguaRyWxA5H1RUgCm4YEqw3BIxQ8/86eZpdVvodIlt5INOuoxLBbyx8LmcuzRQha7wfWHJReY5&#xA;DclMUp3+VtpawQamyXj3F1NKrzxMHCKAXVXRnCmXmwZTJxFePGg44qznAhBa3pUWraPe6ZK7Rx3s&#xA;LwGVPtJzUgMtdqr13wq831DQ/Md/5zWx1hLL6/NHaXGm63DJLEY4rKflcm3hZXpPICokUSU4kbkC&#xA;mKU4vvzRFtJdSLYo1pG95bWxM3GYz2L+nI9xHw/c2/Pb1KnjtUb0xVC+YL5fMGkveX1vbPH5WvX/&#xA;AEzp087GwuR9V5BkmEbFuInR0DR/a2p0OKpn5G0LzCLbSdR11o4HsrJ4LOwTk8qC4KOzXMz8eUoE&#xA;aqQF61JLYqzTAhplDAqwqDsQehGKvMdHvZ9F1TVNSOiQw6RZssNuswZL2JOcolitXliT1VEcSyiF&#xA;WKhTxRjQKClml/5z8t2E1vHc3gVbqIXEU6o7w+mysyM0qqUXmI24VPxU2xQozed9I/Qq6pa85vWl&#xA;FtbW8qtbSPORy4sJghQKlXZiNkBbtiqQeU7SdfOF0L7SoIlCvcafLYows4VZIhzVvSjjlkn9Rh6v&#xA;It8LLxUVqpegYEOxV5x5g8r6ro+oaVqFhq4aWfW2n/023jaNZryCaH4nh9GTi3NYgOX8vhhSnZ8+&#xA;waZdfozzNAbHVmXnaxWqy3aXiA0LWvpp6jMD9qMpyXruu+KHJ54GsXLWHlSEX13EAb2e6EttBaVJ&#xA;AWZWQSmU0NIgoP8AMV2qpSbyh5Y1DUJDrV1q5LwazeXSLaQRRxSPHJJayfE/rS+m6KVpz6fIHFXo&#xA;uBCA16a0h0W9a7n+r27QujzAFivqDgOKjdmJYBVG5Owwq8rMDavpsNhDc2l28lz6Vpa31t6qW5T1&#xA;YOaC6guo4VMgCeitPhjKo3Plilm2g/mBpt7pSXVxG0Msk00NnZ26PcTSxwkUkWGESOPhYc+yH4Sc&#xA;VROqedrG302/kto3/SlpbyXEOn3iSWjS+mOqmVV5ID9pkqB3xQwhpYo4tT1KGaDS21KCPVEmt4Pq&#xA;9w9tJzujE81rAsiP6Qq3OR2ZkLUCk4pZ95Lmsn0JI7Wb1TFLL9YUxmExyyyGYp6RJKACUcN6FaEV&#xA;BGKE9wK7FVK6tLW7t3trqFLi3kFJIZVDow60ZWBBxVDyaJo0q2iyWFu62BU2KtEhEBQUX0hT4KU2&#xA;44VSvXfKaap5i0XVi8Yj01pTcwPGG9cMoMIJ/wCKpBzUEGh3FCMVTibTNOmvIb6a1ikvLYFbe5dF&#xA;aSMN9oI5FVr7YFda6bp1pPcT2trDBPdsHupYo1R5WFaNIygFjudziqJxV2KoLVNG0rVoFg1K1juo&#xA;0bnGJFBKPQjkh6q1CdxhVjx/LjTLS6nudAuZdEkvU9LURAsUwnSpNT9YSXi/xH4h9IOKUVpH5c+S&#xA;9KigjtdLiJt2EiPKDIfVU19U8qrzrvyp8sUMkwK7FXYqlmu+XdL1yGKHUEdlhYtG0UskLDkpRhyj&#xA;ZW4srEEVwqkWueQ7ZdNk/QEfpXqsn1O1mmlaxjDSUlpbMzRD9070AXYnah3xSjG/L7yyyBZI7mRo&#xA;9raWS7uXkgBpUQO0haOtPi4/aGzVGKE9sLG1sLG3sbRPTtbWNIYI6lqIihVFWJJ2HU4FV8VdiqHv&#xA;9PstQtJLO+gS5tZgBJDIAymhBGx8CAR74qkl15B8utp81vY262F45WWDU4xzuYp4t4pRI5LtwP7J&#xA;ahFV6E4Vbj8geVPqdvbzWKzy24NbxiVuZGY8pHkmQq7GR6s9TQnFU9tLS1s7WK1tIUgtoFCQwxqF&#xA;RVGwCgbDAqriqjeWVne27W15BHc270LwzIsiGhqKqwI2OKpJqfkuyu9Qtr61uZdOltY1hSO3SBou&#xA;EZZoysc0cqo6GRuLKB1+VCqU3H5e3MVvBp+nXMR0yKVpYvrayPcW5l5GVo5UdS5LSu6c90Y9SNgp&#xA;V7vyTfXOqai5uYI7HUgUuJRG7XZhcEPEGZjGpozKsnH4VJAXeuKorT/Ien2ep2t79cuZ1sV4WdvJ&#xA;6QVVEbRIrukayyiOORlT1GOx3qaEKp7Y6Xpmnq6WFpDaJIeUiwRpGGbxIQCpwIROKuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoH&#xA;W9Xt9I0ufUZ0eVIAOMMQBkkd2CRxoCQCzuwVanqcKsbT81fLMqyPbx3k8dpU6u8du5FgoqC1z9K/&#xA;7r5bfF9nfFKYeW/PWh+YryW3031WjWP1re6kThHcIHMcjQ1PIhG4g8lH2hTbFDIsCuxV2KoXU9T0&#xA;/S7Ga/1Cdba0gHKWZ+gBNB03JJNABucVYnqH5v8AlC1uPq0RuLu6RHkuLdIxbyQogqxkW8a1Nafs&#xA;irHwwpTPRvzE8n6zLbRaff8AqNd/Dblopo0dwvMxLI6KhkC7lOXL2xQyPArsVdiqW6r5i0rS54Le&#xA;7eU3FyHMEFvBPdSMsYqzcLdJWAHiRhVASeb7e5ls4NEWHUJ7v1iBJMbdUNuELxvVJHWb94D6bIDQ&#xA;Me2KXWfnjRpbOCSdit5MZALK1WS9lIilaFpEW3R3aJmjJWTgARvtihNtK1Ww1WyS9sZDLbyFgCyv&#xA;GwZSVZWSQK6sCNwwBxVF4FdirsVSzX/MWn6JZie6LSTSMI7SzhHOe4lbZIok/aZvuHU0GFVTRtc0&#xA;/WLMXNm5O5WaBxwmhkU0eOWM7o6kUIOKo/ArsVdirsVY9eef/KVq1zE9+r3VsWT6oob1ZZFf0jHA&#xA;pA9ZvV+D4K0bY0wqpJ+YvlhIZDqE7aZeQO6XOm3S/wClRemOTM0cRl/d8CG9RSUpvyxVkqsGAZTU&#xA;HcEdCMCt4q7FXYqlfmbW20TRLjUxB9ZFvw5RlxGKO6oWZyG4qnLkxp0Bwq86t/Lmv+dbuDW9XsLR&#xA;tFub+K4SA3c8/KygUIixRPFFEY5ZIxMWYcmVqU7YpZ3f+RfKd9cWE82mW4bTmrAiRoqFeJAjdQKM&#xA;itRwp2DAHFCR+cfy/S/1ey1TR7C0S8RJ0vZGkkszIkiqU/e26mT1FdQVYg03xSu/L7zbrN9MfL2s&#xA;WSR6npNuI9QuY5zMfViYRAyq0cfAzj96lGYFe+Ks4wIQ2palY6ZYT39/MtvZ2685pWrQD5CpJJ2A&#xA;G5PTFXm+i6Hd+fb1ta1prtPL6XV0bKzN1PbeoYJ2htz9XhMRi9L0ixZz6hkPZRuUvQbLy/ollZJZ&#xA;W1lCttG5kWMqH/eE1MjF+TM5PVianFCUeaPy90DXVmnKPZ6q4EkGoW0s0LJcRj9zMyxPGsjRnoW3&#xA;8DilKPJPmS6stbvPKevyPHqKOj6d6sr3Kujw8mjS5YBn3RnVZf3nGvXjXFWfYEJZ5l0291LRbiys&#xA;rg2txKYyJAzR1VJFd4+afEglRTGWAJWtaHCrEvK2jnVtRuLqfUZbiHTbmL0FjdpEVgkczQCW4D3B&#xA;VHCty5LzDEEcCBilFeYfyx06/RrmxmlTVCFV5b2e4uoplU1Cyq0nIceRKGMqR0+ySCqj9L/L3Q9O&#xA;tJYYZr31bmN47ucXU6mX1IzEWMaMsKlVpw4oOFBxpTFDGLzQdTGtXXl+y1h4Z3ghksvUkktyjSeq&#xA;z3UaWixwOyNGAInShC/aB5VUvTsCHYqwnzt5tlt530mylkgKhFvLm3UPctJPX0bOzQ1DXEoHIsdo&#xA;0+I9QcKUntvybsr3Sb241NIYfMGoiPhM6m8FmiSCQRiSRlkmkalJJuYY1+EqAMbVUuPyjsdO06wu&#xA;tJhjl1rTYfSmkhAsnuowSfgljPKGda/BJyPI7ScgahVOvJXmma7lOl305uZOLvYXrp6UsiQsEmgu&#xA;Y9hHdW7MBIoFGBDAdaKGYYFdirzzzX5snvtctdJ8uXF7dSC3vi66YIlU3kLwLCr3Nwvo8E5S+oFY&#xA;kbVFaYUo7SvyxsEsLK11y8n1mOziPpW9wIkiiuZTymnjMEcL8yxPFnZmWp3qcVRcn5b6Ev7ywnut&#xA;Ou5EeK7vYpFmnuYpBRo7l7tbn1RtsW3X9kjfFWNaHq2o+VdasdI168v1sorW6SSe6WKa0aK2lijt&#xA;Zo5IEaSIGN/jMxXfY9sVemxyRyRrJGweNwGR1IKlSKggjqDgQuxV2KsI/NvULa08u24uS81tNdxJ&#xA;d6XC3CW9t9zLCGFOKjZ3NQOIIJ3wpT3yZpmq6V5Y0/TtUljmurWFIv3YICIigLGWJPMoPh50HLrT&#xA;FCdYFcfbriry/Svr+lfms9tqMwjvdUMtzPfoStveW5iEdna+ixf05IjFIy/FuFahPJgCl6hgQwf8&#xA;472aDya1vBxS4vLiNILiRxGkL2wa9WQsdqj6rRfFiMISynQLKystFs7ayjeO2SJTGstTJ8Y5EyE7&#xA;l2LEsT3xQj8CuxV5v+ZBh07zd5Z1ZFqwm530BfgtwkMiW8IVSPjmibUGeMbVHIeFCl6RgQkHnfXr&#xA;rRtEMlmlb67kW0tJXH7mKWb4Vlmb9lFP/BNRRucKpT+U1kLTyyYo3u2thJRBqECwT8wo9VvgqGQt&#xA;9j4m4gceW1ApZrgQ7FXmP5kz3mm+atN1qCWf19PjNxAhiRLAwosguY7i4IDK7oaRtVgpO6qDyJS9&#xA;HsLxL2xt7xI5IkuI0lWKZTHIodQ3F0O6sK7jAhQ1vVYtI0i81OWKWeOziaZ4YFLyMEFaKowq8s/L&#xA;TWLK88+6g1/b/WNcvmmu4ruKeO4tbeKSOJglvTdqxlUkmp1UJ0xS9hwIdiryDzz5gsbD8xrSWxtf&#xA;Q1PTZPXvZpJ0gtrqJLCWRhIDUrJ6T8IXOzHkDsgwpesWF4l7Y294kckSXEaSrFMpjkUOobi6HdWF&#xA;dxgQuu7lba0muWR5FgjaRkjHJ2CAtRV7k02GKvPPy4RrjXZ7md1aAWv17RbW3mWeC0t9Snd5YndV&#xA;WsheEdfhA+FOhqUvSMCHYqwX8z7K6lGnfo26ax1W/abTVuncJb/V5YmnmSZirceQt/gZfiDdNq4U&#xA;sk8p6pa6p5csL21t/qttJEFit6gqqxkxjgwoGT4fgb9paHFCbYFdirFPzI8sRa35Z1B4YZX1eCzu&#xA;k05rdikpeWIgxdaMkhChlPzG4BwpU/y/8yahrEmr211dLeJpU8dtFO9s9pcvyhWVjcRMQFcF+BCo&#xA;oqpPegVZeCD0Ne33YEITVrqS20q8uoZI0kghkkSSUFowyKT8YUqSNt6HCrzzyNYSea9al8z6zJLf&#xA;wNa6fNZD0XtbJbiNriQxxI284tvVHGRmYcmNOgopenYEMZ/MjRJ9b8m3+nQW/wBalkML+gOIdkjn&#xA;R5BEX+ESGNWCE/tUwq1+X3mdNd0BDPOH1WzeW21CCQCO4RoZniVp4a1jZ1j5EeOKsnwK7FXmV/ey&#xA;+afzM06PTQLzTfLU6TSXKKj2ivJFKJ+cpJ5SqfTWNU+yQxOFL03AhCatYWGo6ZdWOoIsljcxPHcK&#xA;9KcGFDuelOte2FWKflZZ3dhpl3YahLJcajbSRrJcyvzMsPpL6Ljc/CBVFPUhd8Us2JAFSaDxwIdi&#xA;rz/zBokesfmJZLI0n6Mshbz6lE0n7iadRK1qjIT1jYKwXoeR2rhS9AwIdiry+0nvvJHmrV4EjM3l&#xA;+5lbUfqESfHBbyhfVubUL9tYpaieIbhSjr1Iwpel2t1bXdtFdWsqz206iSGaMhkdGFQykdQcCGr2&#xA;9tLG0mvLyZYLWBTJNNIeKqq7kknFXn3qX/m3zppf1hDBpWlt+kTpsijkF9N0tZLsEHjLI7+pFF1R&#xA;FJb4mAUpej4EOxV5Vpd0fKPm1pNVin00as1/datKEWTT5EikX0JovR9RoRGsyo7SBK/tVJGFL1RW&#xA;VlDKQysKqw3BBwIbxV5l+YF/aeZ9Rg8sWQudRh9G9eeCzRAn161eGOD1Jp/TiZIWkdpEVzuAGHYl&#xA;L0eyFwLOAXKolyI09dIvsB+I5BK/s16YEK2KuxV2KsC8wflvez39/rekarPaatM5mgji4QK/wxq0&#xA;Es6KZjG/pePwn4gOtSlKYL38xvK/PSrfToriLUJHl0WOSa4vmWWVuUkE91wipRi03KT9nkOTFcVX&#xA;6b+WfmS6Jg1jU57W1i/fywx3P16C8vZJTNJPJBPDHGkfLcRcKcj7bqvQtC0qPSNGstLjcypZQJAJ&#xA;WABfgoBYgbDkd6DFCOwK7FWBeZPJOtWV3Jr/AJUvXj1GOSWX9HukLo63Lq10kbP6Z+Nh6qo78fU7&#xA;rU4UoZ/zG826ZGsOr+W5OZ5mC+b1Io7hFoQBFbx37xTN2jc0J6Nviqlf3n5leaGXT4rCXy5pt9SO&#xA;5aVIpJEtHQ+o5mEtVlevFI1jqvVmxVmflny1a6DaywxSvPLOyvNM4RK8EWNEVI1REREQBVA+8knF&#xA;CcYFS3zHow1nR59O9Y25lMbpKFDgNDKsqhkNA6FkAda/EtRhViB8v6v5c1G0mtGubmC4lE2oPYQo&#xA;kCNHwAiW0ViwjeJWRRVgpJaoamKUu8yReZ9QmtrHWtQi03RroSPFDqXopz9DhveNbtGjOWkX04Y5&#xA;F6F2PwcSqjNBvvOw0oSXNzc3tk6zw2d7aR29xKjqXgDThgrTorrzjliH7wULAbgqtQeQL/XLFru/&#xA;uJrGe9Q288F5Gl1OluhYI0UhasU/F2pISzAEAioxV6PgQ7FUu1vQrLV7dI52eGeBvVs72BuE8EtK&#xA;c43oabGhBBDDYgjCrzPzD5U88aDo2o29tew3Hl69eN7sWsU0U1ofVEktzFBG5rG1P30UbAHcqq1I&#xA;xSitB8qee9W03Skvr2Ky0mwUGzSeOWe6kdWJS7limbir0oYkkLCPqV5AcVXoeiaHYaNaNb2gYmRz&#xA;Nc3Erc5p5mpzllc/adqfwFBihMMCuxVJ9e8s2usSwzPdXFpNDDPbCS2aMFobkxmWNhIkqkMYU7V2&#xA;wqwO2t/zI8u2IhsEurqHTkeC8mvTHdRPbxycIJrGCJ0meVIAGZGKhum7UxSve8/MDU0kmT63f6Rb&#xA;iVNNurAJptzdT8RwkuIpnH7gNyQFKV+1wpQ4qyryr5ITRVspZ9Rur+5s7d4UWdovSR5yr3Dpwjjc&#xA;l3Svxs2KGT4FdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWSQxSrxlRZFG4DAEV6d8VXIi&#xA;IioihUUBVVRQADYAAYq3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirzzz1+aKaJf&#xA;z2WnS2xlsLWe6vnuI55E9SIJ6VqjR8FWSTn9pmoNh1OFKQDUvzX1HUTHcFre7jvW060W2cQwW90k&#xA;KXTzXKD1PrEDQs4jDEdBUBmDKq7Svza81WsVrJ5gitolljsrwW4gmN1LZ3s7QtIoiZ0jMRUsAw+J&#xA;So+0cVet2N9aX9nDe2cqzWtwgkhlXoysKg4EK+KpB55Eq+XpriLU30l7VkmF0nI1oePplUDs3PlQ&#xA;AK3xU+FvskqwaLzT56utTiZfrTXVl9XW40iC2MMc1YUaSQ/WYRJxllZ0BPBUoDyG4ZSyHy/D5x1O&#xA;GSS6v73S7pfT+setBA0ReRazxwRslV9Fto5ObqRSvM1xVKtWvvzCt4rm1sotQMMvNBeuIXkhljmY&#xA;RFCkT8o54lBf90QpOzLuQqp6Nruu61qek2UurT2+npcTBLt7eWCS/wDQnaSNPUWNbdg9vGN0k+IF&#xA;jxqPhVeoYEOxVItb81ppWoxWR067vmlt5LotZokpSOJ1Ry0ZdHbeRacAx9sKsS01vO2vafolvdai&#xA;F0jXYDf3N9aARXdu3D1RZBzzUgM6jnxDURlPWuKV0HmXztYfoPUdb/0iK7uZdOOkadBzmm4QyMLx&#xA;iSPtSQV4iioj1JxVm3l/W11mykuhay2fpzy27QT8PUVoHMbcvTaRftKejHFCZYFdirDPL+o+f7jT&#xA;BcltO1KSOWe3ngkEtjIsltM8Lj1E+tI1THUfu12P04UpNrfnbXLu5Gn3en3GlaWbk6fdXdjPbzXE&#xA;90VB+r27PJC6AhvtqjMTsOJ3xVfoHnjzEtylhBp82r6fPcvY6dqN3NbQzLPFE8rwXPovcElI4yfU&#xA;KKT0Kk7lVN9c1Dz9bw2ztJp1g11d21rHbwrLeSH1pVVyJpPq6DhHyf8AuT0xVmWBDsVYfL+YKTj1&#xA;tHsxqFizJbx3Bl9GRrqSvGAQSIHB3Qnlx+Elui4UpRpUfnHUpvr/AAuXmkj9KG5uXkggguObepOL&#xA;QtDWNEZfSUwlmIYO/Riqqajo3mTSooxCb65h05ZCmp287PPLbLGxhjkhLlXmjei1MEisvxfa2xVH&#xA;ab571CO3Q6vZpHHbRxtqN4XMTKsrSCKUWpQyUkVEKrXlyYrxqpxVl1he21/ZW99av6lrdRrNBIVZ&#xA;eSOAyniwDCoPcYEK+KuxVi35nak+n+SNSuI5XglYRRRyJIIPillRArTFkESty4s/IcQa4VYh+V3l&#xA;rR7959ct1tYxMzMsFvNNMywXKqJ7O8huETkpZAyvSp23Kj4lL1VIIUQoqKFb7Qp1oAu/j8IAwIY9&#xA;5u8r6fqelyiSKLgnGWSB5DbQzPBvB9YmjHqCKE/HxXvhSwL8nNQt7bzJd6BbvG0UFl8T2k0slvPP&#xA;DIvq3Ahl4GEfv1RSqcXoaMeOKvYcCEg89HQz5auodZk9K0nKIj0kak4YPC1I1dvhkQN07b7YVSX8&#xA;q/qN1pcupWUCw2zCG2iTlHI/O3hWOZy0fw/EwCggDkqK3QjFLOcCGnRHRkdQyMCrKwqCDsQQcVeV&#xA;WUvliH8xBaanRdR065mKSV5iSe+umksjSNWYBUu2Ri5VQ/pjrxwperYEILWdW0zStOmvtSnFtZxg&#xA;B5CTWrHiAvH4ixJoAu+FWD+S9EnmvIL69XWLXW7Jp44L2/knnhurOSQH4o5XkSEuipyT4G5AHfFL&#xA;0GG3ggThDGsacnfiooOUjF3PzZmJOBCy5tRIPUiKxXaxvHBcFQ5jElK0Bp3RTT2xV5wsNh5X8w2k&#xA;ldYtPL1s08upardTXLWs13O9Bzh5cI0MkjSNII1QtTthS9NVlZQykMrCqsNwQcCG8VeZWPnn9Gan&#xA;5nks7aC50W1vGvZZnufRnaH0UW6e1gMbCdY5YZXLeoteg8cKWZXHk3QrjUWvnSZWeaO5mt0nmS2k&#xA;niIKSyQKwiZgUU1K70Fa4oW23lHy/p10uookxNoZZraKSeaWGBpeRkaGF2ZEJDN0GwNBQYqxJ/Or&#xA;6j5i8qnUraGysZ5Jb639O4NxIjPAIbcXaCJFgLC/jp8bfEy/PFL0rAh2KsE8i6dpg8w63fXM9tda&#xA;1JczrbfuokuY7W3nkgLNx+Kry8gTX7ITpsMKWd4EOxVhH5rabpFzoX1iaW2ttXteU+nTzrGzsIQW&#xA;ljTnQmqdBUDnxPWmFLMrQEWsIMhlIRQZWAUvsPiKgCletKYEKuKuxVgn5xWsn+GBqQVLhNPc+pZ3&#xA;Cs1uy3A9D1pOBVlNv6nqK1dt+9GUpRv5a6jNc+XbVJ5Lt5PSWRP0nPDLeMjCgZ1h6Ke3P4vHFWXY&#xA;EKN7cLb2sszMqhFqC7iNa9BVm2G/jiryLyqbnVfzQuYJDdLNp7fXJby8ZJbtFjUILVJYD6C2s/1j&#xA;moA34t3oQUvY8CEm84SXy+Xb2Oys5L2e4ja39OFkR1EylDIDIQvwVrhVJvyzvl1PT7vVFgis1maC&#xA;D6lDXin1e3RRJuBtIpBjPeLgfYKWZYEOxV5npOoXlv5+fT7bTvrn6Pe8jmvYnRS66peRXLO3MLVb&#xA;ZVZZONfjCjatMKXpmBCT+b/rp8tagllpy6tcSwvGlg5UJJzFDy5FagD9kGp6DCqSfl3dWX1M2Npq&#xA;uqau1nyhvH1GB4hDMp+KMtLGj8lO3Dm5A67UOKWZ4EOxV5t5vulu/MVjb2cuo6hrVlOl2PLE0LJZ&#xA;yQrIAZnkCRRUiPxRyNK68wNicKXpCElQSvEkAlTSoPhtgQg9a059S0m8sI7mSze6heJbqE0kjLin&#xA;JenTCrx3ULpf0lfST6bpdvd6FaWNlJpF0jO8stq0zRR2KK6Epc+tGEY8qfDVTTZS9vwIWTMyQuyp&#xA;6jKpIT+YgdPpxV4lpbpLdW1haWmmTT+ZtNngt7WyVlS2MhtndruNnd09Aeoo3FfSCgIcKXtOn2rW&#xA;ljb2rzyXLQRpGbiYgySFFA5uQAOTUqdsCEPrelSapYG0jvrnTyWDfWLNwkm37PIqx4nvxofcYVYl&#xA;5I0q+TX7u+ZEmtITdWZvZn53bywziHnJx9NPUkWDlIfSFV9P4moTilnmBDsVYZ+ZVlevZQahDb28&#xA;1tp8c8t2Z2ZWCDhJx2PFkb0t1KP8fpniQDhSnfl3Q5tLjlMmqX+o/WCHC37pIY9ui8VWnuK08KYo&#xA;TjArsVS7zFoset6LdaW8rQLcqAJVAYqVYOtVOzCq7juMKvIhN5u8la9qyPYpcwiC61kJp0UNlFdf&#xA;V1RVkkYzySLFCpPKJRXlTZg1cUs9sPzP8t3VyLYXcRMuoPpltcKaRSPFapO8u5/u+cgjU13JG++K&#xA;sR1/8yr7XNJSfQbd5YWisTK6CKWIPqMzW0thd200kPNvgJUqe67qrciqyf8ALXyPfaBaQ3eotDHe&#xA;tZx2psraFYkiVWL0kdXl9aQVoX5ff1xVnGBCS+dP0x/hi/8A0QvO+4LxSkbExc19cKJaxljDz48t&#xA;q0wqw3yv51sdPnvZtUaYW3C2he/+pyRo7xW6N/dwoypRJCzE8RxC8Qd+Klnej+YdJ1hXbT5WlCLH&#xA;IecUsVY5gWjdfVVOSuAaMNjihK7z8w/KtsxiN0/rs0iRJ9WumDmJjG7JxiPNFdeJdKivzGKWIeWN&#xA;R12680WEdnE8EcNzqB1K3mt419OGa5mlmPryD1m5zemoCEVMYZl3oFXqmBDThipCnixBAbrQ+OKv&#xA;NpYbnyprWnaXNql/e6JHBcXosra19S4muBMhRZGtY+bc3ldjyorEUbauFLKtE83WmoW+i+twhvNd&#xA;tmvrW15DkLfiJF5Cu7BJEDU2rXFCB1Pzzpv6PsLpY5brTNSubjTLj6msktzFPGsjFlEPx8UFvJy4&#xA;jl0YYpS/yXpup6vNb65fa1PdnSrq9trJHt4oXaDmYgJ6xrL8Uao1PhPKhxVn2BDsVYf5cTRCupeZ&#xA;NSW2je61K6kt7259MFI7elmhSR/shktQwoe+FLHrj8xZ7rW5TpWr/XEt9QigGmWFv9ciNhVPVuJH&#xA;hjmmkJq4T0mWjUFGocVdpf5iTwa5aJrGsLbG8vLiG502/hWzjhtVjkeG5iaWOGVAXRYqTFixb9k7&#xA;YqyPW4tHhvtF8w6alsR+kkivbu3CfvUvY3tRzkT7X76aI7nFWXYEOxV5d5c1i+8vatqc+owNaWmo&#xA;3Ec89jdTvPdxpJyH1n1FT0zQAK0fLkI4+VWp8RSzLS/PPlvUPTRbpba4lcxpbTsiyFuXEfZZl+Jv&#xA;hG/2gV+0pAUIjVvNmgaW08d1eR/WoI2le0VlMtFQvShIAPAFviI+EFugJxVhHnHXbnzVp403R1/c&#xA;M8LtbmQx3Fy6u5aJHCSwxek8JIdyyu6cdx1UvQ9Iklk0qzklhlt5WgjLwTtzlRigqsjVPJh3OKEX&#xA;gV2KuxVL9X8vaFrKxJq1hBfrCSYluI1kC8qVoGB60FcKsauPyk8ps8gs0ksrW7RYdTtY29RLiBGD&#xA;pFWb1HiCso4+kVoNh0WilNNM/L7yVpk0VxZ6RbpcwNziuXUyzKR0/eyF3+Gnwivw9qYoZDgV2KpX&#xA;5j8v2+vab+j7i4mt4DIkknoGOrhDyCOJEkUoT1FMKpav5deWo9QtbyGOWFbRIY0tEkPoN9XCLEzq&#xA;aklViVTv8QA5VxSvh8i6ZFH6C3d6tohBt7aOcwrEVHFKPCI5X9NQFT1XegAHYYqtuvIOj3lrcQ30&#xA;1xdTXClPrbmNJUQtzYIIkjjHJt3PCrftE0FFVjfl3oPr6ddQyXEF7p0rTLeI6tNMzzevIJnkVyRI&#xA;5blxoaMy14kjFWUYEOxV2KsPk/K/QI7MJpkk+nalHL6ttq0b8rmEVYelGW+FYvTkZBGBxp2rvhSj&#xA;tM8geV9L1CzvtPtTbS2cZjjRHb02JjEXqyISQ0vpjj6n2iCak4oZFgV2KuxVINM8heTdN4G10m3M&#xA;ke0c0ym4lUddpZjI4+/CqJ1ry3ZamYrhWaz1O1BFlqVvRZoq7ldwVeM0+KNwVPhirejeW9O0uOZl&#xA;DXN7d0+v39wfUnuCBT94x/ZH7KLRVGwAGKoa88h+T7uX1pNJgjnLK7TW6m3kZkYMvJ4TGzUYV3OK&#xA;p9gV2KoSfSdKuLxL2eyglvI42hjuXiRpVjavJA5HIKa7iuFUi/wJbpPKIryV9PuLf6nPY3FZgLcE&#xA;siRSckdSjMSjOXK1+Gg2xSsh8izLDaQPq0/C3ZriaeNQlzPdygiaaSQl0+LlRaR1QbKwxQndt5e0&#xA;O2No8VjD61ihjtLh0Ek0at9oLK/KT4q/F8W/fFUwwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVX/Rv8r8Mlsrv9G/yvwx2V3+jf5X&#xA;4Y7K7/Rv8r8Mdld/o3+V+GOyu/0b/K/DHZXf6N/lfhjsrv8ARv8AK/DHZXf6N/lfhjsrv9G/yvwx&#xA;2V3+jf5X4Y7K7/Rv8r8Mdld/o3+V+GOyu/0b/K/DHZXf6N/lfhjsrv8ARv8AK/DHZXf6N/lfhjsr&#xA;v9G/yvwx2V3+jf5X4Y7K7/Rv8r8Mdld/o3+V+GOyu/0b/K/DHZXf6N/lfhjsrv8ARv8AK/DHZXf6&#xA;N/lfhjsrv9G/yvwx2V3+jf5X4Y7K7/Rv8r8Mdld/o3+V+GOyu/0b/K/DHZXf6N/lfhjsrv8ARv8A&#xA;K/DHZX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:fd61f4ec-c348-1243-a0c1-8028d5ae3ada</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:fd61f4ec-c348-1243-a0c1-8028d5ae3ada</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:814effb7-d8e6-6948-8a73-c55ae8c3e8ee</stRef:instanceID>
            <stRef:documentID>xmp.did:814effb7-d8e6-6948-8a73-c55ae8c3e8ee</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3401cabd-5d1d-d64e-8d11-cf7fbd7ab9bb</stEvt:instanceID>
                  <stEvt:when>2014-11-28T12:46:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fd61f4ec-c348-1243-a0c1-8028d5ae3ada</stEvt:instanceID>
                  <stEvt:when>2014-12-03T09:17:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=48 B=54 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>48</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
600 400 mo
0 400 li
0 0 li
600 0 li
600 400 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.960784 .94902 .921569 rgb
f
201.526 352.66 mo
199.824 353.057 198.371 354.741 198.353 356.337 cv
198.352 356.417 198.335 356.492 198.307 356.562 cv
198.286 357.037 198.215 357.52 198.085 358.002 cv
197.514 360.134 195.99 361.632 193.793 362.22 cv
193.09 362.409 192.339 362.499 191.564 362.499 cv
188.747 362.499 185.618 361.303 183.354 359.274 cv
180.468 361.861 176.176 363.093 172.915 362.22 cv
170.719 361.632 169.194 360.134 168.623 358.003 cv
168.494 357.521 168.423 357.037 168.401 356.562 cv
168.374 356.492 168.356 356.416 168.356 356.337 cv
168.337 354.741 166.885 353.057 165.183 352.66 cv
163.397 352.242 161.9 352.513 160.475 353.51 cv
160.186 353.712 159.789 353.641 159.587 353.353 cv
159.385 353.065 159.456 352.667 159.744 352.465 cv
161.464 351.263 163.339 350.92 165.473 351.419 cv
166.874 351.746 168.121 352.712 168.875 353.915 cv
169.126 353.349 169.47 352.839 169.905 352.411 cv
171.41 350.932 173.867 350.592 175.62 351.621 cv
176.739 352.277 177.471 353.413 177.529 354.586 cv
177.605 356.107 176.498 357.554 175.009 357.88 cv
174.665 357.953 174.326 357.736 174.251 357.393 cv
174.176 357.049 174.393 356.709 174.738 356.634 cv
175.605 356.445 176.301 355.535 176.256 354.649 cv
176.219 353.912 175.716 353.155 174.975 352.72 cv
173.723 351.985 171.888 352.249 170.799 353.32 cv
169.784 354.318 169.414 356.026 169.854 357.673 cv
170.429 359.817 172.016 360.659 173.245 360.989 cv
176.27 361.799 180.331 360.52 182.904 357.946 cv
183.354 357.496 li
183.805 357.946 li
186.378 360.519 190.441 361.798 193.464 360.989 cv
194.693 360.659 196.279 359.817 196.854 357.672 cv
197.295 356.026 196.924 354.318 195.91 353.32 cv
194.82 352.25 192.985 351.984 191.734 352.72 cv
190.992 353.155 190.489 353.912 190.452 354.649 cv
190.408 355.535 191.103 356.445 191.971 356.634 cv
192.315 356.709 192.533 357.049 192.458 357.393 cv
192.382 357.736 192.045 357.953 191.699 357.88 cv
190.21 357.554 189.103 356.107 189.179 354.585 cv
189.238 353.413 189.969 352.277 191.089 351.621 cv
192.841 350.592 195.298 350.932 196.804 352.411 cv
197.238 352.839 197.583 353.349 197.833 353.915 cv
198.588 352.712 199.834 351.746 201.236 351.419 cv
203.371 350.92 205.244 351.263 206.964 352.465 cv
207.253 352.667 207.323 353.065 207.122 353.353 cv
206.92 353.642 206.523 353.711 206.234 353.51 cv
204.808 352.513 203.311 352.243 201.526 352.66 cv
cp
165.183 295.22 mo
166.885 294.823 168.337 293.14 168.356 291.544 cv
168.356 291.462 168.373 291.386 168.401 291.315 cv
168.423 290.841 168.494 290.359 168.623 289.878 cv
169.186 287.78 170.61 286.352 172.741 285.75 cv
175.972 284.837 180.344 286.042 183.354 288.626 cv
186.365 286.042 190.736 284.838 193.968 285.75 cv
196.099 286.352 197.523 287.78 198.085 289.878 cv
198.215 290.361 198.286 290.844 198.307 291.319 cv
198.335 291.389 198.352 291.464 198.353 291.544 cv
198.371 293.14 199.824 294.823 201.526 295.22 cv
203.312 295.638 204.808 295.368 206.234 294.371 cv
206.523 294.17 206.92 294.24 207.122 294.528 cv
207.323 294.816 207.253 295.214 206.964 295.415 cv
205.752 296.263 204.464 296.683 203.062 296.683 cv
202.474 296.683 201.866 296.609 201.236 296.462 cv
199.834 296.135 198.588 295.169 197.833 293.966 cv
197.583 294.531 197.238 295.042 196.804 295.469 cv
195.299 296.95 192.843 297.289 191.089 296.26 cv
189.969 295.604 189.238 294.468 189.179 293.296 cv
189.103 291.774 190.21 290.327 191.699 290.001 cv
192.045 289.925 192.382 290.144 192.458 290.488 cv
192.533 290.832 192.315 291.172 191.971 291.247 cv
191.103 291.436 190.408 292.345 190.452 293.232 cv
190.489 293.968 190.992 294.726 191.734 295.161 cv
192.985 295.895 194.82 295.632 195.91 294.561 cv
196.924 293.563 197.295 291.855 196.854 290.209 cv
196.298 288.135 194.789 287.307 193.621 286.977 cv
190.681 286.144 186.456 287.423 183.793 289.947 cv
183.354 290.362 li
182.916 289.947 li
180.252 287.423 176.026 286.145 173.087 286.977 cv
171.919 287.307 170.41 288.135 169.854 290.209 cv
169.413 291.855 169.784 293.563 170.799 294.561 cv
171.888 295.633 173.722 295.896 174.975 295.161 cv
175.716 294.726 176.219 293.968 176.256 293.232 cv
176.301 292.345 175.605 291.436 174.738 291.247 cv
174.393 291.172 174.176 290.832 174.251 290.488 cv
174.326 290.144 174.665 289.926 175.009 290.001 cv
176.498 290.327 177.605 291.774 177.529 293.296 cv
177.471 294.468 176.739 295.603 175.62 296.26 cv
174.939 296.66 174.151 296.853 173.355 296.853 cv
172.101 296.853 170.825 296.375 169.905 295.469 cv
169.47 295.042 169.126 294.531 168.875 293.966 cv
168.12 295.169 166.874 296.135 165.473 296.462 cv
164.842 296.609 164.234 296.683 163.647 296.683 cv
162.244 296.683 160.956 296.263 159.744 295.415 cv
159.456 295.214 159.385 294.816 159.587 294.528 cv
159.789 294.24 160.186 294.169 160.475 294.371 cv
161.9 295.368 163.396 295.638 165.183 295.22 cv
cp
209.816 323.941 mo
209.816 321.506 211.53 319.082 213.396 316.526 cv
214.575 318.178 215.679 319.776 216.313 321.358 cv
216.423 321.776 216.547 322.184 216.676 322.577 cv
216.687 322.609 216.707 322.635 216.722 322.665 cv
216.815 323.09 216.869 323.515 216.869 323.941 cv
216.869 324.357 216.817 324.772 216.728 325.188 cv
216.707 325.225 216.69 325.263 216.676 325.304 cv
216.546 325.697 216.423 326.106 216.313 326.524 cv
215.678 328.106 214.575 329.703 213.397 331.355 cv
211.53 328.799 209.816 326.375 209.816 323.941 cv
cp
221.124 317.449 mo
221.049 317.447 221.004 317.421 220.998 317.415 cv
220.863 317.09 220.493 316.935 220.165 317.07 cv
219.84 317.204 219.685 317.577 219.82 317.903 cv
219.988 318.31 220.352 318.598 220.816 318.692 cv
221.329 318.796 221.87 318.644 222.225 318.295 cv
222.764 317.765 222.904 316.874 222.575 316.076 cv
222.102 314.928 220.802 314.197 219.492 314.337 cv
218.364 314.457 217.274 315.204 216.649 316.285 cv
216.337 316.826 216.132 317.448 216.036 318.124 cv
215.47 317.236 214.835 316.346 214.188 315.44 cv
215.701 313.348 217.159 311.174 217.801 308.774 cv
217.891 308.434 217.689 308.085 217.35 307.994 cv
217.008 307.904 216.66 308.105 216.569 308.445 cv
216.019 310.503 214.758 312.453 213.407 314.342 cv
210.491 310.195 207.989 305.843 211.827 300.378 cv
212.03 300.09 211.96 299.692 211.672 299.49 cv
211.384 299.286 210.987 299.357 210.784 299.645 cv
206.338 305.976 209.471 311 212.616 315.432 cv
212.595 315.461 212.574 315.491 212.552 315.52 cv
210.49 318.343 208.541 321.009 208.541 323.941 cv
208.541 326.872 210.49 329.538 212.552 332.361 cv
212.574 332.39 212.595 332.419 212.617 332.449 cv
209.471 336.881 206.338 341.905 210.784 348.236 cv
210.908 348.412 211.106 348.507 211.306 348.507 cv
211.433 348.507 211.561 348.47 211.672 348.391 cv
211.96 348.189 212.03 347.791 211.827 347.503 cv
207.99 342.038 210.491 337.685 213.407 333.539 cv
214.758 335.428 216.019 337.378 216.569 339.436 cv
216.645 339.721 216.903 339.909 217.184 339.909 cv
217.239 339.909 217.294 339.901 217.35 339.887 cv
217.689 339.796 217.891 339.447 217.801 339.106 cv
217.159 336.707 215.701 334.533 214.188 332.441 cv
214.835 331.535 215.47 330.645 216.036 329.757 cv
216.132 330.433 216.337 331.055 216.649 331.596 cv
217.284 332.693 218.346 333.422 219.492 333.544 cv
219.6 333.556 219.707 333.561 219.815 333.561 cv
221.013 333.561 222.141 332.858 222.575 331.805 cv
222.904 331.007 222.764 330.116 222.225 329.586 cv
221.869 329.236 221.329 329.085 220.816 329.189 cv
220.352 329.283 219.988 329.571 219.82 329.978 cv
219.685 330.303 219.839 330.678 220.164 330.812 cv
220.49 330.948 220.862 330.794 220.996 330.469 cv
221.004 330.46 221.049 330.434 221.124 330.432 cv
221.207 330.425 221.29 330.454 221.332 330.495 cv
221.496 330.656 221.524 331.011 221.397 331.319 cv
221.143 331.935 220.363 332.354 219.627 332.277 cv
218.896 332.199 218.178 331.693 217.753 330.958 cv
217.26 330.104 217.213 329.12 217.26 328.445 cv
217.295 327.944 217.392 327.445 217.516 326.956 cv
217.907 325.97 218.144 324.971 218.144 323.941 cv
218.144 322.91 217.907 321.911 217.516 320.926 cv
217.392 320.436 217.295 319.938 217.26 319.436 cv
217.213 318.761 217.26 317.777 217.753 316.923 cv
218.178 316.188 218.896 315.682 219.627 315.604 cv
220.363 315.527 221.143 315.946 221.397 316.562 cv
221.524 316.87 221.496 317.225 221.332 317.386 cv
221.29 317.427 221.207 317.456 221.124 317.449 cv
cp
156.893 323.941 mo
156.893 326.375 155.178 328.799 153.312 331.355 cv
152.134 329.703 151.029 328.105 150.395 326.522 cv
150.285 326.105 150.162 325.697 150.033 325.304 cv
150.019 325.263 150.002 325.224 149.981 325.188 cv
149.892 324.772 149.84 324.357 149.84 323.941 cv
149.84 323.515 149.894 323.09 149.987 322.665 cv
150.002 322.635 150.022 322.609 150.033 322.577 cv
150.162 322.184 150.285 321.776 150.395 321.359 cv
151.029 319.777 152.133 318.178 153.312 316.526 cv
155.178 319.082 156.893 321.506 156.893 323.941 cv
cp
158.168 323.941 mo
158.168 321.009 156.219 318.343 154.156 315.52 cv
154.135 315.491 154.113 315.461 154.092 315.432 cv
157.238 311 160.37 305.976 155.924 299.645 cv
155.722 299.358 155.324 299.287 155.037 299.49 cv
154.748 299.692 154.679 300.089 154.881 300.378 cv
158.719 305.843 156.217 310.195 153.302 314.342 cv
151.95 312.453 150.69 310.503 150.14 308.445 cv
150.049 308.105 149.698 307.905 149.359 307.994 cv
149.019 308.085 148.817 308.434 148.908 308.774 cv
149.549 311.174 151.007 313.348 152.521 315.44 cv
151.873 316.346 151.239 317.236 150.673 318.124 cv
150.576 317.448 150.371 316.826 150.059 316.285 cv
149.424 315.188 148.362 314.459 147.217 314.337 cv
145.903 314.195 144.606 314.928 144.133 316.076 cv
143.804 316.874 143.945 317.766 144.483 318.295 cv
144.838 318.644 145.378 318.796 145.892 318.692 cv
146.357 318.598 146.72 318.31 146.889 317.903 cv
147.023 317.577 146.87 317.203 146.545 317.069 cv
146.219 316.934 145.847 317.087 145.713 317.412 cv
145.705 317.421 145.66 317.447 145.584 317.449 cv
145.507 317.456 145.419 317.427 145.377 317.386 cv
145.213 317.225 145.185 316.87 145.312 316.562 cv
145.565 315.946 146.341 315.526 147.082 315.604 cv
147.812 315.682 148.531 316.188 148.956 316.923 cv
149.449 317.777 149.496 318.761 149.449 319.436 cv
149.413 319.938 149.316 320.438 149.191 320.929 cv
148.802 321.913 148.565 322.911 148.565 323.941 cv
148.565 324.97 148.802 325.968 149.192 326.953 cv
149.316 327.443 149.413 327.943 149.449 328.445 cv
149.496 329.12 149.449 330.104 148.956 330.957 cv
148.531 331.693 147.812 332.199 147.082 332.277 cv
146.343 332.352 145.565 331.935 145.312 331.319 cv
145.185 331.011 145.213 330.656 145.377 330.495 cv
145.419 330.454 145.507 330.425 145.584 330.432 cv
145.66 330.434 145.705 330.46 145.711 330.466 cv
145.846 330.791 146.219 330.946 146.544 330.811 cv
146.869 330.677 147.023 330.303 146.889 329.978 cv
146.72 329.571 146.357 329.283 145.892 329.189 cv
145.378 329.085 144.838 329.236 144.483 329.586 cv
143.945 330.115 143.804 331.007 144.133 331.805 cv
144.567 332.858 145.695 333.561 146.894 333.561 cv
147.001 333.561 147.109 333.556 147.217 333.544 cv
148.362 333.422 149.425 332.693 150.059 331.595 cv
150.371 331.055 150.576 330.433 150.673 329.757 cv
151.238 330.645 151.873 331.535 152.521 332.441 cv
151.007 334.533 149.549 336.707 148.908 339.106 cv
148.817 339.447 149.019 339.796 149.359 339.887 cv
149.415 339.901 149.47 339.909 149.524 339.909 cv
149.806 339.909 150.064 339.721 150.14 339.436 cv
150.69 337.378 151.95 335.428 153.301 333.539 cv
156.218 337.685 158.719 342.038 154.881 347.503 cv
154.679 347.791 154.748 348.189 155.037 348.391 cv
155.148 348.47 155.276 348.507 155.402 348.507 cv
155.603 348.507 155.8 348.412 155.924 348.236 cv
160.37 341.905 157.237 336.881 154.092 332.449 cv
154.113 332.419 154.135 332.39 154.156 332.361 cv
156.219 329.538 158.168 326.872 158.168 323.941 cv
cp
165.795 355.823 mo
166.897 357.207 166.797 359.061 165.54 360.548 cv
164.591 361.671 163.032 362.47 161.313 362.47 cv
160.406 362.47 159.455 362.247 158.526 361.733 cv
156.596 360.665 155.308 358.411 155.246 355.99 cv
155.214 354.712 155.501 353.391 156.075 352.122 cv
154.806 352.696 153.489 352.977 152.207 352.951 cv
149.786 352.889 147.532 351.601 146.464 349.671 cv
144.976 346.982 145.934 344.107 147.65 342.656 cv
149.136 341.4 150.991 341.299 152.374 342.402 cv
153.812 343.548 153.735 345.319 153.056 346.48 cv
152.395 347.61 150.991 348.452 149.345 347.782 cv
149.018 347.649 148.862 347.277 148.994 346.951 cv
149.127 346.625 149.5 346.469 149.825 346.601 cv
150.827 347.009 151.583 346.473 151.956 345.836 cv
152.367 345.134 152.424 344.072 151.579 343.399 cv
150.226 342.321 148.859 343.303 148.473 343.63 cv
147.195 344.71 146.37 346.868 147.579 349.054 cv
148.433 350.596 150.262 351.626 152.24 351.677 cv
154.033 351.715 155.924 351.024 157.592 349.71 cv
161.805 346.392 li
158.487 350.605 li
157.173 352.273 156.475 354.174 156.52 355.957 cv
156.571 357.935 157.601 359.764 159.143 360.618 cv
161.329 361.827 163.487 361.003 164.567 359.726 cv
164.894 359.339 165.877 357.971 164.798 356.618 cv
164.121 355.769 163.086 355.817 162.361 356.241 cv
161.724 356.614 161.188 357.37 161.596 358.372 cv
161.729 358.698 161.572 359.07 161.246 359.203 cv
160.919 359.335 160.547 359.178 160.415 358.853 cv
159.746 357.207 160.587 355.803 161.717 355.141 cv
162.878 354.462 164.649 354.385 165.795 355.823 cv
cp
200.914 292.057 mo
199.811 290.674 199.911 288.82 201.168 287.332 cv
202.618 285.617 205.491 284.658 208.183 286.148 cv
210.113 287.216 211.4 289.47 211.462 291.891 cv
211.495 293.169 211.207 294.49 210.633 295.759 cv
211.902 295.185 213.219 294.889 214.501 294.93 cv
216.922 294.992 219.176 296.279 220.245 298.21 cv
221.733 300.899 220.775 303.774 219.058 305.225 cv
218.26 305.9 217.354 306.241 216.473 306.241 cv
215.715 306.241 214.974 305.989 214.335 305.479 cv
212.897 304.333 212.973 302.562 213.652 301.401 cv
214.314 300.271 215.719 299.43 217.364 300.099 cv
217.69 300.232 217.847 300.603 217.714 300.93 cv
217.581 301.255 217.211 301.413 216.883 301.28 cv
215.882 300.872 215.126 301.408 214.753 302.045 cv
214.328 302.771 214.28 303.805 215.129 304.482 cv
216.483 305.56 217.849 304.578 218.236 304.251 cv
219.514 303.171 220.339 301.012 219.129 298.827 cv
218.275 297.284 216.446 296.255 214.469 296.204 cv
212.68 296.161 210.785 296.857 209.116 298.171 cv
204.906 301.485 li
208.221 297.276 li
209.535 295.607 210.234 293.707 210.188 291.923 cv
210.137 289.946 209.108 288.116 207.566 287.263 cv
205.381 286.054 203.222 286.877 202.142 288.155 cv
201.815 288.542 200.832 289.909 201.911 291.263 cv
202.587 292.112 203.622 292.064 204.347 291.64 cv
204.985 291.267 205.52 290.511 205.113 289.508 cv
204.98 289.182 205.137 288.811 205.463 288.678 cv
205.789 288.545 206.161 288.702 206.294 289.029 cv
206.963 290.674 206.122 292.078 204.992 292.74 cv
203.83 293.419 202.059 293.495 200.914 292.057 cv
cp
210.633 352.122 mo
211.207 353.391 211.495 354.712 211.462 355.99 cv
211.4 358.411 210.113 360.665 208.183 361.733 cv
207.254 362.247 206.302 362.47 205.396 362.47 cv
203.677 362.47 202.117 361.671 201.168 360.548 cv
199.911 359.061 199.811 357.207 200.914 355.823 cv
202.059 354.385 203.83 354.461 204.992 355.141 cv
206.122 355.803 206.963 357.207 206.294 358.852 cv
206.161 359.178 205.789 359.336 205.463 359.203 cv
205.137 359.07 204.98 358.698 205.113 358.373 cv
205.52 357.37 204.985 356.614 204.347 356.241 cv
203.622 355.817 202.588 355.769 201.911 356.618 cv
200.832 357.971 201.815 359.339 202.142 359.726 cv
203.222 361.004 205.38 361.827 207.566 360.618 cv
209.108 359.764 210.137 357.935 210.188 355.957 cv
210.234 354.174 209.535 352.274 208.221 350.605 cv
204.904 346.393 li
209.116 349.71 li
210.785 351.024 212.678 351.716 214.469 351.677 cv
216.446 351.626 218.276 350.596 219.129 349.054 cv
220.339 346.869 219.514 344.71 218.236 343.63 cv
217.849 343.303 216.483 342.32 215.129 343.399 cv
214.285 344.072 214.342 345.134 214.753 345.836 cv
215.126 346.473 215.882 347.009 216.883 346.601 cv
217.211 346.468 217.581 346.625 217.714 346.951 cv
217.847 347.277 217.69 347.649 217.364 347.782 cv
215.717 348.451 214.314 347.61 213.653 346.48 cv
212.973 345.319 212.897 343.548 214.335 342.402 cv
215.717 341.3 217.572 341.4 219.058 342.656 cv
220.775 344.107 221.733 346.982 220.245 349.671 cv
219.177 351.601 216.922 352.889 214.501 352.951 cv
213.231 352.986 211.903 352.696 210.633 352.122 cv
cp
156.075 295.759 mo
155.501 294.49 155.214 293.169 155.246 291.891 cv
155.308 289.47 156.596 287.216 158.526 286.148 cv
161.215 284.659 164.091 285.617 165.54 287.332 cv
166.797 288.82 166.897 290.674 165.795 292.057 cv
164.649 293.496 162.878 293.419 161.717 292.74 cv
160.587 292.078 159.746 290.674 160.415 289.028 cv
160.547 288.702 160.919 288.545 161.246 288.678 cv
161.572 288.811 161.729 289.182 161.596 289.509 cv
161.188 290.511 161.724 291.267 162.361 291.64 cv
163.086 292.064 164.121 292.112 164.798 291.263 cv
165.877 289.909 164.894 288.542 164.567 288.155 cv
163.487 286.878 161.329 286.053 159.143 287.263 cv
157.601 288.116 156.571 289.946 156.52 291.923 cv
156.475 293.707 157.173 295.608 158.487 297.276 cv
161.803 301.486 li
157.592 298.171 li
155.923 296.858 154.024 296.164 152.24 296.204 cv
150.262 296.255 148.433 297.284 147.579 298.827 cv
146.37 301.013 147.195 303.171 148.473 304.251 cv
148.859 304.578 150.226 305.559 151.579 304.482 cv
152.429 303.805 152.38 302.771 151.956 302.045 cv
151.583 301.408 150.827 300.872 149.825 301.28 cv
149.498 301.413 149.127 301.255 148.994 300.93 cv
148.862 300.603 149.018 300.232 149.345 300.099 cv
150.99 299.431 152.394 300.271 153.056 301.401 cv
153.735 302.562 153.812 304.333 152.374 305.479 cv
151.734 305.989 150.994 306.241 150.235 306.241 cv
149.354 306.241 148.449 305.9 147.65 305.225 cv
145.934 303.774 144.976 300.899 146.464 298.21 cv
147.532 296.279 149.787 294.992 152.207 294.93 cv
153.486 294.889 154.806 295.185 156.075 295.759 cv
cp
145.444 361.823 mo
146.07 359.047 147.838 357.49 151.17 356.788 cv
150.051 360.067 148.833 361.403 145.444 361.823 cv
cp
144.036 362.452 mo
143.927 363.235 li
144.716 363.175 li
149.842 362.785 151.325 360.697 152.71 356.162 cv
153.004 355.197 li
152.007 355.345 li
147.142 356.065 144.61 358.323 144.036 362.452 cv
cp
221.265 286.058 mo
220.639 288.834 218.87 290.39 215.539 291.093 cv
216.657 287.814 217.876 286.478 221.265 286.058 cv
cp
222.673 285.429 mo
222.782 284.646 li
221.993 284.706 li
216.866 285.095 215.383 287.184 213.999 291.719 cv
213.704 292.684 li
214.702 292.536 li
219.566 291.816 222.099 289.558 222.673 285.429 cv
cp
215.539 356.788 mo
218.87 357.491 220.639 359.047 221.265 361.823 cv
217.876 361.403 216.657 360.067 215.539 356.788 cv
cp
214.702 355.345 mo
213.704 355.197 li
213.999 356.162 li
215.383 360.697 216.866 362.785 221.993 363.175 cv
222.782 363.235 li
222.673 362.452 li
222.099 358.323 219.566 356.065 214.702 355.345 cv
cp
151.169 291.093 mo
147.838 290.39 146.07 288.834 145.444 286.058 cv
148.832 286.478 150.051 287.814 151.169 291.093 cv
cp
152.007 292.536 mo
153.004 292.684 li
152.71 291.719 li
151.325 287.184 149.842 285.095 144.716 284.706 cv
143.927 284.646 li
144.036 285.429 li
144.61 289.558 147.142 291.816 152.007 292.536 cv
cp
.231373 .211765 .2 rgb
f
570.073 323.941 mo
568.991 323.355 567.772 323.04 566.559 323.04 cv
565.337 323.045 564.125 323.361 563.051 323.941 cv
564.125 324.521 565.332 324.836 566.532 324.841 cv
566.561 325.457 li
566.561 324.841 li
567.772 324.841 568.991 324.525 570.073 323.941 cv
cp
572.289 323.941 mo
571.591 324.441 li
570.124 325.493 568.337 326.072 566.561 326.072 cv
566.561 326.072 li
566.527 326.072 li
564.764 326.065 562.99 325.486 561.533 324.441 cv
560.835 323.941 li
561.533 323.44 li
562.99 322.395 564.764 321.816 566.527 321.809 cv
568.337 321.809 570.124 322.388 571.591 323.44 cv
572.289 323.941 li
cp
489.748 323.941 mo
488.675 323.361 487.467 323.045 486.267 323.04 cv
485.033 323.04 483.809 323.355 482.726 323.941 cv
483.809 324.525 485.027 324.841 486.238 324.841 cv
486.238 325.457 li
486.267 324.841 li
487.467 324.836 488.675 324.521 489.748 323.941 cv
cp
491.266 324.441 mo
489.809 325.486 488.035 326.065 486.272 326.072 cv
486.238 326.072 li
484.462 326.072 482.675 325.493 481.208 324.441 cv
480.51 323.941 li
481.208 323.44 li
482.675 322.388 484.462 321.809 486.24 321.809 cv
488.035 321.816 489.809 322.395 491.266 323.44 cv
491.964 323.941 li
491.266 324.441 li
cp
562.902 349.068 mo
561.823 348.137 560.191 347.387 558.477 347.1 cv
558.986 348.032 559.765 349.048 560.888 350.185 cv
561.893 351.202 562.801 351.405 563.317 351.256 cv
563.585 351.178 563.762 351.002 563.814 350.76 cv
563.918 350.283 563.578 349.65 562.902 349.068 cv
cp
565.018 351.022 mo
564.868 351.706 564.361 352.235 563.66 352.439 cv
562.554 352.76 561.189 352.241 560.012 351.05 cv
558.533 349.553 557.596 348.207 557.059 346.976 cv
556.224 346.976 555.41 347.093 554.654 347.373 cv
551.975 348.366 551.099 350.024 550.835 351.239 cv
550.47 352.925 551.051 354.825 552.316 356.081 cv
553.543 357.298 555.704 357.733 557.302 356.15 cv
558.084 355.21 557.838 354.245 557.386 353.702 cv
556.957 353.186 556.12 352.777 555.173 353.317 cv
554.879 353.486 554.502 353.383 554.333 353.088 cv
554.165 352.793 554.267 352.417 554.563 352.248 cv
556.068 351.388 557.541 351.962 558.333 352.914 cv
559.152 353.899 559.437 355.534 558.226 356.965 cv
558.192 357.002 li
557.251 357.945 556.064 358.416 554.87 358.417 cv
553.654 358.417 552.43 357.928 551.448 356.954 cv
549.893 355.41 549.18 353.064 549.631 350.978 cv
550.096 348.835 551.728 347.144 554.226 346.219 cv
554.991 345.935 555.811 345.791 556.646 345.761 cv
556.451 344.961 556.428 344.21 556.521 343.494 cv
556.498 343.386 556.503 343.27 556.544 343.158 cv
556.565 343.103 556.588 343.037 556.609 342.977 cv
556.959 341.334 557.906 339.871 558.843 338.43 cv
560.528 335.842 562.269 333.166 560.861 329.161 cv
560.045 326.843 558.502 326.386 557.654 326.319 cv
556.641 326.241 555.739 326.49 555.181 327.006 cv
554.739 327.415 554.515 327.982 554.514 328.692 cv
554.536 329.507 554.981 330.907 556.503 330.907 cv
556.512 330.907 556.52 330.907 556.528 330.907 cv
557.38 330.899 557.995 330.382 558.133 329.557 cv
558.189 329.222 558.505 328.997 558.842 329.052 cv
559.177 329.108 559.404 329.426 559.347 329.761 cv
559.112 331.169 557.983 332.125 556.54 332.139 cv
556.527 332.139 556.514 332.139 556.502 332.139 cv
554.354 332.139 553.328 330.366 553.283 328.708 cv
553.283 327.639 553.651 326.744 554.345 326.102 cv
555.154 325.354 556.394 324.985 557.751 325.092 cv
559.701 325.245 561.257 326.579 562.022 328.753 cv
563.557 333.115 561.816 336.105 560.124 338.719 cv
562.277 338.387 563.601 339.626 563.957 341.019 cv
564.344 342.532 563.559 343.902 562.091 344.278 cv
561.91 344.324 561.731 344.347 561.556 344.347 cv
561.158 344.347 560.784 344.228 560.471 343.996 cv
560.024 343.664 559.721 343.11 559.697 342.582 cv
559.681 342.242 559.944 341.954 560.284 341.939 cv
560.625 341.909 560.911 342.187 560.927 342.526 cv
560.932 342.644 561.022 342.871 561.204 343.006 cv
561.358 343.12 561.548 343.146 561.786 343.085 cv
562.776 342.832 562.931 341.978 562.764 341.324 cv
562.551 340.489 561.782 339.687 560.269 339.941 cv
558.901 340.17 558.294 341.897 557.852 343.159 cv
557.827 343.229 557.805 343.289 557.781 343.355 cv
557.636 344.126 557.654 344.928 557.921 345.802 cv
560.145 346.014 562.326 346.945 563.706 348.135 cv
564.744 349.031 565.222 350.083 565.018 351.022 cv
cp
494.322 300.78 mo
493.814 299.849 493.034 298.833 491.911 297.697 cv
491.095 296.871 490.343 296.581 489.813 296.581 cv
489.69 296.581 489.579 296.597 489.482 296.625 cv
489.214 296.703 489.037 296.879 488.984 297.121 cv
488.881 297.598 489.222 298.23 489.897 298.813 cv
490.975 299.743 492.608 300.495 494.322 300.78 cv
cp
501.35 290.927 mo
502.906 292.471 503.619 294.816 503.167 296.902 cv
502.703 299.046 501.071 300.736 498.573 301.662 cv
497.809 301.946 496.988 302.09 496.154 302.12 cv
496.349 302.92 496.372 303.67 496.279 304.386 cv
496.301 304.495 496.296 304.611 496.255 304.723 cv
496.234 304.779 496.211 304.844 496.19 304.904 cv
495.84 306.547 494.893 308.01 493.956 309.451 cv
492.271 312.039 490.529 314.715 491.939 318.719 cv
492.754 321.037 494.297 321.495 495.144 321.561 cv
496.156 321.64 497.06 321.391 497.618 320.875 cv
498.06 320.466 498.284 319.899 498.285 319.189 cv
498.263 318.374 497.818 316.974 496.296 316.974 cv
496.287 316.974 496.279 316.974 496.271 316.974 cv
495.419 316.982 494.804 317.499 494.666 318.323 cv
494.61 318.658 494.294 318.883 493.957 318.829 cv
493.622 318.773 493.395 318.456 493.452 318.12 cv
493.687 316.712 494.815 315.756 496.259 315.742 cv
496.272 315.742 496.285 315.742 496.297 315.742 cv
498.445 315.742 499.472 317.516 499.516 319.173 cv
499.516 320.242 499.148 321.137 498.454 321.779 cv
497.736 322.442 496.678 322.807 495.503 322.807 cv
495.353 322.807 495.202 322.801 495.048 322.789 cv
493.098 322.636 491.542 321.302 490.777 319.128 cv
489.242 314.766 490.984 311.776 492.675 309.162 cv
492.435 309.199 492.204 309.219 491.984 309.219 cv
490.237 309.219 489.158 308.1 488.842 306.863 cv
488.455 305.349 489.24 303.979 490.708 303.603 cv
491.303 303.451 491.878 303.552 492.328 303.885 cv
492.775 304.216 493.078 304.771 493.102 305.299 cv
493.118 305.639 492.855 305.927 492.515 305.942 cv
492.174 305.97 491.888 305.694 491.872 305.355 cv
491.867 305.237 491.777 305.01 491.595 304.875 cv
491.442 304.761 491.251 304.736 491.013 304.796 cv
490.024 305.049 489.868 305.903 490.035 306.558 cv
490.248 307.392 491.016 308.194 492.53 307.94 cv
493.898 307.711 494.504 305.984 494.947 304.724 cv
494.972 304.653 494.994 304.592 495.018 304.526 cv
495.163 303.755 495.145 302.953 494.878 302.079 cv
492.654 301.866 490.473 300.936 489.093 299.746 cv
488.054 298.85 487.577 297.797 487.782 296.858 cv
487.93 296.175 488.438 295.646 489.139 295.443 cv
490.247 295.12 491.61 295.64 492.787 296.831 cv
494.267 298.328 495.203 299.673 495.74 300.905 cv
496.578 300.905 497.39 300.788 498.145 300.508 cv
500.824 299.515 501.701 297.857 501.964 296.642 cv
502.329 294.956 501.748 293.056 500.483 291.801 cv
499.256 290.583 497.096 290.147 495.497 291.731 cv
494.715 292.672 494.961 293.637 495.413 294.179 cv
495.841 294.695 496.678 295.105 497.626 294.564 cv
497.92 294.395 498.297 294.497 498.466 294.793 cv
498.634 295.088 498.532 295.464 498.237 295.633 cv
496.731 296.494 495.259 295.919 494.466 294.967 cv
493.647 293.982 493.362 292.348 494.573 290.916 cv
494.607 290.879 li
496.507 288.974 499.406 288.996 501.35 290.927 cv
cp
558.477 300.78 mo
560.191 300.495 561.823 299.743 562.902 298.813 cv
563.578 298.23 563.918 297.598 563.814 297.121 cv
563.762 296.879 563.585 296.703 563.317 296.625 cv
563.22 296.597 563.109 296.581 562.986 296.581 cv
562.456 296.581 561.704 296.871 560.888 297.697 cv
559.765 298.833 558.986 299.849 558.477 300.78 cv
cp
549.631 296.902 mo
549.18 294.816 549.893 292.471 551.448 290.927 cv
553.393 288.995 556.292 288.974 558.192 290.879 cv
558.226 290.916 li
559.437 292.348 559.152 293.982 558.333 294.967 cv
557.54 295.919 556.067 296.494 554.563 295.633 cv
554.267 295.464 554.165 295.088 554.333 294.793 cv
554.502 294.497 554.879 294.395 555.173 294.564 cv
556.119 295.105 556.956 294.695 557.386 294.179 cv
557.838 293.637 558.084 292.672 557.302 291.731 cv
555.704 290.148 553.543 290.583 552.316 291.801 cv
551.051 293.056 550.47 294.956 550.835 296.642 cv
551.099 297.857 551.975 299.515 554.654 300.508 cv
555.41 300.788 556.246 300.905 557.059 300.905 cv
557.596 299.673 558.533 298.328 560.012 296.831 cv
561.189 295.64 562.554 295.12 563.66 295.443 cv
564.361 295.646 564.868 296.175 565.018 296.858 cv
565.222 297.797 564.744 298.85 563.706 299.746 cv
562.326 300.936 560.145 301.866 557.921 302.079 cv
557.654 302.952 557.636 303.755 557.781 304.526 cv
557.805 304.592 557.827 304.652 557.852 304.722 cv
558.294 305.984 558.901 307.711 560.269 307.94 cv
561.782 308.194 562.55 307.392 562.764 306.557 cv
562.931 305.903 562.775 305.049 561.786 304.796 cv
561.548 304.736 561.358 304.761 561.204 304.875 cv
561.022 305.01 560.932 305.237 560.927 305.355 cv
560.911 305.694 560.625 305.97 560.284 305.942 cv
559.944 305.927 559.681 305.639 559.697 305.299 cv
559.721 304.771 560.024 304.216 560.471 303.885 cv
560.922 303.551 561.498 303.451 562.091 303.603 cv
563.559 303.979 564.344 305.349 563.957 306.862 cv
563.641 308.1 562.562 309.219 560.815 309.219 cv
560.595 309.219 560.364 309.199 560.124 309.162 cv
561.816 311.776 563.557 314.766 562.022 319.128 cv
561.257 321.302 559.701 322.636 557.751 322.789 cv
557.597 322.801 557.446 322.807 557.296 322.807 cv
556.12 322.807 555.063 322.442 554.345 321.779 cv
553.651 321.137 553.283 320.241 553.283 319.19 cv
553.328 317.516 554.354 315.742 556.502 315.742 cv
556.514 315.742 556.527 315.742 556.54 315.742 cv
557.983 315.756 559.112 316.712 559.347 318.12 cv
559.404 318.455 559.177 318.773 558.842 318.829 cv
558.505 318.883 558.189 318.658 558.133 318.323 cv
557.995 317.499 557.38 316.982 556.528 316.974 cv
556.52 316.974 556.511 316.974 556.503 316.974 cv
554.981 316.974 554.536 318.374 554.514 319.206 cv
554.515 319.899 554.739 320.466 555.181 320.875 cv
555.739 321.39 556.641 321.64 557.654 321.561 cv
558.502 321.495 560.045 321.037 560.861 318.719 cv
562.269 314.715 560.528 312.039 558.843 309.451 cv
557.906 308.01 556.959 306.547 556.609 304.904 cv
556.588 304.844 556.565 304.778 556.544 304.723 cv
556.503 304.611 556.498 304.495 556.521 304.387 cv
556.428 303.671 556.451 302.92 556.646 302.12 cv
555.811 302.09 554.991 301.946 554.226 301.662 cv
551.728 300.736 550.096 299.046 549.631 296.902 cv
cp
494.322 347.1 mo
492.608 347.386 490.976 348.137 489.897 349.068 cv
489.222 349.65 488.881 350.283 488.984 350.76 cv
489.037 351.002 489.214 351.178 489.482 351.256 cv
489.998 351.405 490.906 351.202 491.911 350.185 cv
493.034 349.048 493.814 348.032 494.322 347.1 cv
cp
503.167 350.978 mo
503.619 353.064 502.906 355.41 501.35 356.954 cv
500.369 357.928 499.145 358.417 497.93 358.417 cv
496.735 358.417 495.548 357.945 494.607 357.002 cv
494.574 356.965 li
493.362 355.534 493.647 353.9 494.466 352.915 cv
495.258 351.963 496.732 351.389 498.237 352.248 cv
498.532 352.417 498.634 352.793 498.466 353.088 cv
498.297 353.383 497.92 353.485 497.626 353.317 cv
496.679 352.776 495.841 353.186 495.412 353.702 cv
494.961 354.245 494.715 355.21 495.497 356.15 cv
497.095 357.733 499.256 357.298 500.483 356.081 cv
501.748 354.825 502.329 352.924 501.964 351.239 cv
501.7 350.024 500.824 348.366 498.145 347.373 cv
497.39 347.094 496.578 346.984 495.74 346.976 cv
495.203 348.207 494.267 349.553 492.787 351.05 cv
491.61 352.241 490.246 352.758 489.139 352.439 cv
488.438 352.235 487.931 351.706 487.782 351.022 cv
487.577 350.083 488.054 349.031 489.093 348.135 cv
490.472 346.945 492.654 346.014 494.878 345.802 cv
495.145 344.928 495.163 344.126 495.018 343.355 cv
494.994 343.288 494.972 343.228 494.947 343.157 cv
494.504 341.896 493.898 340.17 492.53 339.941 cv
491.019 339.687 490.249 340.489 490.035 341.324 cv
489.868 341.978 490.023 342.832 491.013 343.085 cv
491.251 343.146 491.442 343.12 491.595 343.006 cv
491.777 342.871 491.867 342.644 491.872 342.526 cv
491.888 342.187 492.174 341.909 492.515 341.939 cv
492.855 341.954 493.118 342.242 493.102 342.582 cv
493.078 343.11 492.775 343.664 492.328 343.996 cv
492.015 344.228 491.641 344.347 491.242 344.347 cv
491.068 344.347 490.889 344.324 490.708 344.278 cv
489.24 343.902 488.455 342.532 488.842 341.019 cv
489.198 339.626 490.52 338.387 492.675 338.719 cv
490.984 336.105 489.242 333.115 490.777 328.753 cv
491.542 326.579 493.098 325.245 495.048 325.092 cv
496.401 324.985 497.645 325.354 498.454 326.102 cv
499.148 326.744 499.516 327.639 499.516 328.691 cv
499.472 330.365 498.445 332.139 496.297 332.139 cv
496.284 332.139 496.272 332.139 496.259 332.139 cv
494.815 332.125 493.687 331.169 493.452 329.761 cv
493.395 329.425 493.622 329.108 493.957 329.052 cv
494.294 328.997 494.61 329.222 494.666 329.558 cv
494.804 330.382 495.419 330.899 496.271 330.907 cv
497.829 330.927 498.263 329.511 498.285 328.675 cv
498.284 327.982 498.06 327.415 497.618 327.006 cv
497.059 326.49 496.156 326.241 495.144 326.319 cv
494.297 326.386 492.754 326.843 491.939 329.161 cv
490.529 333.166 492.271 335.842 493.956 338.43 cv
494.893 339.871 495.84 341.334 496.19 342.977 cv
496.211 343.037 496.234 343.102 496.255 343.158 cv
496.296 343.27 496.301 343.386 496.279 343.495 cv
496.372 344.21 496.349 344.961 496.154 345.761 cv
496.989 345.791 497.808 345.935 498.573 346.219 cv
501.071 347.144 502.703 348.835 503.167 350.978 cv
cp
520.471 292.285 mo
519.821 292.799 518.786 293.427 517.55 293.5 cv
516.484 293.561 515.448 293.154 514.846 292.433 cv
514.223 291.686 514.107 290.559 514.577 289.812 cv
514.813 289.438 515.236 289.151 515.709 289.046 cv
516.131 288.951 516.538 289.01 516.853 289.212 cv
517.139 289.395 517.52 289.313 517.704 289.027 cv
517.888 288.741 517.805 288.36 517.518 288.176 cv
516.926 287.795 516.188 287.676 515.441 287.844 cv
514.643 288.021 513.948 288.5 513.535 289.156 cv
512.781 290.355 512.935 292.065 513.901 293.222 cv
514.748 294.237 516.179 294.815 517.622 294.729 cv
518.854 294.657 520.103 294.146 521.235 293.25 cv
522.318 292.393 523.144 291.307 523.743 290.457 cv
524.768 289 525.659 287.447 526.4 285.827 cv
527.141 287.447 528.031 289 529.056 290.457 cv
529.654 291.307 530.48 292.392 531.564 293.25 cv
532.696 294.146 533.945 294.657 535.177 294.729 cv
535.276 294.735 535.374 294.738 535.472 294.738 cv
536.831 294.738 538.096 294.183 538.898 293.222 cv
539.864 292.065 540.018 290.355 539.264 289.156 cv
538.851 288.5 538.156 288.021 537.358 287.844 cv
536.613 287.677 535.874 287.795 535.281 288.176 cv
534.995 288.36 534.912 288.741 535.095 289.027 cv
535.279 289.313 535.66 289.395 535.946 289.212 cv
536.26 289.01 536.667 288.95 537.09 289.046 cv
537.563 289.151 537.986 289.438 538.222 289.812 cv
538.692 290.559 538.576 291.686 537.953 292.433 cv
537.351 293.154 536.316 293.56 535.249 293.5 cv
534.013 293.427 532.978 292.799 532.328 292.285 cv
531.368 291.525 530.613 290.53 530.063 289.748 cv
528.814 287.973 527.774 286.05 526.972 284.032 cv
526.4 282.594 li
525.828 284.032 li
525.025 286.05 523.985 287.973 522.736 289.748 cv
522.185 290.531 521.43 291.526 520.471 292.285 cv
cp
532.328 355.596 mo
532.978 355.082 534.013 354.453 535.249 354.381 cv
536.309 354.321 537.351 354.727 537.953 355.448 cv
538.576 356.195 538.692 357.321 538.222 358.069 cv
537.986 358.443 537.563 358.73 537.09 358.835 cv
536.667 358.93 536.261 358.871 535.946 358.669 cv
535.66 358.485 535.279 358.568 535.095 358.855 cv
534.912 359.141 534.995 359.522 535.281 359.706 cv
535.874 360.086 536.612 360.203 537.359 360.037 cv
538.157 359.859 538.851 359.381 539.264 358.724 cv
540.018 357.526 539.864 355.816 538.898 354.659 cv
538.039 353.629 536.647 353.06 535.177 353.152 cv
533.945 353.224 532.695 353.736 531.564 354.631 cv
530.48 355.488 529.654 356.574 529.056 357.424 cv
528.031 358.881 527.141 360.434 526.4 362.054 cv
525.659 360.434 524.768 358.881 523.743 357.424 cv
523.144 356.573 522.318 355.487 521.235 354.631 cv
520.104 353.736 518.854 353.224 517.622 353.152 cv
516.143 353.059 514.76 353.629 513.901 354.659 cv
512.935 355.816 512.781 357.526 513.535 358.724 cv
513.948 359.381 514.643 359.859 515.441 360.037 cv
516.188 360.203 516.925 360.086 517.518 359.706 cv
517.804 359.522 517.888 359.141 517.704 358.855 cv
517.521 358.568 517.138 358.485 516.854 358.669 cv
516.538 358.871 516.131 358.93 515.709 358.836 cv
515.236 358.73 514.813 358.443 514.577 358.069 cv
514.107 357.321 514.223 356.195 514.847 355.448 cv
515.447 354.727 516.481 354.318 517.55 354.381 cv
518.786 354.453 519.821 355.082 520.471 355.597 cv
521.43 356.355 522.185 357.35 522.736 358.133 cv
523.985 359.908 525.025 361.831 525.828 363.849 cv
526.4 365.287 li
526.972 363.849 li
527.774 361.831 528.814 359.908 530.063 358.133 cv
530.613 357.351 531.368 356.356 532.328 355.596 cv
cp
544.938 349.913 mo
543.923 349.656 542.772 349.888 541.862 350.534 cv
541.038 351.118 540.519 351.977 540.438 352.889 cv
540.344 353.941 540.925 355.032 541.919 355.668 cv
542.842 356.258 543.894 356.321 544.736 355.838 cv
545.03 355.668 545.132 355.292 544.963 354.997 cv
544.793 354.702 544.417 354.602 544.122 354.77 cv
543.686 355.021 543.111 354.969 542.582 354.631 cv
541.971 354.239 541.61 353.599 541.664 352.998 cv
541.714 352.438 542.037 351.919 542.574 351.538 cv
543.185 351.105 543.977 350.94 544.636 351.107 cv
545.926 351.433 546.949 352.813 547.017 354.316 cv
547.08 355.703 546.436 357.184 545.25 358.38 cv
544.044 359.599 542.444 360.394 541.186 360.951 cv
538.228 362.259 535.089 363.135 531.856 363.554 cv
531.518 363.598 531.28 363.906 531.324 364.243 cv
531.364 364.554 531.629 364.78 531.934 364.78 cv
531.96 364.78 531.987 364.778 532.014 364.775 cv
535.365 364.341 538.618 363.433 541.683 362.077 cv
543.042 361.476 544.773 360.612 546.125 359.247 cv
547.552 357.807 548.325 355.99 548.247 354.261 cv
548.154 352.203 546.763 350.375 544.938 349.913 cv
cp
507.861 297.968 mo
508.133 298.037 508.415 298.07 508.7 298.07 cv
509.476 298.07 510.271 297.819 510.937 297.347 cv
511.761 296.763 512.28 295.904 512.361 294.992 cv
512.456 293.94 511.874 292.849 510.88 292.213 cv
509.958 291.624 508.905 291.559 508.063 292.044 cv
507.769 292.213 507.667 292.59 507.837 292.884 cv
508.007 293.179 508.384 293.28 508.677 293.111 cv
509.113 292.861 509.688 292.913 510.217 293.25 cv
510.828 293.641 511.189 294.282 511.135 294.883 cv
511.085 295.444 510.762 295.962 510.225 296.343 cv
509.614 296.776 508.825 296.943 508.163 296.774 cv
506.873 296.448 505.85 295.068 505.782 293.564 cv
505.719 292.178 506.363 290.697 507.548 289.5 cv
508.754 288.284 510.354 287.487 511.613 286.93 cv
514.571 285.621 517.71 284.746 520.943 284.327 cv
521.281 284.284 521.519 283.975 521.475 283.638 cv
521.431 283.3 521.122 283.061 520.786 283.106 cv
517.435 283.54 514.181 284.447 511.115 285.804 cv
509.757 286.405 508.024 287.271 506.674 288.634 cv
505.247 290.074 504.474 291.891 504.552 293.62 cv
504.645 295.677 506.036 297.506 507.861 297.968 cv
cp
541.683 285.804 mo
538.618 284.447 535.365 283.54 532.014 283.106 cv
531.677 283.06 531.368 283.301 531.324 283.638 cv
531.28 283.975 531.519 284.284 531.856 284.327 cv
535.089 284.746 538.228 285.621 541.185 286.93 cv
542.445 287.487 544.045 288.283 545.25 289.5 cv
546.436 290.697 547.08 292.179 547.017 293.564 cv
546.949 295.068 545.926 296.448 544.636 296.774 cv
543.976 296.942 543.185 296.776 542.574 296.343 cv
542.037 295.962 541.714 295.444 541.664 294.883 cv
541.61 294.282 541.971 293.641 542.582 293.25 cv
543.11 292.913 543.686 292.861 544.122 293.111 cv
544.415 293.28 544.793 293.179 544.962 292.884 cv
545.132 292.59 545.03 292.213 544.736 292.044 cv
543.895 291.56 542.842 291.623 541.919 292.213 cv
540.925 292.849 540.344 293.94 540.438 294.992 cv
540.519 295.904 541.038 296.762 541.862 297.347 cv
542.528 297.819 543.322 298.07 544.099 298.07 cv
544.384 298.07 544.666 298.037 544.938 297.968 cv
546.763 297.506 548.154 295.677 548.247 293.62 cv
548.325 291.892 547.552 290.074 546.125 288.634 cv
544.775 287.27 543.042 286.405 541.683 285.804 cv
cp
521.475 364.243 mo
521.435 364.554 521.17 364.78 520.865 364.78 cv
520.839 364.78 520.812 364.778 520.786 364.775 cv
517.434 364.341 514.181 363.433 511.116 362.077 cv
509.757 361.476 508.025 360.611 506.674 359.247 cv
505.247 357.807 504.474 355.99 504.552 354.261 cv
504.645 352.203 506.036 350.375 507.861 349.913 cv
508.876 349.656 510.026 349.888 510.937 350.534 cv
511.761 351.118 512.28 351.976 512.361 352.889 cv
512.455 353.941 511.874 355.032 510.88 355.668 cv
509.957 356.258 508.905 356.321 508.063 355.838 cv
507.769 355.668 507.667 355.292 507.836 354.997 cv
508.007 354.702 508.382 354.602 508.677 354.77 cv
509.113 355.021 509.688 354.969 510.217 354.631 cv
510.828 354.239 511.189 353.599 511.135 352.999 cv
511.085 352.438 510.761 351.919 510.225 351.538 cv
509.614 351.105 508.823 350.94 508.163 351.107 cv
506.873 351.433 505.85 352.813 505.782 354.316 cv
505.719 355.703 506.363 357.184 507.548 358.38 cv
508.755 359.599 510.354 360.394 511.613 360.951 cv
514.571 362.259 517.71 363.135 520.943 363.554 cv
521.281 363.598 521.519 363.906 521.475 364.243 cv
cp
f
542.48 67.1053 mo
541.255 70.8592 541.792 75.1364 543.919 78.5466 cv
543.941 78.5844 li
545.831 82.1312 549.267 84.7361 553.13 85.5511 cv
553.475 85.6237 553.695 85.9619 553.622 86.3063 cv
553.55 86.6508 553.212 86.8678 552.867 86.7985 cv
548.646 85.908 544.894 83.0691 542.826 79.2027 cv
540.512 75.4796 539.93 70.8107 541.269 66.7094 cv
541.357 66.4405 541.606 66.27 541.874 66.27 cv
541.94 66.27 542.007 66.2799 542.073 66.3015 cv
542.407 66.4106 542.59 66.7704 542.48 67.1053 cv
cp
508.88 78.5466 mo
511.007 75.1364 511.544 70.8592 510.318 67.1053 cv
510.209 66.7704 510.391 66.4106 510.726 66.3015 cv
510.792 66.2799 510.859 66.27 510.924 66.27 cv
511.193 66.27 511.442 66.4405 511.53 66.7094 cv
512.87 70.8107 512.287 75.4792 509.973 79.2027 cv
507.905 83.0691 504.153 85.908 499.932 86.7985 cv
499.586 86.8695 499.249 86.6508 499.177 86.3063 cv
499.104 85.9619 499.324 85.6237 499.669 85.5511 cv
503.532 84.7361 506.968 82.1312 508.858 78.5844 cv
508.88 78.5466 li
cp
526.421 108.929 mo
526.399 108.93 li
526.378 108.929 li
522.359 108.793 518.388 110.466 515.75 113.404 cv
515.514 113.667 515.112 113.688 514.85 113.453 cv
514.588 113.218 514.566 112.815 514.801 112.553 cv
517.578 109.459 521.705 107.647 525.923 107.647 cv
526.082 107.647 526.241 107.649 526.399 107.655 cv
530.779 107.519 535.116 109.343 537.998 112.553 cv
538.233 112.815 538.211 113.218 537.949 113.453 cv
537.687 113.688 537.285 113.667 537.049 113.404 cv
534.411 110.466 530.441 108.796 526.421 108.929 cv
cp
524.164 59.7926 mo
524.632 58.983 525.466 58.4754 526.399 58.431 cv
527.333 58.4754 528.167 58.983 528.635 59.7926 cv
528.999 60.4233 529.096 61.1587 528.907 61.8625 cv
528.718 62.5663 528.267 63.1543 527.636 63.5187 cv
527.253 63.7398 526.837 63.8618 526.399 63.8818 cv
525.962 63.8618 525.546 63.7398 525.163 63.5187 cv
524.532 63.1543 524.08 62.5663 523.892 61.8625 cv
523.703 61.1587 523.8 60.4233 524.164 59.7926 cv
cp
524.525 64.6225 mo
525.089 64.9483 525.729 65.1329 526.376 65.1566 cv
526.399 65.1574 li
526.423 65.1566 li
527.07 65.1329 527.71 64.9483 528.274 64.6225 cv
529.199 64.088 529.862 63.2249 530.138 62.1924 cv
530.415 61.1595 530.273 60.081 529.739 59.1552 cv
529.047 57.9571 527.808 57.2097 526.424 57.1562 cv
526.399 57.1554 li
526.375 57.1562 li
524.991 57.2097 523.752 57.9571 523.06 59.1552 cv
522.526 60.081 522.384 61.1595 522.661 62.1924 cv
522.937 63.2249 523.599 64.088 524.525 64.6225 cv
cp
500.259 101.198 mo
500.745 100.357 501.651 99.8338 502.624 99.8338 cv
503.1 99.8338 503.57 99.9603 503.985 100.2 cv
504.368 100.421 504.681 100.72 504.918 101.09 cv
505.119 101.479 505.221 101.9 505.221 102.342 cv
505.221 103.846 503.998 105.07 502.494 105.07 cv
501.559 105.07 500.702 104.601 500.197 103.815 cv
499.769 102.984 499.791 102.008 500.259 101.198 cv
cp
499.105 104.474 mo
499.844 105.645 501.111 106.344 502.494 106.344 cv
504.701 106.344 506.496 104.549 506.496 102.342 cv
506.496 101.692 506.336 101.045 506.034 100.472 cv
506.01 100.431 li
505.666 99.8832 505.186 99.4213 504.622 99.0959 cv
504.014 98.7449 503.323 98.559 502.624 98.559 cv
501.197 98.559 499.867 99.3263 499.155 100.561 cv
498.463 101.759 498.435 103.206 499.081 104.431 cv
499.105 104.474 li
cp
547.578 102.342 mo
547.578 101.899 547.68 101.478 547.881 101.09 cv
548.115 100.725 548.436 100.418 548.814 100.2 cv
549.229 99.9603 549.699 99.8338 550.175 99.8338 cv
551.148 99.8338 552.055 100.357 552.54 101.198 cv
553.008 102.008 553.03 102.984 552.602 103.815 cv
552.097 104.601 551.24 105.07 550.305 105.07 cv
548.801 105.07 547.578 103.846 547.578 102.342 cv
cp
553.693 104.474 mo
553.718 104.431 li
554.364 103.206 554.336 101.759 553.644 100.561 cv
552.931 99.3263 551.602 98.559 550.175 98.559 cv
549.476 98.559 548.785 98.7449 548.177 99.0959 cv
547.613 99.4213 547.133 99.8836 546.789 100.432 cv
546.766 100.472 li
546.463 101.044 546.303 101.691 546.303 102.342 cv
546.303 104.549 548.098 106.344 550.305 106.344 cv
551.689 106.344 552.955 105.645 553.693 104.474 cv
cp
517.685 62.819 mo
519.267 63.9656 520.076 65.4707 520.56 66.8485 cv
518.904 66.3073 517.409 65.5408 516.104 64.5627 cv
514.956 63.7021 513.978 62.5057 513.273 61.1354 cv
514.945 61.3653 516.459 61.9314 517.685 62.819 cv
cp
505.291 73.6727 mo
507.201 73.418 508.726 71.8132 508.765 70.0197 cv
508.786 69.0433 508.307 68.0689 507.483 67.4128 cv
506.729 66.8115 505.811 66.5891 504.964 66.8024 cv
504.623 66.8883 504.416 67.2348 504.502 67.5759 cv
504.588 67.9174 504.935 68.1262 505.276 68.0382 cv
505.734 67.9241 506.248 68.0585 506.689 68.4096 cv
507.195 68.8134 507.502 69.4196 507.49 69.9923 cv
507.465 71.1538 506.403 72.2382 505.123 72.4096 cv
503.503 72.6258 501.743 71.407 501.197 69.6931 cv
500.681 68.071 501.132 66.1235 502.373 64.6104 cv
503.448 63.3008 505.101 62.2857 507.155 61.6757 cv
508.746 61.2031 510.329 60.9836 511.826 61.0217 cv
512.626 62.8589 513.856 64.4706 515.339 65.5827 cv
517.065 66.8763 519.089 67.8265 521.356 68.4067 cv
522.412 68.6768 li
522.13 67.624 li
521.641 65.799 520.778 63.4859 518.433 61.7865 cv
516.826 60.623 514.854 59.9453 512.685 59.7731 cv
511.742 57.1077 511.819 54.0385 513.55 51.542 cv
514.669 49.9281 516.524 48.9268 518.273 48.9629 cv
520.126 49.0131 521.875 50.3539 522.253 52.0155 cv
522.448 52.867 522.242 53.8455 521.703 54.6336 cv
521.212 55.3515 520.528 55.8084 519.777 55.92 cv
518.819 56.0599 517.807 55.598 517.421 54.8415 cv
517.225 54.456 517.209 53.9605 517.379 53.5152 cv
517.524 53.1342 517.781 52.8562 518.101 52.7321 cv
518.429 52.6047 518.592 52.2354 518.464 51.9072 cv
518.337 51.5793 517.969 51.4158 517.64 51.5436 cv
516.979 51.7997 516.464 52.3387 516.188 53.0604 cv
515.892 53.8368 515.928 54.7191 516.285 55.4199 cv
516.918 56.6624 518.466 57.4036 519.964 57.1807 cv
521.071 57.0168 522.062 56.3673 522.756 55.3531 cv
523.491 54.2771 523.768 52.9234 523.496 51.7325 cv
522.986 49.4933 520.755 47.7545 518.308 47.6889 cv
518.256 47.6873 518.203 47.6864 518.151 47.6864 cv
516 47.6868 513.848 48.8749 512.502 50.8158 cv
510.626 53.5227 510.446 56.813 511.347 59.7308 cv
509.882 59.7523 508.347 59.9913 506.792 60.454 cv
504.493 61.1367 502.624 62.2945 501.388 63.8021 cv
499.875 65.645 499.337 68.0507 499.983 70.0799 cv
500.719 72.3938 503.05 73.9728 505.291 73.6727 cv
cp
553.159 94.0739 mo
551.375 94.8707 549.668 94.8188 548.232 94.5491 cv
549.528 93.3858 550.939 92.4746 552.439 91.833 cv
553.759 91.2695 555.283 91.0201 556.823 91.0952 cv
555.788 92.4281 554.541 93.4564 553.159 94.0739 cv
cp
549.956 77.9138 mo
549.222 79.6945 549.849 81.8179 551.383 82.7483 cv
552.218 83.255 553.302 83.3276 554.282 82.9421 cv
555.18 82.5889 555.831 81.9055 556.07 81.066 cv
556.166 80.7274 555.969 80.3746 555.631 80.2784 cv
555.293 80.1846 554.94 80.3792 554.843 80.7174 cv
554.714 81.171 554.34 81.5495 553.815 81.7557 cv
553.212 81.9914 552.533 81.9549 552.044 81.6586 cv
551.051 81.056 550.643 79.5936 551.135 78.3994 cv
551.757 76.8896 553.694 75.9742 555.45 76.3581 cv
557.112 76.722 558.574 78.0861 559.263 79.9177 cv
559.86 81.5034 559.912 83.4426 559.414 85.5262 cv
559.028 87.14 558.422 88.6194 557.645 89.8984 cv
555.654 89.6718 553.643 89.9324 551.938 90.6611 cv
549.954 91.5089 548.12 92.7866 546.484 94.459 cv
545.723 95.2383 li
546.775 95.5205 li
548.6 96.0094 551.034 96.4198 553.679 95.2375 cv
555.49 94.4283 557.063 93.0593 558.297 91.267 cv
561.076 91.7832 563.696 93.385 564.993 96.1318 cv
565.831 97.9075 565.78 100.019 564.864 101.511 cv
563.894 103.091 561.859 103.936 560.231 103.432 cv
559.396 103.174 558.652 102.507 558.239 101.647 cv
557.862 100.863 557.809 100.042 558.088 99.3354 cv
558.443 98.4349 559.353 97.7863 560.2 97.8344 cv
560.632 97.8568 561.069 98.0913 561.37 98.461 cv
561.627 98.7772 561.739 99.1379 561.687 99.4769 cv
561.633 99.8247 561.871 100.15 562.219 100.204 cv
562.565 100.257 562.893 100.02 562.946 99.6719 cv
563.055 98.9723 562.846 98.2565 562.359 97.6568 cv
561.834 97.0119 561.052 96.6024 560.267 96.5613 cv
558.869 96.4853 557.459 97.4576 556.902 98.8673 cv
556.491 99.9077 556.558 101.09 557.089 102.198 cv
557.654 103.373 558.687 104.29 559.855 104.65 cv
562.048 105.325 564.67 104.265 565.951 102.178 cv
567.104 100.301 567.178 97.7751 566.146 95.5873 cv
564.74 92.6086 561.98 90.8076 559.003 90.1291 cv
559.716 88.8497 560.276 87.4011 560.654 85.8225 cv
561.212 83.4903 561.143 81.2934 560.456 79.4688 cv
559.616 77.237 557.802 75.568 555.722 75.1132 cv
555.356 75.0326 554.985 74.9945 554.618 74.9945 cv
552.607 74.9945 550.684 76.1469 549.956 77.9138 cv
cp
508.355 109.168 mo
508.556 107.225 509.456 105.772 510.406 104.663 cv
510.766 106.368 510.85 108.046 510.655 109.665 cv
510.483 111.089 509.937 112.535 509.102 113.83 cv
508.465 112.268 508.199 110.673 508.355 109.168 cv
cp
519.051 113.293 mo
518.195 113.762 517.59 114.665 517.434 115.706 cv
517.29 116.66 517.557 117.566 518.164 118.193 cv
518.41 118.445 518.813 118.451 519.066 118.206 cv
519.318 117.961 519.324 117.558 519.079 117.305 cv
518.751 116.966 518.611 116.453 518.694 115.896 cv
518.791 115.255 519.162 114.686 519.664 114.41 cv
520.683 113.851 522.153 114.229 522.941 115.252 cv
523.938 116.546 523.763 118.68 522.551 120.009 cv
521.405 121.267 519.492 121.851 517.562 121.532 cv
515.89 121.257 514.185 120.332 512.63 118.859 cv
511.425 117.718 510.446 116.453 509.727 115.14 cv
510.918 113.529 511.699 111.657 511.921 109.817 cv
512.178 107.676 511.989 105.448 511.358 103.195 cv
511.064 102.145 li
510.293 102.916 li
508.957 104.253 507.385 106.156 507.086 109.037 cv
506.882 111.01 507.281 113.056 508.217 115.021 cv
506.379 117.17 503.684 118.638 500.655 118.387 cv
498.699 118.225 496.895 117.126 496.061 115.586 cv
495.178 113.956 495.465 111.772 496.714 110.613 cv
497.354 110.019 498.303 109.708 499.256 109.781 cv
500.124 109.847 500.861 110.211 501.333 110.805 cv
501.935 111.564 502.04 112.673 501.577 113.385 cv
501.342 113.748 500.921 114.009 500.45 114.085 cv
500.048 114.149 499.679 114.066 499.411 113.851 cv
499.137 113.631 498.736 113.674 498.515 113.948 cv
498.295 114.223 498.338 114.624 498.613 114.845 cv
499.165 115.289 499.889 115.466 500.652 115.344 cv
501.472 115.212 502.218 114.739 502.647 114.079 cv
503.406 112.91 503.273 111.2 502.332 110.013 cv
501.636 109.137 500.579 108.603 499.353 108.509 cv
498.054 108.413 496.743 108.848 495.847 109.678 cv
494.164 111.24 493.773 114.041 494.94 116.193 cv
495.99 118.131 498.139 119.458 500.55 119.658 cv
503.837 119.932 506.772 118.44 508.849 116.201 cv
509.6 117.459 510.574 118.668 511.753 119.784 cv
513.494 121.433 515.431 122.473 517.354 122.79 cv
519.707 123.178 522.06 122.441 523.494 120.868 cv
525.13 119.073 525.33 116.265 523.951 114.474 cv
522.776 112.948 520.622 112.429 519.051 113.293 cv
cp
500.36 91.833 mo
501.859 92.4741 503.271 93.3855 504.567 94.5491 cv
503.132 94.818 501.424 94.8702 499.64 94.0739 cv
498.258 93.4564 497.011 92.4281 495.976 91.0952 cv
497.516 91.0201 499.04 91.2695 500.36 91.833 cv
cp
492.944 104.65 mo
494.112 104.29 495.145 103.373 495.71 102.198 cv
496.241 101.09 496.308 99.9072 495.897 98.8673 cv
495.34 97.4581 493.936 96.4924 492.533 96.5613 cv
491.747 96.6024 490.965 97.0119 490.44 97.6568 cv
489.953 98.2565 489.744 98.9723 489.853 99.6719 cv
489.907 100.02 490.233 100.257 490.58 100.204 cv
490.928 100.15 491.166 99.8247 491.112 99.4769 cv
491.06 99.1379 491.172 98.7772 491.429 98.461 cv
491.73 98.0913 492.167 97.8568 492.599 97.8344 cv
493.452 97.7871 494.355 98.4353 494.711 99.3358 cv
494.99 100.042 494.937 100.863 494.56 101.646 cv
494.147 102.507 493.403 103.174 492.568 103.432 cv
490.94 103.935 488.904 103.091 487.935 101.511 cv
487.018 100.019 486.968 97.9075 487.806 96.1318 cv
489.103 93.3846 491.722 91.7832 494.502 91.267 cv
495.736 93.0593 497.309 94.4283 499.12 95.2375 cv
501.765 96.4193 504.199 96.0098 506.024 95.5205 cv
507.077 95.2383 li
506.315 94.459 li
504.679 92.7866 502.844 91.5085 500.86 90.6611 cv
499.156 89.9324 497.144 89.6735 495.154 89.8984 cv
494.377 88.6194 493.771 87.14 493.385 85.5262 cv
492.886 83.4422 492.939 81.503 493.536 79.9177 cv
494.225 78.0861 495.687 76.7224 497.349 76.3581 cv
499.107 75.9734 501.042 76.8893 501.664 78.3994 cv
502.156 79.5936 501.748 81.0556 500.755 81.6586 cv
500.265 81.9549 499.586 81.9918 498.984 81.7557 cv
498.459 81.5495 498.084 81.171 497.955 80.7174 cv
497.859 80.3788 497.507 80.1846 497.168 80.2784 cv
496.829 80.3746 496.633 80.7274 496.729 81.066 cv
496.968 81.9055 497.62 82.5894 498.517 82.9421 cv
499.497 83.3272 500.581 83.255 501.416 82.7483 cv
502.95 81.8179 503.576 79.6945 502.843 77.9138 cv
502.115 76.1469 500.192 74.994 498.181 74.9945 cv
497.814 74.9945 497.443 75.0326 497.077 75.1132 cv
494.997 75.5684 493.183 77.2374 492.342 79.4688 cv
491.655 81.293 491.587 83.4903 492.145 85.8225 cv
492.522 87.4011 493.083 88.8497 493.796 90.1291 cv
490.819 90.808 488.059 92.609 486.653 95.5873 cv
485.621 97.7751 485.695 100.301 486.848 102.178 cv
488.129 104.265 490.75 105.326 492.944 104.65 cv
cp
536.695 64.5627 mo
535.39 65.5413 533.895 66.3073 532.239 66.8485 cv
532.723 65.4707 533.531 63.9656 535.114 62.819 cv
536.34 61.931 537.854 61.3653 539.526 61.1354 cv
538.821 62.5057 537.843 63.7021 536.695 64.5627 cv
cp
530.043 55.3531 mo
530.737 56.3678 531.728 57.0168 532.835 57.1807 cv
534.332 57.4048 535.88 56.6624 536.514 55.4199 cv
536.871 54.7191 536.907 53.8368 536.611 53.0604 cv
536.335 52.3387 535.82 51.7997 535.159 51.5436 cv
534.831 51.4158 534.462 51.5793 534.335 51.9072 cv
534.207 52.2354 534.37 52.6047 534.698 52.7321 cv
535.018 52.8562 535.275 53.1342 535.42 53.5152 cv
535.59 53.9605 535.574 54.456 535.378 54.8411 cv
534.992 55.598 533.979 56.0607 533.021 55.92 cv
532.27 55.8084 531.586 55.3515 531.096 54.6336 cv
530.557 53.8459 530.351 52.867 530.545 52.0159 cv
530.924 50.3539 532.673 49.0131 534.526 48.9629 cv
536.269 48.9272 538.13 49.9277 539.249 51.542 cv
540.979 54.0385 541.056 57.1077 540.114 59.7731 cv
537.945 59.9453 535.973 60.623 534.367 61.7865 cv
532.02 63.4863 531.158 65.799 530.669 67.624 cv
530.387 68.6768 li
531.443 68.4067 li
533.709 67.8265 535.734 66.8763 537.459 65.5827 cv
538.943 64.4706 540.173 62.8589 540.973 61.0217 cv
542.469 60.9848 544.054 61.2031 545.644 61.6757 cv
547.698 62.2857 549.351 63.3004 550.426 64.6104 cv
551.667 66.1239 552.118 68.0714 551.602 69.6931 cv
551.056 71.407 549.298 72.6258 547.677 72.4096 cv
546.396 72.2382 545.334 71.1538 545.309 69.9923 cv
545.296 69.4196 545.603 68.8134 546.11 68.4096 cv
546.55 68.0585 547.066 67.9241 547.523 68.0382 cv
547.864 68.1253 548.211 67.9174 548.297 67.5759 cv
548.383 67.2348 548.176 66.8883 547.835 66.8024 cv
546.988 66.5882 546.07 66.8107 545.316 67.4128 cv
544.492 68.0689 544.013 69.0433 544.034 70.0197 cv
544.073 71.8132 545.599 73.418 547.508 73.6727 cv
549.749 73.9711 552.08 72.3938 552.816 70.0799 cv
553.462 68.051 552.924 65.6454 551.411 63.8021 cv
550.174 62.2945 548.306 61.1367 546.007 60.454 cv
544.451 59.9913 542.917 59.7523 541.452 59.7308 cv
542.353 56.813 542.173 53.5227 540.297 50.8158 cv
538.951 48.8745 536.799 47.6864 534.648 47.6864 cv
534.596 47.6864 534.543 47.6873 534.491 47.6889 cv
532.044 47.7545 529.813 49.4928 529.302 51.7325 cv
529.031 52.9239 529.308 54.2775 530.043 55.3531 cv
cp
543.697 113.83 mo
542.862 112.535 542.316 111.089 542.144 109.665 cv
541.949 108.045 542.033 106.368 542.392 104.663 cv
543.343 105.772 544.243 107.225 544.444 109.168 cv
544.6 110.673 544.333 112.267 543.697 113.83 cv
cp
553.446 108.509 mo
552.22 108.603 551.163 109.137 550.467 110.013 cv
549.525 111.2 549.393 112.91 550.152 114.079 cv
550.581 114.739 551.327 115.212 552.147 115.344 cv
552.91 115.466 553.634 115.289 554.186 114.845 cv
554.461 114.624 554.504 114.223 554.284 113.948 cv
554.063 113.674 553.662 113.631 553.388 113.851 cv
553.12 114.067 552.751 114.149 552.349 114.085 cv
551.878 114.009 551.457 113.748 551.221 113.385 cv
550.759 112.673 550.864 111.564 551.466 110.805 cv
551.938 110.211 552.675 109.847 553.543 109.781 cv
554.492 109.707 555.444 110.019 556.085 110.613 cv
557.334 111.772 557.621 113.956 556.738 115.586 cv
555.904 117.126 554.1 118.225 552.143 118.387 cv
549.114 118.636 546.419 117.17 544.582 115.021 cv
545.518 113.056 545.917 111.01 545.712 109.037 cv
545.414 106.156 543.842 104.253 542.505 102.916 cv
541.735 102.145 li
541.441 103.195 li
540.81 105.448 540.621 107.676 540.878 109.817 cv
541.1 111.658 541.88 113.529 543.071 115.141 cv
542.352 116.453 541.374 117.718 540.169 118.859 cv
538.614 120.332 536.909 121.257 535.237 121.532 cv
533.306 121.851 531.394 121.267 530.247 120.009 cv
529.036 118.68 528.861 116.546 529.858 115.252 cv
530.646 114.229 532.116 113.851 533.135 114.41 cv
533.637 114.686 534.008 115.255 534.105 115.896 cv
534.188 116.453 534.048 116.966 533.72 117.305 cv
533.475 117.558 533.481 117.961 533.733 118.206 cv
533.986 118.451 534.389 118.445 534.635 118.193 cv
535.242 117.566 535.509 116.66 535.365 115.706 cv
535.209 114.665 534.604 113.762 533.748 113.293 cv
532.176 112.43 530.024 112.949 528.848 114.474 cv
527.469 116.265 527.669 119.073 529.305 120.868 cv
530.739 122.442 533.091 123.178 535.445 122.79 cv
537.368 122.473 539.305 121.433 541.046 119.784 cv
542.224 118.668 543.199 117.459 543.95 116.201 cv
546.026 118.44 548.968 119.926 552.248 119.658 cv
554.659 119.459 556.809 118.131 557.859 116.193 cv
559.026 114.041 558.635 111.24 556.951 109.678 cv
556.056 108.848 554.746 108.413 553.446 108.509 cv
cp
526.399 40.2027 mo
527.817 42.6913 528.36 44.8152 527.973 46.3846 cv
527.75 47.2868 527.234 48.0039 526.399 48.5674 cv
525.565 48.0039 525.049 47.2868 524.826 46.3846 cv
524.438 44.8152 524.982 42.6913 526.399 40.2027 cv
cp
526.081 49.87 mo
526.399 50.0543 li
526.718 49.87 li
528.039 49.1077 528.878 48.0379 529.21 46.6905 cv
529.736 44.5604 528.972 41.8468 526.939 38.625 cv
526.399 37.7709 li
525.86 38.625 li
523.827 41.8468 523.063 44.5604 523.589 46.6905 cv
523.921 48.0375 524.76 49.1077 526.081 49.87 cv
cp
489.963 108.333 mo
490.519 108.333 491.086 108.472 491.654 108.747 cv
491.398 112.152 487.634 112.912 484.41 112.929 cv
486.169 109.917 488.077 108.333 489.963 108.333 cv
cp
483.314 114.185 mo
483.649 114.198 483.977 114.204 484.296 114.204 cv
491.819 114.204 492.942 110.55 492.942 108.371 cv
492.942 108.003 li
492.624 107.819 li
491.749 107.314 490.854 107.059 489.963 107.059 cv
487.391 107.059 484.906 109.2 482.775 113.251 cv
482.305 114.145 li
483.314 114.185 li
cp
568.389 112.929 mo
565.165 112.912 561.401 112.152 561.145 108.747 cv
561.713 108.472 562.28 108.333 562.836 108.333 cv
564.721 108.333 566.63 109.917 568.389 112.929 cv
cp
560.175 107.819 mo
559.856 108.003 li
559.856 108.371 li
559.856 110.55 560.98 114.204 568.503 114.204 cv
568.822 114.204 569.15 114.198 569.485 114.185 cv
570.494 114.145 li
570.024 113.251 li
567.893 109.2 565.408 107.059 562.836 107.059 cv
561.945 107.059 561.049 107.314 560.175 107.819 cv
cp
f
47.8245 93.7061 mo
47.4782 93.6735 47.1624 93.9292 47.1288 94.2794 cv
46.3503 102.358 li
54.4287 101.579 li
54.7791 101.546 55.0358 101.234 55.002 100.884 cv
54.9682 100.533 54.6538 100.278 54.3063 100.31 cv
47.7674 100.941 li
48.3978 94.4018 li
48.4316 94.0514 48.175 93.74 47.8245 93.7061 cv
cp
81.751 100.884 mo
81.7172 101.234 81.9739 101.546 82.3243 101.579 cv
90.4031 102.358 li
89.6242 94.2794 li
89.5906 93.9292 89.2779 93.6735 88.9285 93.7061 cv
88.578 93.74 88.3214 94.0514 88.3552 94.4018 cv
88.9856 100.941 li
82.4468 100.31 li
82.0988 100.278 81.7849 100.533 81.751 100.884 cv
cp
82.3243 59.0839 mo
81.9739 59.1177 81.7172 59.4292 81.751 59.7796 cv
81.7849 60.1301 82.0984 60.3848 82.4468 60.3529 cv
88.9856 59.7225 li
88.3552 66.2613 li
88.3214 66.6118 88.578 66.9232 88.9285 66.9571 cv
88.9492 66.9589 88.97 66.96 88.9905 66.96 cv
89.3148 66.96 89.5925 66.7133 89.6242 66.3838 cv
90.4031 58.3054 li
82.3243 59.0839 li
cp
54.4287 59.0839 mo
46.3503 58.3054 li
47.1288 66.3838 li
47.1606 66.7133 47.4382 66.96 47.7625 66.96 cv
47.783 66.96 47.8038 66.9589 47.8245 66.9571 cv
48.175 66.9232 48.4316 66.6118 48.3978 66.2613 cv
47.7674 59.7225 li
54.3063 60.3529 li
54.6538 60.3836 54.9682 60.1298 55.002 59.7796 cv
55.0358 59.4292 54.7791 59.1177 54.4287 59.0839 cv
cp
40.1126 108.596 mo
39.53 108.166 38.6622 108.012 37.9518 108.219 cv
36.9459 108.513 36.0717 109.42 35.6702 110.586 cv
35.4022 111.366 35.3204 112.271 35.4262 113.282 cv
36.4402 113.388 37.3434 113.306 38.1215 113.038 cv
39.2884 112.636 40.1956 111.762 40.489 110.757 cv
40.7006 110.03 40.5526 109.191 40.1126 108.596 cv
cp
41.0662 107.745 mo
41.8009 108.67 42.0489 109.961 41.7127 111.113 cv
41.3052 112.51 40.0883 113.71 38.5363 114.243 cv
37.8447 114.481 37.0789 114.602 36.2599 114.602 cv
35.7827 114.602 35.2779 114.561 34.7594 114.48 cv
34.3 114.408 li
34.2282 113.949 li
34.0078 112.539 34.0875 111.268 34.4647 110.172 cv
34.9988 108.62 36.1981 107.403 37.5949 106.996 cv
37.9259 106.899 38.274 106.85 38.6295 106.85 cv
39.4916 106.85 40.3205 107.131 40.9635 107.642 cv
41.0662 107.745 li
cp
101.083 110.587 mo
100.681 109.42 99.8071 108.512 98.8014 108.219 cv
98.092 108.013 97.2235 108.166 96.6405 108.596 cv
96.2006 109.191 96.0524 110.03 96.2643 110.757 cv
96.5574 111.762 97.4646 112.636 98.6313 113.038 cv
99.41 113.306 100.313 113.388 101.327 113.282 cv
101.433 112.271 101.351 111.366 101.083 110.587 cv
cp
102.288 110.172 mo
102.666 111.269 102.745 112.539 102.525 113.949 cv
102.453 114.408 li
101.994 114.48 li
101.475 114.561 100.97 114.602 100.493 114.602 cv
99.6743 114.602 98.9083 114.481 98.2165 114.243 cv
96.6647 113.709 95.4476 112.51 95.0405 111.113 cv
94.7044 109.961 94.9521 108.67 95.6868 107.745 cv
95.7895 107.642 li
96.4325 107.131 97.2615 106.85 98.1236 106.85 cv
98.4792 106.85 98.8274 106.899 99.1583 106.996 cv
100.555 107.403 101.754 108.62 102.288 110.172 cv
cp
96.6405 52.0675 mo
97.2235 52.498 98.0916 52.6513 98.8014 52.444 cv
99.8071 52.1507 100.681 51.2435 101.083 50.0768 cv
101.351 49.2973 101.433 48.3924 101.327 47.3813 cv
100.312 47.2749 99.4092 47.3575 98.6315 47.6253 cv
97.4646 48.0268 96.5576 48.901 96.2643 49.9069 cv
96.0524 50.6333 96.2006 51.4726 96.6405 52.0675 cv
cp
95.6868 52.9186 mo
94.9521 51.9932 94.7044 50.7026 95.0405 49.55 cv
95.4478 48.1532 96.6647 46.9539 98.2167 46.4198 cv
99.311 46.0428 100.585 45.9625 101.993 46.1833 cv
102.453 46.2551 li
102.525 46.7144 li
102.745 48.1241 102.666 49.3948 102.288 50.4916 cv
101.754 52.0434 100.555 53.2603 99.1583 53.6678 cv
98.8274 53.7643 98.4794 53.8133 98.1238 53.8133 cv
97.2617 53.8133 96.4328 53.5319 95.7895 53.0213 cv
95.6868 52.9186 li
cp
35.6702 50.0766 mo
36.0717 51.2435 36.9459 52.1507 37.9518 52.444 cv
38.6622 52.6509 39.5295 52.4976 40.1126 52.0675 cv
40.5526 51.4724 40.7008 50.6331 40.489 49.9069 cv
40.1956 48.901 39.2884 48.0268 38.1217 47.6253 cv
37.3434 47.3577 36.4407 47.2753 35.4262 47.3813 cv
35.3204 48.3928 35.4022 49.2977 35.6702 50.0766 cv
cp
34.4647 50.4914 mo
34.0875 49.3954 34.0078 48.1248 34.2282 46.7147 cv
34.3 46.2551 li
34.7596 46.1833 li
36.168 45.9629 37.442 46.0432 38.5365 46.4198 cv
40.0881 46.9537 41.3052 48.1532 41.7127 49.55 cv
42.0489 50.7024 41.8011 51.9932 41.0662 52.9186 cv
40.9635 53.0213 li
40.3203 53.5319 39.4914 53.8133 38.6293 53.8133 cv
38.2738 53.8133 37.9259 53.7643 37.5949 53.6678 cv
36.1981 53.2603 34.9986 52.0432 34.4647 50.4914 cv
cp
31.3659 80.3316 mo
31.2287 80.2274 31.0889 80.1276 30.9468 80.0332 cv
30.3004 79.6031 29.7257 79.3637 29.1897 79.3008 cv
28.6023 79.2325 28.0137 79.405 27.6751 79.7531 cv
27.5263 79.906 27.4203 80.1133 27.3777 80.3316 cv
27.4203 80.5499 27.5263 80.7574 27.6749 80.9101 cv
28.0137 81.2584 28.6023 81.4307 29.1897 81.3626 cv
29.7255 81.2998 30.3002 81.0601 30.9468 80.6302 cv
31.0887 80.5358 31.2285 80.4362 31.3659 80.3316 cv
cp
32.3166 81.2022 mo
32.1007 81.375 31.88 81.5405 31.6526 81.6917 cv
30.8354 82.2353 30.0782 82.5418 29.3381 82.6287 cv
29.203 82.6445 29.0663 82.6526 28.9293 82.6526 cv
28.0788 82.6526 27.2885 82.3413 26.7609 81.7988 cv
26.3999 81.4275 26.165 80.9341 26.1 80.41 cv
26.0905 80.3316 li
26.1 80.2532 li
26.1652 79.7288 26.3999 79.2354 26.7613 78.8642 cv
27.3736 78.2349 28.365 77.9212 29.3379 78.0347 cv
30.0782 78.1214 30.8354 78.4279 31.6528 78.9717 cv
31.8803 79.1231 32.1009 79.2884 32.3166 79.461 cv
35.6971 75.9582 42.1135 68.856 42.8491 66.5896 cv
43.5463 64.4413 43.2828 62.1605 42.1615 60.6378 cv
41.9528 60.3543 42.0134 59.9554 42.297 59.7466 cv
42.5807 59.5383 42.9797 59.5987 43.1882 59.8821 cv
44.5692 61.7578 44.8958 64.4124 44.0617 66.983 cv
43.1175 69.8918 35.2618 78.2242 33.2734 80.3018 cv
33.3061 80.3316 li
33.2734 80.3614 li
35.2618 82.439 43.1175 90.7714 44.0617 93.6802 cv
44.8958 96.2507 44.5692 98.9054 43.1882 100.781 cv
43.0633 100.951 42.8701 101.041 42.6744 101.041 cv
42.5431 101.041 42.4107 101 42.297 100.917 cv
42.0134 100.708 41.9528 100.309 42.1615 100.025 cv
43.2828 98.5027 43.5463 96.2219 42.8491 94.0736 cv
42.1135 91.8072 35.6971 84.705 32.3166 81.2022 cv
cp
69.4075 119.519 mo
69.3447 118.983 69.105 118.408 68.6751 117.761 cv
68.5805 117.619 68.4809 117.479 68.3765 117.342 cv
68.2724 117.479 68.1728 117.619 68.0781 117.761 cv
67.648 118.408 67.4086 118.982 67.3457 119.519 cv
67.276 120.114 67.4494 120.694 67.7982 121.034 cv
67.9507 121.182 68.1582 121.288 68.3765 121.33 cv
68.5948 121.288 68.8023 121.182 68.9552 121.033 cv
69.3038 120.694 69.4772 120.114 69.4075 119.519 cv
cp
82.1185 105.859 mo
79.8524 106.595 72.7501 113.011 69.2472 116.392 cv
69.4197 116.607 69.5851 116.828 69.7366 117.055 cv
70.2802 117.873 70.5867 118.63 70.6736 119.37 cv
70.7902 120.365 70.48 121.328 69.8439 121.947 cv
69.4723 122.309 68.979 122.543 68.4549 122.608 cv
68.3765 122.618 li
68.2981 122.608 li
67.7737 122.543 67.2806 122.309 66.9093 121.947 cv
66.2732 121.328 65.963 120.365 66.0796 119.37 cv
66.1663 118.63 66.4728 117.873 67.0166 117.055 cv
67.1683 116.827 67.3336 116.607 67.5058 116.392 cv
64.0029 113.011 56.9007 106.595 54.6345 105.859 cv
52.486 105.162 50.2059 105.425 48.6827 106.547 cv
48.4001 106.755 48.0005 106.695 47.7915 106.411 cv
47.5828 106.128 47.6434 105.729 47.927 105.52 cv
49.8027 104.138 52.4582 103.812 55.0279 104.647 cv
57.9363 105.591 66.2693 113.447 68.3468 115.435 cv
68.3765 115.402 li
68.4062 115.435 li
70.4837 113.447 78.8167 105.591 81.7251 104.647 cv
84.2953 103.813 86.9501 104.139 88.826 105.52 cv
89.1096 105.729 89.1702 106.128 88.9615 106.411 cv
88.7527 106.695 88.3538 106.755 88.0703 106.547 cv
86.5476 105.425 84.2673 105.162 82.1185 105.859 cv
cp
67.3457 41.1448 mo
67.4086 41.6808 67.648 42.2555 68.0781 42.9016 cv
68.1726 43.0437 68.2724 43.1838 68.3765 43.321 cv
68.4811 43.1836 68.5807 43.0437 68.6751 42.9018 cv
69.105 42.2553 69.3447 41.6806 69.4075 41.1446 cv
69.4772 40.5495 69.3038 39.9692 68.9552 39.6301 cv
68.8023 39.4814 68.5948 39.3754 68.3765 39.3328 cv
68.1582 39.3754 67.9509 39.4814 67.7984 39.6297 cv
67.4494 39.9692 67.276 40.5495 67.3457 41.1448 cv
cp
54.6345 54.8042 mo
56.9009 54.0685 64.0032 47.6522 67.5059 44.2717 cv
67.3333 44.0559 67.168 43.8353 67.0166 43.6077 cv
66.4728 42.7904 66.1663 42.0333 66.0796 41.293 cv
65.963 40.2978 66.2732 39.3345 66.9096 38.716 cv
67.2804 38.3549 67.7737 38.1203 68.2981 38.0551 cv
68.3765 38.0456 li
68.4549 38.0551 li
68.979 38.12 69.4725 38.3549 69.8439 38.7161 cv
70.48 39.3345 70.7902 40.2978 70.6736 41.293 cv
70.5867 42.0333 70.2802 42.7904 69.7366 43.6077 cv
69.5854 43.8351 69.4199 44.0558 69.2472 44.2717 cv
72.7499 47.6522 79.8522 54.0685 82.1185 54.8042 cv
84.2668 55.5018 86.5474 55.2379 88.0703 54.1166 cv
88.3538 53.9081 88.7527 53.9687 88.9615 54.2521 cv
89.1702 54.5355 89.1096 54.9345 88.826 55.1433 cv
87.6358 56.0195 86.1318 56.4714 84.5347 56.4714 cv
83.6149 56.4714 82.6646 56.3216 81.7251 56.0168 cv
78.8163 55.0726 70.4839 47.2169 68.4064 45.2285 cv
68.3765 45.2612 li
68.3467 45.2285 li
66.2691 47.2169 57.9367 55.0726 55.0279 56.0168 cv
52.4569 56.8513 49.8023 56.5245 47.927 55.1433 cv
47.6434 54.9345 47.5828 54.5355 47.7915 54.2521 cv
48.0005 53.9687 48.4001 53.9081 48.6827 54.1166 cv
50.2059 55.2381 52.4862 55.5016 54.6345 54.8042 cv
cp
109.375 80.3316 mo
109.333 80.1133 109.227 79.9058 109.078 79.7533 cv
108.739 79.4052 108.151 79.2325 107.563 79.3008 cv
107.027 79.3637 106.453 79.6031 105.806 80.0332 cv
105.664 80.1279 105.524 80.2274 105.387 80.3316 cv
105.524 80.436 105.664 80.5358 105.806 80.6302 cv
106.453 81.0601 107.027 81.2998 107.564 81.3626 cv
108.149 81.4307 108.739 81.2582 109.078 80.9101 cv
109.227 80.7574 109.333 80.5499 109.375 80.3316 cv
cp
110.662 80.3316 mo
110.653 80.41 li
110.588 80.9341 110.353 81.4274 109.992 81.7988 cv
109.465 82.3413 108.674 82.6526 107.824 82.6526 cv
107.687 82.6526 107.55 82.6445 107.415 82.6287 cv
106.675 82.5418 105.918 82.2353 105.1 81.6917 cv
104.873 81.5402 104.652 81.3748 104.437 81.2023 cv
101.056 84.7052 94.6396 91.8074 93.9041 94.0736 cv
93.2067 96.2219 93.4702 98.5024 94.5915 100.025 cv
94.8002 100.309 94.7396 100.708 94.456 100.917 cv
94.3423 101 94.2099 101.041 94.0786 101.041 cv
93.8829 101.041 93.6897 100.951 93.5649 100.781 cv
92.1836 98.9054 91.8572 96.2507 92.6915 93.6802 cv
93.6355 90.7718 101.492 82.4388 103.48 80.3613 cv
103.447 80.3316 li
103.48 80.3019 li
101.492 78.2244 93.6355 69.8914 92.6915 66.983 cv
91.8572 64.4124 92.1836 61.7578 93.5649 59.8821 cv
93.774 59.5987 94.1732 59.5383 94.456 59.7466 cv
94.7396 59.9554 94.8002 60.3543 94.5915 60.6378 cv
93.4702 62.1607 93.2067 64.4413 93.9041 66.5896 cv
94.6396 68.8558 101.056 75.9579 104.437 79.4609 cv
104.652 79.2887 104.872 79.1233 105.1 78.9717 cv
105.917 78.4279 106.675 78.1214 107.415 78.0347 cv
108.387 77.9206 109.379 78.2345 109.992 78.8644 cv
110.353 79.2356 110.588 79.7288 110.653 80.2532 cv
110.662 80.3316 li
cp
53.1146 108.172 mo
52.3086 107.532 51.2997 107.298 50.4185 107.547 cv
49.363 107.845 48.6126 108.879 48.7099 109.901 cv
48.7651 110.482 49.1128 111.026 49.6398 111.356 cv
50.1287 111.661 50.6951 111.729 51.1927 111.543 cv
51.5224 111.419 51.6892 111.052 51.5655 110.722 cv
51.4417 110.392 51.0738 110.225 50.7449 110.349 cv
50.57 110.414 50.3864 110.319 50.3154 110.275 cv
50.1285 110.158 49.9963 109.964 49.9789 109.78 cv
49.9395 109.366 50.2994 108.906 50.7647 108.774 cv
51.2468 108.639 51.843 108.79 52.3218 109.17 cv
53.0445 109.744 53.4084 110.774 53.2068 111.674 cv
53.0053 112.575 52.237 113.351 51.3386 113.562 cv
49.9013 113.901 48.4445 112.905 47.6388 111.77 cv
46.8782 110.698 46.4663 109.428 46.0302 108.083 cv
45.9383 107.8 45.8465 107.517 45.7515 107.237 cv
45.3453 106.037 44.9547 105.17 44.4852 104.423 cv
44.408 104.3 li
44.2852 104.223 li
43.5386 103.753 42.6709 103.363 41.4718 102.957 cv
41.1919 102.862 40.91 102.771 40.6274 102.679 cv
39.2816 102.242 38.0105 101.83 36.938 101.069 cv
35.8033 100.264 34.8092 98.8075 35.1466 97.3696 cv
35.3574 96.4713 36.1336 95.703 37.0341 95.5013 cv
37.9352 95.3007 38.9643 95.6638 39.538 96.3863 cv
39.9182 96.8653 40.07 97.4621 39.9344 97.9434 cv
39.803 98.4087 39.3405 98.7676 38.9282 98.7292 cv
38.7444 98.7118 38.5504 98.5796 38.4334 98.3927 cv
38.3892 98.3217 38.2931 98.1379 38.3587 97.9632 cv
38.4824 97.6337 38.3155 97.2662 37.9858 97.1426 cv
37.6565 97.0185 37.2891 97.1855 37.1652 97.5154 cv
36.9785 98.013 37.0467 98.579 37.3524 99.068 cv
37.6819 99.5953 38.2257 99.943 38.8075 99.9982 cv
39.8281 100.098 40.8633 99.3453 41.161 98.2896 cv
41.41 97.4079 41.1766 96.4002 40.5365 95.5937 cv
39.6563 94.485 38.1367 93.9472 36.7556 94.2572 cv
35.3742 94.5666 34.2288 95.7003 33.9054 97.0782 cv
33.4329 99.0927 34.7175 101.056 36.2002 102.109 cv
37.4318 102.983 38.8564 103.445 40.2342 103.892 cv
40.5116 103.981 40.7884 104.071 41.0631 104.164 cv
42.0953 104.514 42.8494 104.844 43.4824 105.226 cv
43.864 105.858 44.1943 106.613 44.5439 107.645 cv
44.6373 107.921 44.7274 108.198 44.8174 108.476 cv
45.2639 109.854 45.7258 111.277 46.5993 112.508 cv
47.5006 113.778 49.0699 114.902 50.7673 114.902 cv
51.052 114.902 51.3406 114.871 51.6299 114.803 cv
53.008 114.479 54.1417 113.334 54.4509 111.953 cv
54.76 110.571 54.2231 109.052 53.1146 108.172 cv
cp
99.9976 94.2572 mo
98.6155 93.947 97.0969 94.4848 96.2168 95.5937 cv
95.5766 96.3997 95.3432 97.4077 95.5922 98.2896 cv
95.8899 99.3451 96.9222 100.1 97.9455 99.9982 cv
98.5274 99.943 99.0714 99.5953 99.4007 99.0683 cv
99.7065 98.579 99.7745 98.013 99.5878 97.5154 cv
99.464 97.1855 99.0955 97.0185 98.7672 97.1426 cv
98.4375 97.2662 98.2707 97.6337 98.3943 97.9632 cv
98.4599 98.1379 98.3638 98.3217 98.3196 98.3927 cv
98.2028 98.5796 98.0086 98.7118 97.8248 98.7292 cv
97.4113 98.7628 96.9504 98.4089 96.8189 97.9434 cv
96.6832 97.4619 96.8349 96.8653 97.2152 96.3863 cv
97.7891 95.6636 98.8183 95.2999 99.719 95.5013 cv
100.619 95.703 101.396 96.4713 101.606 97.3696 cv
101.944 98.8075 100.95 100.264 99.815 101.069 cv
98.7427 101.83 97.4719 102.242 96.1263 102.679 cv
95.8437 102.77 95.5613 102.862 95.2814 102.957 cv
94.0819 103.363 93.2144 103.753 92.4678 104.223 cv
92.345 104.3 li
92.2678 104.423 li
91.7983 105.17 91.4078 106.037 91.0015 107.237 cv
90.9067 107.516 90.8152 107.799 90.7237 108.081 cv
90.2874 109.427 89.8752 110.698 89.1142 111.77 cv
88.3085 112.905 86.8524 113.899 85.4145 113.562 cv
84.5162 113.351 83.7479 112.575 83.5462 111.674 cv
83.3448 110.774 83.7087 109.744 84.4312 109.17 cv
84.9105 108.79 85.5074 108.639 85.9884 108.774 cv
86.4536 108.906 86.8136 109.366 86.7741 109.78 cv
86.7567 109.964 86.6245 110.158 86.4376 110.275 cv
86.3666 110.319 86.1836 110.415 86.0081 110.349 cv
85.6792 110.225 85.3111 110.392 85.1875 110.722 cv
85.0638 111.052 85.2306 111.419 85.5603 111.543 cv
86.0573 111.73 86.6239 111.662 87.1132 111.356 cv
87.6402 111.026 87.9879 110.482 88.0431 109.901 cv
88.1404 108.879 87.39 107.845 86.3345 107.547 cv
85.4522 107.297 84.4445 107.532 83.6386 108.172 cv
82.53 109.052 81.993 110.571 82.3021 111.953 cv
82.6117 113.334 83.7452 114.479 85.1231 114.803 cv
85.4126 114.871 85.7008 114.902 85.9857 114.902 cv
87.683 114.902 89.2524 113.778 90.1537 112.508 cv
91.0277 111.277 91.4895 109.852 91.9362 108.475 cv
92.0263 108.197 92.1159 107.92 92.2091 107.645 cv
92.5587 106.613 92.8892 105.858 93.2706 105.226 cv
93.9034 104.844 94.6577 104.514 95.6901 104.164 cv
95.9649 104.071 96.2421 103.981 96.5195 103.891 cv
97.897 103.445 99.3216 102.983 100.553 102.109 cv
102.036 101.056 103.32 99.0925 102.848 97.0782 cv
102.524 95.7003 101.379 94.5668 99.9976 94.2572 cv
cp
83.6386 52.4916 mo
84.4451 53.1317 85.4526 53.3651 86.3345 53.1161 cv
87.39 52.8184 88.1404 51.7845 88.0431 50.7626 cv
87.9879 50.1807 87.6402 49.6369 87.113 49.3075 cv
86.6239 49.0016 86.0573 48.9338 85.5603 49.1203 cv
85.2306 49.2439 85.0638 49.6114 85.1875 49.9409 cv
85.3111 50.2704 85.6792 50.4374 86.0081 50.3137 cv
86.1832 50.248 86.3664 50.3438 86.4376 50.3885 cv
86.6245 50.5055 86.7567 50.6995 86.7741 50.8833 cv
86.8136 51.2973 86.4536 51.7579 85.9884 51.8894 cv
85.5074 52.0251 84.9105 51.8732 84.4312 51.4931 cv
83.7085 50.9192 83.3446 49.8897 83.5462 48.9891 cv
83.7479 48.0886 84.5162 47.3124 85.4145 47.1016 cv
86.8524 46.7649 88.3087 47.7583 89.1142 48.8931 cv
89.8752 49.9656 90.2874 51.2367 90.7237 52.5824 cv
90.8154 52.865 90.9069 53.147 91.0015 53.4269 cv
91.4076 54.626 91.798 55.4937 92.2678 56.2403 cv
92.345 56.3631 li
92.4678 56.4403 li
93.2144 56.9098 94.0819 57.3003 95.2814 57.7066 cv
95.5619 57.8016 95.8449 57.8933 96.1282 57.9852 cv
97.4731 58.4214 98.7434 58.8333 99.815 59.5939 cv
100.95 60.3994 101.944 61.8559 101.606 63.2936 cv
101.396 64.1921 100.619 64.9604 99.7192 65.1619 cv
98.8184 65.3631 97.7889 64.9996 97.2152 64.2767 cv
96.8349 63.798 96.683 63.2013 96.8189 62.7197 cv
96.9504 62.2545 97.4098 61.8958 97.825 61.934 cv
98.0086 61.9514 98.2028 62.0836 98.3196 62.2705 cv
98.3638 62.3415 98.4599 62.5253 98.3943 62.7 cv
98.2707 63.0295 98.4375 63.397 98.7672 63.5206 cv
99.0955 63.6445 99.464 63.4777 99.5878 63.1478 cv
99.7745 62.6502 99.7065 62.0842 99.4007 61.5949 cv
99.0714 61.0679 98.5274 60.7202 97.9455 60.665 cv
96.9249 60.5685 95.8899 61.3183 95.5922 62.3736 cv
95.343 63.2557 95.5766 64.2636 96.2168 65.0695 cv
96.9309 65.9692 98.0663 66.4925 99.2071 66.4925 cv
99.472 66.4925 99.7374 66.4643 99.9976 66.406 cv
101.379 66.0968 102.524 64.9631 102.848 63.585 cv
103.32 61.5706 102.036 59.607 100.553 58.5544 cv
99.3222 57.6808 97.8984 57.219 96.5214 56.7725 cv
96.2433 56.6824 95.9657 56.5924 95.6901 56.499 cv
94.6577 56.1494 93.9034 55.8191 93.2706 55.4375 cv
92.889 54.8044 92.5587 54.0504 92.2091 53.0182 cv
92.1162 52.7435 92.0263 52.4666 91.9365 52.1892 cv
91.4898 50.8115 91.0278 49.3869 90.1537 48.1552 cv
89.1014 46.6725 87.1373 45.3892 85.1231 45.8604 cv
83.7452 46.1839 82.6115 47.3292 82.3021 48.7107 cv
81.993 50.0919 82.53 51.6112 83.6386 52.4916 cv
cp
33.9054 63.585 mo
33.4329 61.5705 34.7175 59.6068 36.2002 58.5544 cv
37.4312 57.6806 38.8552 57.219 40.2323 56.7725 cv
40.5101 56.6822 40.7878 56.5924 41.0631 56.499 cv
42.0953 56.1494 42.8494 55.8191 43.4824 55.4375 cv
43.864 54.8044 44.1943 54.0504 44.5439 53.0182 cv
44.6373 52.7428 44.7271 52.4652 44.8174 52.1874 cv
45.2639 50.8103 45.7256 49.3863 46.5993 48.1552 cv
47.6517 46.6728 49.6156 45.3886 51.6299 45.8604 cv
53.008 46.1839 54.1417 47.3295 54.4509 48.7107 cv
54.76 50.0919 54.2231 51.6114 53.1145 52.4916 cv
52.3079 53.1315 51.2991 53.3657 50.4185 53.1161 cv
49.363 52.8184 48.6126 51.7845 48.7099 50.7626 cv
48.7651 50.1807 49.1128 49.6369 49.6401 49.3075 cv
50.1291 49.0016 50.6954 48.9338 51.1927 49.1203 cv
51.5224 49.2439 51.6892 49.6114 51.5655 49.9409 cv
51.4417 50.2704 51.0738 50.4374 50.7449 50.3137 cv
50.5688 50.248 50.3866 50.3438 50.3154 50.3885 cv
50.1285 50.5055 49.9963 50.6995 49.9789 50.8833 cv
49.9395 51.2973 50.2993 51.7579 50.7647 51.8894 cv
51.2458 52.0247 51.8426 51.8732 52.3218 51.4931 cv
53.0445 50.9194 53.4084 49.8897 53.2068 48.9891 cv
53.0053 48.0886 52.237 47.3124 51.3386 47.1016 cv
49.9027 46.7649 48.4447 47.7583 47.6388 48.8931 cv
46.8782 49.965 46.4661 51.2356 46.03 52.5806 cv
45.938 52.8638 45.8463 53.1464 45.7515 53.4269 cv
45.3454 54.626 44.955 55.4937 44.4852 56.2403 cv
44.408 56.3631 li
44.2852 56.4403 li
43.5386 56.91 42.6709 57.3005 41.4718 57.7066 cv
41.1913 57.8014 40.9087 57.8931 40.6255 57.9851 cv
39.2806 58.4212 38.0099 58.8333 36.938 59.5939 cv
35.8033 60.3994 34.8092 61.8557 35.1466 63.2936 cv
35.3574 64.1921 36.1336 64.9604 37.0341 65.1619 cv
37.9354 65.364 38.9643 64.9996 39.538 64.2769 cv
39.9184 63.7979 40.07 63.2013 39.9344 62.7197 cv
39.8028 62.2545 39.3447 61.8958 38.9282 61.934 cv
38.7444 61.9514 38.5504 62.0836 38.4334 62.2705 cv
38.3892 62.3415 38.2931 62.5253 38.3587 62.7 cv
38.4824 63.0295 38.3155 63.397 37.9858 63.5206 cv
37.6565 63.6445 37.2891 63.4777 37.1652 63.1478 cv
36.9785 62.6502 37.0467 62.0842 37.3524 61.5952 cv
37.6819 61.0679 38.2257 60.7202 38.8075 60.665 cv
39.8294 60.5685 40.8633 61.3181 41.161 62.3736 cv
41.41 63.2555 41.1766 64.2632 40.5365 65.0695 cv
39.8223 65.9692 38.6869 66.4925 37.5461 66.4925 cv
37.2812 66.4925 37.016 66.4643 36.7556 66.406 cv
35.3744 66.0968 34.2288 64.9631 33.9054 63.585 cv
cp
f
298.112 121.303 mo
298.07 122.046 297.813 122.797 297.388 123.444 cv
296.964 122.797 296.706 122.047 296.664 121.303 cv
296.613 120.395 296.878 119.452 297.388 118.666 cv
297.898 119.452 298.163 120.395 298.112 121.303 cv
cp
297.388 116.697 mo
296.921 117.199 li
295.863 118.337 295.306 119.859 295.391 121.375 cv
295.465 122.672 296.008 123.926 296.921 124.908 cv
297.388 125.41 li
297.855 124.908 li
298.768 123.926 299.311 122.672 299.385 121.375 cv
299.47 119.859 298.913 118.337 297.855 117.199 cv
297.388 116.697 li
cp
296.664 39.3604 mo
296.706 38.6166 296.964 37.8665 297.388 37.2193 cv
297.813 37.8665 298.07 38.6168 298.112 39.3604 cv
298.163 40.2686 297.898 41.2112 297.388 41.997 cv
296.878 41.2114 296.613 40.2686 296.664 39.3604 cv
cp
297.388 43.9665 mo
297.855 43.4641 li
298.913 42.3261 299.47 40.8039 299.385 39.2882 cv
299.311 37.9916 298.768 36.7369 297.855 35.7551 cv
297.388 35.2532 li
296.921 35.7551 li
296.008 36.7367 295.465 37.9914 295.391 39.2884 cv
295.306 40.8043 295.863 42.3265 296.921 43.4644 cv
297.388 43.9665 li
cp
269.941 107.99 mo
269.401 108.731 268.529 109.241 267.664 109.322 cv
267.201 109.365 266.527 109.304 265.949 108.761 cv
265.541 108.378 265.316 107.818 265.316 107.184 cv
265.316 106.379 265.665 105.57 266.25 105.021 cv
267.38 103.96 269.082 103.321 270.912 103.268 cv
271.356 104.972 270.878 106.703 269.941 107.99 cv
cp
292.028 107.525 mo
289.872 107.525 288.867 108.871 288.661 110.023 cv
288.418 111.389 289.139 112.712 290.376 113.167 cv
290.707 113.289 291.073 113.12 291.195 112.789 cv
291.316 112.459 291.147 112.093 290.817 111.971 cv
290.073 111.697 289.801 110.896 289.916 110.247 cv
290.078 109.341 290.867 108.8 292.028 108.8 cv
293.705 108.8 295.197 110.47 295.242 111.837 cv
295.288 113.238 294.774 114.408 293.755 115.22 cv
292.448 116.262 290.495 116.573 288.529 116.055 cv
285.03 115.131 283.168 112.51 281.501 109.809 cv
280.958 108.57 280.162 107.441 279.266 106.236 cv
279.221 106.176 279.167 106.128 279.108 106.089 cv
278.698 105.544 278.264 105.039 277.786 104.589 cv
276.057 102.966 273.924 102.17 271.845 102.031 cv
271.478 101.179 270.904 100.349 270.085 99.5789 cv
269.182 98.7315 268.106 98.0184 267.065 97.3287 cv
265.27 96.1402 263.575 95.0177 262.617 93.2451 cv
261.155 90.539 261.077 87.7113 262.404 85.4869 cv
263.533 83.5929 265.555 82.4623 267.813 82.4623 cv
270.907 82.4623 272.577 84.5996 272.577 86.6108 cv
272.577 87.8419 271.919 88.8602 270.771 89.4049 cv
269.559 89.9798 268.103 89.8831 267.23 89.1706 cv
266.135 88.2768 li
266.19 89.6887 li
266.27 91.7618 267.263 93.7003 268.847 94.8745 cv
270.486 96.0889 272.642 96.5047 274.614 95.9869 cv
274.955 95.8976 275.158 95.549 275.069 95.2085 cv
274.98 94.868 274.632 94.6647 274.291 94.7539 cv
272.712 95.1685 270.917 94.8222 269.606 93.8503 cv
268.633 93.1289 267.936 92.0427 267.631 90.8179 cv
268.766 91.2022 270.119 91.1256 271.317 90.5566 cv
272.928 89.7925 273.852 88.3543 273.852 86.6108 cv
273.852 83.945 271.593 81.1875 267.813 81.1875 cv
265.102 81.1875 262.671 82.5507 261.309 84.8341 cv
259.747 87.4537 259.815 90.7401 261.496 93.851 cv
262.605 95.9045 264.514 97.1687 266.361 98.3916 cv
267.404 99.0821 268.388 99.7347 269.212 100.508 cv
269.729 100.993 270.126 101.508 270.418 102.037 cv
268.441 102.188 266.619 102.926 265.378 104.092 cv
264.541 104.877 264.042 106.033 264.042 107.184 cv
264.042 108.174 264.409 109.064 265.077 109.69 cv
265.797 110.368 266.759 110.688 267.783 110.591 cv
269.02 110.475 270.211 109.784 270.971 108.741 cv
272.051 107.259 272.633 105.296 272.249 103.333 cv
273.889 103.542 275.545 104.234 276.913 105.518 cv
278.043 106.58 278.949 108.07 279.908 109.647 cv
280.057 109.892 280.208 110.14 280.361 110.389 cv
280.483 110.673 280.593 110.96 280.678 111.254 cv
281.05 112.533 281.058 114.321 279.967 115.505 cv
278.935 116.625 276.963 116.8 275.749 115.878 cv
275.146 115.419 274.755 114.749 274.703 114.085 cv
274.651 113.407 274.985 112.717 275.515 112.408 cv
276.038 112.101 276.786 112.2 277.149 112.625 cv
277.378 112.893 277.78 112.924 278.047 112.695 cv
278.315 112.466 278.347 112.064 278.118 111.796 cv
277.355 110.904 275.928 110.689 274.871 111.307 cv
273.921 111.863 273.343 113.018 273.432 114.183 cv
273.511 115.204 274.089 116.218 274.978 116.893 cv
275.733 117.466 276.673 117.745 277.615 117.744 cv
278.84 117.744 280.07 117.274 280.905 116.368 cv
281.689 115.518 282.12 114.341 282.17 113.061 cv
283.622 114.93 285.466 116.564 288.204 117.287 cv
288.934 117.48 289.666 117.575 290.376 117.575 cv
291.956 117.574 293.431 117.108 294.549 116.217 cv
295.877 115.159 296.575 113.589 296.516 111.795 cv
296.451 109.821 294.476 107.525 292.028 107.525 cv
cp
324.835 52.6731 mo
325.375 51.9326 326.247 51.4224 327.112 51.341 cv
327.187 51.3342 327.266 51.3298 327.35 51.3298 cv
327.789 51.3298 328.342 51.4466 328.827 51.9021 cv
329.235 52.2851 329.46 52.8449 329.46 53.4788 cv
329.46 54.2845 329.111 55.0935 328.526 55.6425 cv
327.396 56.704 325.694 57.3424 323.864 57.3958 cv
323.42 55.6917 323.898 53.96 324.835 52.6731 cv
cp
302.748 53.1383 mo
304.904 53.1383 305.909 51.7925 306.115 50.6401 cv
306.358 49.274 305.637 47.9517 304.4 47.4961 cv
304.07 47.3747 303.703 47.544 303.581 47.8741 cv
303.459 48.2044 303.629 48.5709 303.959 48.6924 cv
304.703 48.9663 304.975 49.767 304.86 50.4165 cv
304.698 51.3225 303.909 51.8635 302.748 51.8635 cv
301.072 51.8635 299.579 50.1932 299.534 48.826 cv
299.488 47.4249 300.002 46.2551 301.021 45.4432 cv
302.328 44.4013 304.282 44.0893 306.247 44.6086 cv
309.746 45.5329 311.609 48.1547 313.276 50.8563 cv
313.819 52.0939 314.615 53.2225 315.51 54.4276 cv
315.554 54.4865 315.608 54.5319 315.665 54.5709 cv
316.076 55.1166 316.511 55.6235 316.991 56.0741 cv
318.719 57.697 320.852 58.493 322.931 58.6324 cv
323.298 59.4837 323.871 60.3147 324.691 61.0843 cv
325.594 61.9319 326.67 62.645 327.712 63.3347 cv
329.506 64.5232 331.201 65.6457 332.159 67.4181 cv
333.621 70.1242 333.698 72.952 332.372 75.1765 cv
331.243 77.0705 329.221 78.2011 326.963 78.2011 cv
323.869 78.2011 322.199 76.0635 322.199 74.0524 cv
322.199 72.8213 322.858 71.803 324.005 71.2585 cv
325.217 70.6836 326.673 70.7796 327.546 71.4928 cv
328.641 72.3862 li
328.586 70.9745 li
328.507 68.9017 327.513 66.9631 325.929 65.7887 cv
324.29 64.574 322.135 64.1582 320.162 64.6763 cv
319.821 64.7656 319.618 65.1141 319.707 65.4546 cv
319.796 65.7951 320.145 65.9995 320.486 65.9092 cv
322.063 65.4955 323.858 65.8412 325.17 66.8129 cv
326.143 67.5343 326.84 68.6207 327.145 69.8453 cv
326.011 69.4613 324.658 69.5376 323.459 70.1067 cv
321.848 70.8709 320.925 72.3091 320.925 74.0524 cv
320.925 76.7184 323.183 79.4759 326.963 79.4759 cv
329.674 79.4759 332.105 78.1127 333.467 75.8293 cv
335.029 73.2098 334.961 69.9231 333.28 66.8122 cv
332.171 64.7589 330.262 63.4947 328.416 62.272 cv
327.373 61.5812 326.388 60.9287 325.564 60.1552 cv
325.047 59.6698 324.65 59.1553 324.358 58.626 cv
326.335 58.4749 328.157 57.7375 329.398 56.5716 cv
330.235 55.7861 330.734 54.6299 330.734 53.4788 cv
330.734 52.4893 330.367 51.5991 329.699 50.9727 cv
328.978 50.2959 328.02 49.9755 326.993 50.0718 cv
325.757 50.188 324.565 50.8798 323.805 51.9224 cv
322.725 53.4045 322.143 55.3674 322.527 57.3304 cv
320.887 57.1212 319.231 56.4293 317.863 55.1449 cv
316.732 54.0832 315.827 52.5932 314.868 51.0159 cv
314.72 50.7711 314.568 50.5233 314.415 50.2746 cv
314.293 49.9907 314.184 49.7038 314.098 49.4091 cv
313.726 48.1303 313.718 46.3422 314.808 45.1587 cv
315.841 44.0378 317.812 43.8633 319.027 44.7854 cv
319.63 45.244 320.022 45.9144 320.073 46.5785 cv
320.125 47.2562 319.791 47.9459 319.261 48.2557 cv
318.738 48.5617 317.99 48.4625 317.628 48.0386 cv
317.399 47.7714 316.997 47.7396 316.729 47.9681 cv
316.461 48.197 316.43 48.5993 316.658 48.8669 cv
317.421 49.7598 318.848 49.9743 319.905 49.3562 cv
320.855 48.8005 321.433 47.645 321.344 46.4804 cv
321.265 45.4587 320.687 44.4456 319.798 43.7704 cv
318.062 42.4522 315.348 42.6927 313.871 44.2947 cv
313.087 45.1451 312.657 46.3222 312.607 47.6026 cv
311.154 45.733 309.31 44.0993 306.572 43.3762 cv
304.22 42.7547 301.847 43.1546 300.227 44.446 cv
298.899 45.5038 298.201 47.0742 298.26 48.8682 cv
298.325 50.8428 300.3 53.1383 302.748 53.1383 cv
cp
328.526 105.021 mo
329.111 105.57 329.46 106.379 329.46 107.184 cv
329.46 107.818 329.235 108.378 328.827 108.761 cv
328.249 109.304 327.578 109.365 327.112 109.322 cv
326.247 109.241 325.375 108.731 324.835 107.99 cv
323.898 106.703 323.42 104.972 323.864 103.268 cv
325.693 103.321 327.396 103.96 328.526 105.021 cv
cp
326.963 81.1875 mo
323.183 81.1875 320.925 83.945 320.925 86.6108 cv
320.925 88.3541 321.848 89.7925 323.459 90.5566 cv
324.657 91.1256 326.01 91.2022 327.145 90.8179 cv
326.84 92.0425 326.143 93.1289 325.17 93.8503 cv
323.858 94.822 322.063 95.1675 320.486 94.7539 cv
320.145 94.6645 319.796 94.8685 319.707 95.2085 cv
319.618 95.549 319.821 95.8976 320.162 95.9869 cv
322.135 96.5049 324.29 96.0889 325.929 94.8745 cv
327.513 93.7001 328.507 91.7615 328.586 89.6887 cv
328.641 88.277 li
327.546 89.1704 li
326.673 89.8831 325.218 89.98 324.005 89.4049 cv
322.858 88.8602 322.199 87.8419 322.199 86.6108 cv
322.199 84.5996 323.869 82.4623 326.963 82.4623 cv
329.221 82.4623 331.243 83.5929 332.372 85.4869 cv
333.698 87.7112 333.621 90.539 332.159 93.2451 cv
331.201 95.0177 329.506 96.1404 327.712 97.3289 cv
326.67 98.0184 325.594 98.7315 324.691 99.5789 cv
323.871 100.349 323.298 101.179 322.931 102.031 cv
320.852 102.17 318.718 102.966 316.991 104.589 cv
316.512 105.039 316.078 105.544 315.668 106.089 cv
315.609 106.128 315.555 106.176 315.51 106.236 cv
314.615 107.441 313.819 108.569 313.276 109.807 cv
311.609 112.509 309.746 115.131 306.247 116.055 cv
304.281 116.573 302.328 116.262 301.021 115.22 cv
300.002 114.408 299.488 113.238 299.534 111.837 cv
299.579 110.47 301.072 108.8 302.748 108.8 cv
303.909 108.8 304.698 109.341 304.86 110.247 cv
304.975 110.896 304.703 111.697 303.959 111.971 cv
303.629 112.093 303.459 112.459 303.581 112.789 cv
303.703 113.12 304.07 113.289 304.4 113.167 cv
305.637 112.712 306.358 111.389 306.115 110.023 cv
305.909 108.871 304.904 107.525 302.748 107.525 cv
300.3 107.525 298.325 109.821 298.26 111.795 cv
298.201 113.589 298.899 115.159 300.227 116.217 cv
301.344 117.108 302.819 117.575 304.4 117.575 cv
305.11 117.574 305.842 117.48 306.572 117.287 cv
309.31 116.564 311.154 114.93 312.607 113.061 cv
312.657 114.341 313.087 115.518 313.871 116.368 cv
314.706 117.274 315.936 117.745 317.161 117.745 cv
318.104 117.744 319.043 117.466 319.798 116.893 cv
320.687 116.218 321.265 115.204 321.344 114.183 cv
321.433 113.018 320.855 111.863 319.905 111.307 cv
318.848 110.689 317.421 110.903 316.658 111.796 cv
316.43 112.064 316.461 112.466 316.729 112.695 cv
316.997 112.924 317.399 112.892 317.628 112.625 cv
317.99 112.2 318.738 112.101 319.261 112.408 cv
319.791 112.717 320.125 113.407 320.073 114.084 cv
320.022 114.749 319.63 115.419 319.027 115.878 cv
317.812 116.8 315.841 116.624 314.808 115.505 cv
313.718 114.321 313.726 112.533 314.098 111.254 cv
314.184 110.96 314.293 110.673 314.415 110.389 cv
314.568 110.14 314.72 109.892 314.868 109.647 cv
315.827 108.07 316.732 106.58 317.863 105.518 cv
319.231 104.233 320.886 103.542 322.527 103.333 cv
322.143 105.296 322.725 107.259 323.805 108.741 cv
324.565 109.784 325.757 110.475 326.993 110.591 cv
328.015 110.686 328.979 110.368 329.699 109.691 cv
330.367 109.064 330.734 108.174 330.734 107.184 cv
330.734 106.033 330.235 104.877 329.398 104.092 cv
328.157 102.926 326.335 102.188 324.358 102.037 cv
324.65 101.508 325.047 100.993 325.564 100.508 cv
326.387 99.7347 327.372 99.0824 328.415 98.3916 cv
330.262 97.1689 332.171 95.9045 333.28 93.851 cv
334.961 90.7401 335.029 87.4534 333.467 84.8339 cv
332.105 82.5507 329.674 81.1875 326.963 81.1875 cv
cp
266.25 55.6425 mo
265.665 55.0935 265.316 54.2845 265.316 53.4788 cv
265.316 52.8449 265.541 52.2851 265.949 51.9019 cv
266.434 51.4466 266.987 51.3298 267.426 51.3298 cv
267.51 51.3298 267.59 51.3342 267.664 51.341 cv
268.529 51.4224 269.401 51.9326 269.941 52.6731 cv
270.878 53.96 271.356 55.6917 270.912 57.3958 cv
269.082 57.3423 267.38 56.7038 266.25 55.6425 cv
cp
267.813 79.4759 mo
271.593 79.4759 273.852 76.7184 273.852 74.0524 cv
273.852 72.3091 272.928 70.8707 271.317 70.1065 cv
270.119 69.538 268.766 69.4615 267.631 69.8453 cv
267.936 68.6205 268.633 67.5343 269.606 66.8129 cv
270.917 65.8412 272.713 65.4951 274.291 65.9092 cv
274.632 65.9995 274.979 65.7949 275.069 65.4546 cv
275.158 65.1141 274.955 64.7656 274.614 64.6763 cv
272.641 64.158 270.486 64.574 268.847 65.7887 cv
267.263 66.9629 266.27 68.9014 266.19 70.9745 cv
266.135 72.3864 li
267.23 71.4926 li
268.103 70.7796 269.559 70.6834 270.771 71.2583 cv
271.918 71.803 272.577 72.8213 272.577 74.0524 cv
272.577 76.0635 270.907 78.2011 267.813 78.2011 cv
265.555 78.2011 263.533 77.0703 262.404 75.1765 cv
261.077 72.952 261.155 70.1242 262.617 67.4181 cv
263.575 65.6457 265.27 64.5232 267.064 63.3349 cv
268.106 62.645 269.182 61.9319 270.085 61.0843 cv
270.904 60.3147 271.478 59.4837 271.845 58.6324 cv
273.923 58.4928 276.058 57.6968 277.786 56.0741 cv
278.265 55.6235 278.7 55.1168 279.11 54.5712 cv
279.168 54.5321 279.222 54.4866 279.266 54.4276 cv
280.162 53.2218 280.958 52.0925 281.501 50.8541 cv
283.168 48.1533 285.031 45.5327 288.529 44.6086 cv
290.494 44.0893 292.448 44.4013 293.755 45.4432 cv
294.774 46.2551 295.288 47.4249 295.242 48.826 cv
295.197 50.1934 293.705 51.8635 292.028 51.8635 cv
290.867 51.8635 290.078 51.3225 289.916 50.4165 cv
289.801 49.767 290.073 48.9663 290.817 48.6924 cv
291.147 48.5709 291.316 48.2044 291.195 47.8741 cv
291.073 47.5436 290.706 47.3742 290.376 47.4961 cv
289.139 47.9517 288.418 49.2738 288.661 50.6401 cv
288.867 51.7925 289.872 53.1383 292.028 53.1383 cv
294.476 53.1383 296.451 50.8428 296.516 48.868 cv
296.575 47.0742 295.877 45.5038 294.549 44.446 cv
292.928 43.1546 290.555 42.7545 288.204 43.3762 cv
285.466 44.0993 283.622 45.7329 282.169 47.6025 cv
282.119 46.3221 281.689 45.1451 280.905 44.2947 cv
279.427 42.6923 276.714 42.4522 274.978 43.7704 cv
274.089 44.4456 273.511 45.4587 273.432 46.4806 cv
273.343 47.645 273.921 48.8005 274.871 49.3562 cv
275.929 49.9745 277.355 49.7593 278.118 48.8669 cv
278.347 48.5993 278.315 48.197 278.047 47.9681 cv
277.78 47.7399 277.378 47.771 277.149 48.0386 cv
276.786 48.4623 276.038 48.5617 275.515 48.2557 cv
274.985 47.9459 274.651 47.2562 274.703 46.5785 cv
274.755 45.9144 275.146 45.244 275.749 44.7854 cv
276.963 43.8635 278.934 44.0378 279.967 45.1587 cv
281.058 46.3422 281.05 48.1303 280.678 49.4089 cv
280.593 49.7035 280.483 49.9902 280.361 50.2738 cv
280.208 50.5227 280.056 50.7709 279.908 51.0159 cv
278.949 52.5932 278.043 54.0832 276.913 55.1449 cv
275.545 56.4295 273.889 57.1212 272.249 57.3304 cv
272.633 55.3674 272.051 53.4045 270.971 51.9224 cv
270.211 50.8798 269.02 50.188 267.783 50.0718 cv
266.757 49.9749 265.797 50.2957 265.077 50.9727 cv
264.409 51.5991 264.042 52.4893 264.042 53.4788 cv
264.042 54.6299 264.541 55.7863 265.378 56.5716 cv
266.619 57.7375 268.441 58.4749 270.418 58.626 cv
270.126 59.1551 269.729 59.6698 269.212 60.1552 cv
268.388 60.9287 267.403 61.5812 266.36 62.272 cv
264.514 63.4947 262.605 64.7592 261.496 66.8122 cv
259.815 69.9231 259.747 73.2098 261.309 75.8293 cv
262.671 78.1127 265.102 79.4759 267.813 79.4759 cv
cp
f
330.149 200.819 mo
330.307 200.778 330.471 200.758 330.637 200.758 cv
331.268 200.758 331.792 201.041 332.04 201.516 cv
332.137 201.702 332.19 201.916 332.197 202.115 cv
332.19 202.351 332.137 202.565 332.04 202.751 cv
331.792 203.226 331.267 203.51 330.637 203.51 cv
330.471 203.51 330.307 203.489 330.149 203.449 cv
329.382 203.251 328.686 202.699 328.015 202.133 cv
328.686 201.568 329.381 201.016 330.149 200.819 cv
cp
329.832 204.683 mo
330.093 204.75 330.364 204.784 330.637 204.784 cv
331.751 204.784 332.698 204.245 333.17 203.342 cv
333.357 202.983 333.459 202.583 333.471 202.115 cv
333.459 201.684 333.357 201.284 333.17 200.926 cv
332.698 200.022 331.751 199.483 330.637 199.483 cv
330.364 199.483 330.093 199.517 329.831 199.584 cv
328.711 199.872 327.806 200.639 327.009 201.315 cv
326.043 202.133 li
327.009 202.952 li
327.807 203.628 328.711 204.395 329.832 204.683 cv
cp
265.256 203.449 mo
265.098 203.489 264.934 203.51 264.768 203.51 cv
264.138 203.51 263.613 203.226 263.365 202.752 cv
263.268 202.566 263.215 202.351 263.208 202.152 cv
263.215 201.916 263.268 201.702 263.365 201.516 cv
263.613 201.041 264.138 200.758 264.768 200.758 cv
264.934 200.758 265.098 200.778 265.255 200.819 cv
266.022 201.016 266.743 201.588 267.39 202.133 cv
266.72 202.699 266.024 203.251 265.256 203.449 cv
cp
265.573 199.584 mo
265.312 199.517 265.041 199.483 264.768 199.483 cv
263.654 199.483 262.707 200.022 262.235 200.926 cv
262.048 201.285 261.947 201.684 261.934 202.152 cv
261.947 202.582 262.048 202.983 262.235 203.342 cv
262.707 204.245 263.654 204.784 264.768 204.784 cv
264.768 204.784 li
265.041 204.784 265.312 204.75 265.573 204.683 cv
266.694 204.395 267.598 203.628 268.397 202.951 cv
269.362 202.133 li
268.396 201.315 li
267.599 200.639 266.695 199.872 265.573 199.584 cv
cp
324.274 230.213 mo
325.509 232.318 325.189 235.448 323.529 237.495 cv
322.129 239.222 319.952 240.199 317.525 240.199 cv
317.436 240.199 317.348 240.198 317.259 240.195 cv
315.345 240.14 313.383 239.545 310.894 238.266 cv
306.925 236.226 303.303 233.383 300.231 229.926 cv
299.669 229.405 299.145 228.831 298.674 228.199 cv
298.609 228.112 298.573 228.014 298.558 227.913 cv
298.267 227.538 297.981 227.16 297.703 226.774 cv
297.424 227.16 297.138 227.538 296.847 227.913 cv
296.832 228.013 296.796 228.112 296.731 228.2 cv
296.26 228.831 295.736 229.405 295.174 229.925 cv
292.102 233.383 288.48 236.226 284.511 238.266 cv
282.022 239.545 280.059 240.14 278.146 240.195 cv
275.615 240.262 273.327 239.285 271.876 237.495 cv
270.217 235.448 269.896 232.318 271.131 230.213 cv
272.046 228.652 273.741 227.751 275.341 227.969 cv
277.032 228.2 278.483 229.72 278.717 231.506 cv
278.964 233.395 277.781 235.337 276.133 235.747 cv
275.791 235.831 275.446 235.624 275.361 235.282 cv
275.276 234.94 275.484 234.594 275.826 234.51 cv
276.838 234.258 277.614 232.905 277.453 231.671 cv
277.294 230.457 276.291 229.385 275.169 229.233 cv
274.071 229.081 272.889 229.736 272.231 230.858 cv
271.251 232.528 271.524 235.037 272.866 236.692 cv
274.065 238.171 275.982 238.984 278.109 238.921 cv
279.822 238.872 281.617 238.32 283.929 237.132 cv
286.34 235.893 288.617 234.343 290.716 232.534 cv
290.435 232.622 290.153 232.704 289.866 232.768 cv
289.079 232.946 288.281 233.033 287.486 233.033 cv
285.558 233.033 283.641 232.52 281.918 231.521 cv
281.614 231.345 281.51 230.955 281.687 230.65 cv
281.863 230.345 282.254 230.242 282.558 230.418 cv
284.713 231.668 287.209 232.06 289.585 231.525 cv
291.314 231.135 292.928 230.261 294.282 229.013 cv
295.314 227.846 296.283 226.609 297.177 225.305 cv
297.703 224.539 li
298.228 225.305 li
299.123 226.609 300.091 227.846 301.123 229.013 cv
302.477 230.26 304.091 231.135 305.82 231.525 cv
308.195 232.061 310.692 231.667 312.848 230.418 cv
313.151 230.242 313.542 230.345 313.719 230.65 cv
313.895 230.955 313.791 231.345 313.487 231.521 cv
311.765 232.519 309.847 233.033 307.92 233.033 cv
307.124 233.033 306.326 232.946 305.539 232.768 cv
305.253 232.704 304.97 232.622 304.689 232.534 cv
306.788 234.343 309.065 235.893 311.477 237.132 cv
313.787 238.32 315.582 238.872 317.296 238.921 cv
319.423 238.984 321.34 238.171 322.539 236.692 cv
323.882 235.037 324.155 232.528 323.174 230.858 cv
322.516 229.735 321.335 229.081 320.236 229.233 cv
319.114 229.385 318.111 230.457 317.952 231.671 cv
317.791 232.905 318.566 234.258 319.58 234.51 cv
319.921 234.594 320.129 234.94 320.045 235.282 cv
319.96 235.624 319.613 235.831 319.272 235.747 cv
317.624 235.337 316.441 233.395 316.688 231.506 cv
316.922 229.72 318.373 228.2 320.064 227.969 cv
321.665 227.752 323.359 228.652 324.274 230.213 cv
cp
271.131 174.054 mo
269.896 171.949 270.217 168.819 271.876 166.772 cv
273.327 164.982 275.608 163.999 278.146 164.072 cv
280.06 164.127 282.023 164.722 284.511 166.001 cv
288.48 168.041 292.101 170.884 295.174 174.342 cv
295.736 174.862 296.26 175.436 296.731 176.067 cv
296.796 176.155 296.832 176.254 296.847 176.354 cv
297.138 176.729 297.424 177.107 297.703 177.493 cv
297.981 177.107 298.267 176.729 298.558 176.354 cv
298.573 176.253 298.609 176.155 298.674 176.068 cv
299.145 175.436 299.669 174.862 300.231 174.342 cv
303.303 170.884 306.925 168.041 310.894 166.001 cv
313.382 164.722 315.345 164.127 317.259 164.072 cv
319.799 163.998 322.078 164.982 323.529 166.772 cv
325.189 168.819 325.509 171.949 324.274 174.054 cv
323.359 175.615 321.665 176.516 320.064 176.298 cv
318.373 176.067 316.922 174.547 316.688 172.761 cv
316.441 170.872 317.624 168.93 319.272 168.52 cv
319.613 168.436 319.96 168.643 320.045 168.985 cv
320.129 169.327 319.921 169.673 319.58 169.758 cv
318.566 170.01 317.791 171.363 317.952 172.596 cv
318.111 173.81 319.114 174.882 320.236 175.034 cv
321.34 175.183 322.516 174.531 323.174 173.409 cv
324.155 171.739 323.882 169.23 322.539 167.575 cv
321.34 166.096 319.425 165.279 317.297 165.346 cv
315.582 165.396 313.787 165.947 311.477 167.135 cv
309.066 168.374 306.788 169.924 304.689 171.733 cv
304.97 171.645 305.253 171.563 305.539 171.499 cv
308.23 170.892 311.053 171.335 313.487 172.746 cv
313.791 172.923 313.895 173.313 313.719 173.617 cv
313.542 173.922 313.151 174.025 312.848 173.849 cv
310.693 172.6 308.197 172.207 305.82 172.742 cv
304.092 173.132 302.478 174.006 301.124 175.253 cv
300.092 176.42 299.123 177.658 298.228 178.962 cv
297.703 179.729 li
297.177 178.962 li
296.283 177.659 295.314 176.421 294.283 175.255 cv
292.928 174.007 291.314 173.132 289.585 172.742 cv
287.208 172.206 284.713 172.6 282.558 173.849 cv
282.254 174.025 281.863 173.922 281.687 173.617 cv
281.51 173.313 281.614 172.923 281.918 172.746 cv
284.352 171.335 287.175 170.893 289.866 171.499 cv
290.153 171.563 290.435 171.645 290.716 171.733 cv
288.617 169.924 286.34 168.374 283.929 167.135 cv
281.618 165.947 279.823 165.396 278.109 165.346 cv
275.982 165.279 274.065 166.096 272.866 167.575 cv
271.524 169.23 271.251 171.739 272.231 173.409 cv
272.889 174.531 274.068 175.185 275.169 175.034 cv
276.291 174.882 277.294 173.81 277.453 172.596 cv
277.614 171.363 276.838 170.01 275.826 169.758 cv
275.484 169.673 275.276 169.327 275.361 168.985 cv
275.446 168.643 275.791 168.436 276.133 168.52 cv
277.781 168.93 278.964 170.872 278.717 172.761 cv
278.483 174.547 277.032 176.067 275.341 176.298 cv
273.741 176.516 272.046 175.615 271.131 174.054 cv
cp
340.143 202.269 mo
339.777 202.604 li
334.838 207.121 331.564 213.766 330.795 220.836 cv
330.759 221.163 330.483 221.405 330.162 221.405 cv
330.139 221.405 330.116 221.404 330.092 221.401 cv
329.743 221.363 329.49 221.048 329.528 220.699 cv
330.072 215.696 331.826 210.896 334.508 206.85 cv
331.349 210.177 328.877 214.34 327.444 218.88 cv
326.662 221.358 326.337 223.5 326.449 225.429 cv
326.586 227.76 327.415 229.859 328.723 231.19 cv
330.146 232.637 332.165 233.121 333.749 232.393 cv
335.437 231.618 336.46 229.342 335.939 227.524 cv
335.544 226.15 334.294 225.112 333.029 225.109 cv
333.027 225.109 333.026 225.109 333.023 225.109 cv
331.762 225.109 330.511 226.14 330.112 227.509 cv
330.013 227.847 329.659 228.041 329.322 227.942 cv
328.984 227.844 328.789 227.49 328.888 227.152 cv
329.448 225.229 331.186 223.834 333.023 223.834 cv
333.026 223.834 333.029 223.834 333.033 223.834 cv
334.873 223.839 336.611 225.243 337.164 227.172 cv
337.858 229.593 336.539 232.515 334.282 233.552 cv
333.622 233.855 332.909 234.001 332.185 234.002 cv
330.637 234.002 329.04 233.331 327.814 232.084 cv
326.293 230.536 325.332 228.138 325.177 225.504 cv
325.055 223.417 325.399 221.125 326.228 218.497 cv
326.968 216.152 327.98 213.906 329.208 211.81 cv
328.747 211.984 328.28 212.076 327.825 212.076 cv
327.608 212.076 327.393 212.056 327.184 212.015 cv
325.983 211.78 324.992 210.828 324.718 209.646 cv
324.405 208.297 325.154 206.807 326.32 206.457 cv
326.657 206.357 327.013 206.548 327.114 206.885 cv
327.215 207.222 327.024 207.577 326.686 207.679 cv
326.16 207.837 325.8 208.668 325.96 209.358 cv
326.12 210.048 326.724 210.626 327.429 210.764 cv
328.085 210.892 328.841 210.691 329.558 210.197 cv
330.285 209.697 330.887 208.977 331.43 208.275 cv
331.521 208.156 331.646 208.082 331.781 208.048 cv
333.601 205.756 335.709 203.747 338.03 202.133 cv
335.71 200.52 333.602 198.511 331.781 196.219 cv
331.646 196.186 331.521 196.111 331.43 195.992 cv
330.887 195.29 330.285 194.57 329.558 194.07 cv
328.841 193.576 328.085 193.374 327.429 193.503 cv
326.724 193.641 326.12 194.219 325.96 194.909 cv
325.8 195.599 326.16 196.431 326.686 196.589 cv
327.024 196.69 327.215 197.045 327.114 197.382 cv
327.031 197.659 326.778 197.837 326.504 197.837 cv
326.443 197.837 326.381 197.828 326.32 197.81 cv
325.154 197.46 324.405 195.97 324.718 194.621 cv
324.992 193.439 325.983 192.487 327.184 192.252 cv
327.833 192.126 328.527 192.201 329.209 192.458 cv
327.98 190.362 326.968 188.116 326.228 185.771 cv
325.399 183.142 325.055 180.85 325.177 178.763 cv
325.332 176.129 326.293 173.731 327.814 172.183 cv
329.612 170.353 332.211 169.763 334.282 170.715 cv
336.539 171.752 337.858 174.674 337.164 177.095 cv
336.611 179.024 334.873 180.428 333.033 180.433 cv
333.029 180.433 333.026 180.433 333.023 180.433 cv
331.186 180.433 329.448 179.039 328.888 177.115 cv
328.789 176.777 328.984 176.423 329.322 176.325 cv
329.661 176.226 330.014 176.42 330.112 176.758 cv
330.511 178.127 331.762 179.158 333.023 179.158 cv
333.026 179.158 333.027 179.158 333.029 179.158 cv
334.294 179.155 335.544 178.117 335.939 176.743 cv
336.46 174.925 335.437 172.649 333.75 171.874 cv
332.165 171.146 330.146 171.63 328.723 173.077 cv
327.415 174.408 326.586 176.508 326.449 178.838 cv
326.337 180.766 326.662 182.909 327.444 185.387 cv
328.877 189.927 331.349 194.09 334.508 197.417 cv
331.826 193.371 330.072 188.571 329.528 183.568 cv
329.49 183.219 329.743 182.904 330.092 182.866 cv
330.437 182.83 330.757 183.081 330.795 183.431 cv
331.564 190.501 334.838 197.146 339.777 201.663 cv
340.143 201.998 li
340.354 202.133 li
340.143 202.269 li
cp
269.177 218.497 mo
270.007 221.125 270.351 223.417 270.228 225.504 cv
270.074 228.138 269.113 230.536 267.591 232.084 cv
266.366 233.331 264.768 234.001 263.22 234.001 cv
262.496 234.002 261.783 233.855 261.123 233.552 cv
258.866 232.515 257.547 229.593 258.242 227.172 cv
258.795 225.243 260.532 223.839 262.372 223.834 cv
262.375 223.834 262.378 223.834 262.381 223.834 cv
264.219 223.834 265.957 225.228 266.517 227.152 cv
266.616 227.49 266.422 227.844 266.084 227.942 cv
265.745 228.041 265.392 227.847 265.293 227.509 cv
264.895 226.14 263.643 225.109 262.381 225.109 cv
262.379 225.109 262.378 225.109 262.376 225.109 cv
261.111 225.112 259.861 226.15 259.467 227.524 cv
258.945 229.342 259.968 231.618 261.655 232.393 cv
263.239 233.121 265.259 232.638 266.682 231.19 cv
267.99 229.859 268.819 227.759 268.956 225.429 cv
269.069 223.501 268.743 221.358 267.961 218.88 cv
266.528 214.339 264.055 210.176 260.896 206.85 cv
263.579 210.896 265.333 215.695 265.878 220.699 cv
265.916 221.048 265.663 221.363 265.313 221.401 cv
265.29 221.404 265.266 221.405 265.243 221.405 cv
264.922 221.405 264.646 221.163 264.61 220.836 cv
263.841 213.766 260.567 207.121 255.628 202.604 cv
255.263 202.269 li
255.052 202.133 li
255.263 201.998 li
255.628 201.663 li
260.567 197.146 263.841 190.501 264.61 183.431 cv
264.648 183.081 264.97 182.83 265.313 182.866 cv
265.663 182.904 265.916 183.219 265.878 183.568 cv
265.333 188.572 263.579 193.371 260.896 197.418 cv
264.055 194.091 266.528 189.928 267.961 185.387 cv
268.743 182.909 269.069 180.766 268.956 178.838 cv
268.819 176.508 267.99 174.408 266.682 173.077 cv
265.26 171.629 263.238 171.146 261.655 171.874 cv
259.968 172.649 258.945 174.925 259.467 176.743 cv
259.861 178.117 261.111 179.155 262.376 179.158 cv
262.377 179.158 262.379 179.158 262.381 179.158 cv
263.644 179.158 264.895 178.128 265.293 176.758 cv
265.392 176.42 265.746 176.226 266.084 176.325 cv
266.422 176.423 266.616 176.777 266.517 177.115 cv
265.957 179.038 264.219 180.433 262.381 180.433 cv
262.378 180.433 262.376 180.433 262.372 180.433 cv
260.532 180.428 258.795 179.024 258.242 177.095 cv
257.547 174.674 258.866 171.752 261.123 170.715 cv
263.192 169.763 265.793 170.353 267.591 172.183 cv
269.113 173.731 270.074 176.13 270.228 178.763 cv
270.351 180.85 270.007 183.142 269.177 185.771 cv
268.437 188.116 267.425 190.362 266.196 192.458 cv
266.878 192.201 267.572 192.125 268.221 192.252 cv
269.421 192.486 270.413 193.439 270.687 194.621 cv
271 195.97 270.252 197.46 269.085 197.81 cv
269.024 197.828 268.962 197.837 268.901 197.837 cv
268.628 197.837 268.374 197.659 268.292 197.382 cv
268.19 197.045 268.382 196.69 268.719 196.589 cv
269.246 196.431 269.606 195.599 269.446 194.909 cv
269.285 194.219 268.681 193.641 267.977 193.503 cv
267.32 193.374 266.564 193.576 265.847 194.07 cv
265.121 194.57 264.519 195.29 263.976 195.992 cv
263.884 196.111 263.759 196.186 263.624 196.219 cv
261.804 198.511 259.696 200.52 257.375 202.133 cv
259.696 203.747 261.804 205.756 263.624 208.048 cv
263.759 208.082 263.884 208.156 263.976 208.275 cv
264.518 208.977 265.12 209.697 265.847 210.197 cv
266.565 210.691 267.321 210.891 267.977 210.764 cv
268.681 210.626 269.285 210.048 269.446 209.358 cv
269.606 208.668 269.246 207.837 268.719 207.679 cv
268.382 207.577 268.19 207.222 268.292 206.885 cv
268.393 206.547 268.75 206.358 269.085 206.457 cv
270.252 206.807 271 208.297 270.687 209.646 cv
270.413 210.828 269.421 211.78 268.221 212.015 cv
268.012 212.056 267.798 212.076 267.581 212.076 cv
267.126 212.076 266.659 211.984 266.197 211.81 cv
267.425 213.905 268.437 216.152 269.177 218.497 cv
cp
301.358 242.994 mo
300.345 243.327 299.105 243.064 298.079 242.312 cv
297.703 242.036 li
297.326 242.312 li
296.301 243.064 295.061 243.328 294.047 242.994 cv
292.875 242.608 291.998 241.37 292.007 240.114 cv
292.014 238.996 292.659 237.949 293.22 237.162 cv
294.48 235.393 295.987 233.889 297.703 232.687 cv
299.419 233.889 300.925 235.393 302.185 237.162 cv
302.745 237.948 303.39 238.995 303.398 240.114 cv
303.407 241.37 302.53 242.608 301.358 242.994 cv
cp
298.056 231.384 mo
297.703 231.149 li
297.349 231.384 li
295.357 232.711 293.618 234.406 292.182 236.422 cv
291.512 237.362 290.742 238.63 290.732 240.105 cv
290.719 241.92 291.946 243.645 293.649 244.205 cv
294.921 244.624 296.422 244.391 297.703 243.595 cv
298.557 244.126 299.511 244.415 300.43 244.415 cv
300.888 244.415 301.334 244.344 301.756 244.205 cv
303.46 243.644 304.686 241.92 304.673 240.105 cv
304.663 238.629 303.892 237.361 303.223 236.422 cv
301.787 234.406 300.048 232.711 298.056 231.384 cv
cp
294.047 161.273 mo
294.341 161.176 294.653 161.127 294.975 161.127 cv
295.763 161.127 296.598 161.421 297.326 161.955 cv
297.703 162.231 li
298.079 161.955 li
299.104 161.203 300.345 160.94 301.358 161.273 cv
302.53 161.659 303.407 162.897 303.398 164.153 cv
303.39 165.272 302.745 166.319 302.185 167.106 cv
300.925 168.874 299.419 170.378 297.703 171.58 cv
295.987 170.378 294.48 168.874 293.22 167.106 cv
292.659 166.318 292.014 165.271 292.007 164.153 cv
291.998 162.897 292.875 161.659 294.047 161.273 cv
cp
297.349 172.883 mo
297.703 173.118 li
298.056 172.883 li
300.048 171.556 301.787 169.861 303.223 167.846 cv
303.892 166.906 304.663 165.638 304.673 164.162 cv
304.686 162.347 303.46 160.623 301.756 160.062 cv
300.483 159.643 298.982 159.877 297.703 160.672 cv
296.423 159.877 294.921 159.643 293.649 160.062 cv
291.946 160.622 290.719 162.347 290.732 164.162 cv
290.742 165.637 291.512 166.905 292.182 167.846 cv
293.618 169.861 295.357 171.556 297.349 172.883 cv
cp
f
147.796 187.407 mo
148.516 185.668 150.378 184.553 152.558 183.533 cv
152.507 185.535 152.395 187.533 151.765 189.053 cv
151.151 190.533 149.838 191.958 148.399 193.447 cv
147.593 191.21 147.083 189.129 147.796 187.407 cv
cp
156.139 174.921 mo
157.457 173.603 159.575 173.279 161.95 173.167 cv
161.125 175.066 160.311 176.825 159.178 177.958 cv
158.016 179.122 156.213 179.99 154.382 180.803 cv
154.49 178.399 154.808 176.252 156.139 174.921 cv
cp
168.625 166.578 mo
169.215 166.333 169.852 166.215 170.572 166.215 cv
171.866 166.215 173.285 166.612 174.721 167.127 cv
173.212 168.587 171.77 169.925 170.271 170.547 cv
168.731 171.185 166.7 171.292 164.671 171.341 cv
165.669 169.217 166.833 167.32 168.625 166.578 cv
cp
188.83 166.536 mo
186.938 167.266 185.021 167.945 183.353 167.945 cv
181.73 167.944 179.884 167.259 177.93 166.487 cv
179.649 164.929 181.434 163.648 183.354 163.648 cv
185.294 163.648 187.095 164.956 188.83 166.536 cv
cp
198.083 166.578 mo
199.822 167.298 200.937 169.16 201.957 171.34 cv
199.955 171.289 197.957 171.177 196.438 170.547 cv
194.958 169.933 193.534 168.621 192.045 167.183 cv
193.516 166.656 194.965 166.24 196.257 166.24 cv
196.937 166.24 197.535 166.35 198.083 166.578 cv
cp
212.323 180.732 mo
210.424 179.906 208.666 179.093 207.532 177.96 cv
206.368 176.798 205.5 174.994 204.688 173.164 cv
207.092 173.272 209.239 173.59 210.57 174.921 cv
211.887 176.239 212.212 178.357 212.323 180.732 cv
cp
218.912 187.407 mo
219.647 189.181 219.147 191.32 218.365 193.505 cv
216.904 191.995 215.565 190.552 214.943 189.053 cv
214.305 187.513 214.198 185.482 214.149 183.453 cv
216.273 184.452 218.17 185.615 218.912 187.407 cv
cp
218.954 207.612 mo
218.224 205.719 217.545 203.801 217.546 202.135 cv
217.546 200.512 218.232 198.666 219.003 196.712 cv
220.561 198.431 221.842 200.216 221.842 202.136 cv
221.842 204.076 220.535 205.877 218.954 207.612 cv
cp
218.912 216.865 mo
218.192 218.604 216.33 219.719 214.151 220.739 cv
214.201 218.737 214.313 216.739 214.943 215.22 cv
215.557 213.739 216.87 212.314 218.309 210.825 cv
219.115 213.062 219.626 215.143 218.912 216.865 cv
cp
210.57 229.351 mo
209.252 230.669 207.134 230.994 204.758 231.105 cv
205.583 229.206 206.397 227.447 207.53 226.314 cv
208.693 225.15 210.496 224.282 212.326 223.469 cv
212.218 225.873 211.9 228.02 210.57 229.351 cv
cp
198.083 237.695 mo
197.493 237.939 196.857 238.057 196.136 238.057 cv
194.842 238.057 193.424 237.66 191.987 237.145 cv
193.496 235.685 194.938 234.347 196.437 233.725 cv
197.977 233.087 200.009 232.98 202.037 232.931 cv
201.039 235.055 199.875 236.952 198.083 237.695 cv
cp
177.878 237.736 mo
179.77 237.006 181.687 236.327 183.355 236.327 cv
184.979 236.328 186.824 237.013 188.778 237.785 cv
187.059 239.343 185.274 240.624 183.354 240.624 cv
181.414 240.624 179.613 239.316 177.878 237.736 cv
cp
170.452 238.032 mo
169.771 238.032 169.174 237.922 168.625 237.695 cv
166.887 236.974 165.771 235.112 164.751 232.933 cv
166.753 232.983 168.751 233.095 170.271 233.725 cv
171.75 234.339 173.175 235.651 174.663 237.089 cv
173.192 237.616 171.743 238.032 170.452 238.032 cv
cp
154.385 223.54 mo
156.284 224.366 158.043 225.18 159.176 226.312 cv
160.34 227.475 161.208 229.278 162.021 231.108 cv
159.617 231 157.47 230.682 156.139 229.351 cv
154.821 228.034 154.496 225.915 154.385 223.54 cv
cp
147.796 216.865 mo
147.061 215.091 147.562 212.952 148.344 210.767 cv
149.804 212.277 151.143 213.72 151.765 215.22 cv
152.404 216.759 152.51 218.791 152.559 220.819 cv
150.436 219.821 148.538 218.657 147.796 216.865 cv
cp
149.163 202.137 mo
149.162 203.76 148.477 205.606 147.705 207.56 cv
146.147 205.841 144.866 204.056 144.866 202.136 cv
144.866 200.196 146.174 198.395 147.754 196.66 cv
148.485 198.553 149.163 200.47 149.163 202.137 cv
cp
154.325 182.767 mo
154.325 182.758 154.325 182.749 154.325 182.739 cv
154.334 182.736 154.342 182.732 154.35 182.729 cv
156.57 181.754 158.865 180.747 160.415 179.195 cv
161.89 177.719 162.854 175.488 163.786 173.329 cv
163.818 173.256 163.85 173.182 163.882 173.109 cv
163.916 173.108 163.95 173.107 163.985 173.107 cv
166.408 173.056 168.914 173.004 170.941 172.163 cv
172.868 171.364 174.613 169.671 176.3 168.034 cv
176.375 167.961 176.451 167.887 176.527 167.814 cv
176.625 167.853 176.723 167.891 176.821 167.93 cv
179.007 168.797 181.267 169.693 183.356 169.694 cv
185.549 169.694 187.883 168.784 190.14 167.904 cv
190.172 167.892 190.204 167.879 190.236 167.867 cv
190.293 167.923 190.351 167.978 190.408 168.034 cv
192.096 169.671 193.841 171.364 195.768 172.163 cv
197.794 173.004 200.3 173.056 202.723 173.107 cv
202.733 173.107 202.742 173.107 202.75 173.107 cv
202.754 173.116 202.758 173.124 202.762 173.132 cv
203.736 175.352 204.743 177.646 206.295 179.197 cv
207.771 180.671 210.002 181.636 212.161 182.568 cv
212.234 182.6 212.308 182.632 212.381 182.664 cv
212.382 182.698 212.383 182.733 212.384 182.767 cv
212.434 185.19 212.487 187.696 213.327 189.723 cv
214.126 191.649 215.819 193.394 217.456 195.082 cv
217.53 195.158 217.603 195.233 217.676 195.309 cv
217.638 195.407 217.599 195.505 217.56 195.603 cv
216.693 197.789 215.797 200.049 215.796 202.134 cv
215.795 204.328 216.706 206.664 217.586 208.922 cv
217.599 208.954 217.611 208.986 217.623 209.018 cv
217.568 209.075 217.512 209.133 217.456 209.19 cv
215.819 210.878 214.126 212.623 213.327 214.549 cv
212.487 216.576 212.434 219.082 212.384 221.505 cv
212.383 221.514 212.383 221.523 212.383 221.533 cv
212.375 221.536 212.366 221.54 212.358 221.544 cv
210.139 222.518 207.844 223.525 206.292 225.077 cv
204.818 226.552 203.854 228.785 202.922 230.943 cv
202.89 231.016 202.858 231.09 202.826 231.163 cv
202.792 231.164 202.758 231.165 202.723 231.165 cv
200.3 231.216 197.794 231.269 195.767 232.109 cv
193.841 232.908 192.096 234.601 190.409 236.238 cv
190.333 236.312 190.257 236.385 190.182 236.458 cv
190.084 236.419 189.985 236.381 189.887 236.342 cv
187.702 235.475 185.442 234.579 183.353 234.578 cv
181.16 234.578 178.825 235.488 176.568 236.368 cv
176.536 236.38 176.504 236.393 176.472 236.405 cv
176.415 236.35 176.357 236.294 176.3 236.238 cv
174.612 234.601 172.867 232.908 170.941 232.109 cv
168.914 231.269 166.408 231.216 163.985 231.165 cv
163.976 231.165 163.967 231.165 163.958 231.165 cv
163.954 231.157 163.95 231.148 163.947 231.14 cv
162.972 228.921 161.965 226.626 160.413 225.075 cv
158.938 223.6 156.705 222.636 154.547 221.704 cv
154.474 221.672 154.4 221.64 154.327 221.608 cv
154.326 221.574 154.326 221.54 154.325 221.505 cv
154.274 219.082 154.222 216.576 153.381 214.549 cv
152.582 212.623 150.889 210.878 149.252 209.19 cv
149.178 209.115 149.105 209.039 149.032 208.963 cv
149.071 208.865 149.109 208.767 149.148 208.669 cv
150.015 206.484 150.911 204.223 150.912 202.138 cv
150.913 199.944 150.003 197.609 149.122 195.35 cv
149.11 195.318 149.097 195.286 149.085 195.254 cv
149.141 195.197 149.196 195.139 149.252 195.082 cv
150.889 193.394 152.582 191.649 153.381 189.723 cv
154.222 187.696 154.274 185.19 154.325 182.767 cv
cp
146.996 209.368 mo
145.936 212.143 145.111 214.956 146.179 217.534 cv
147.257 220.137 149.866 221.544 152.605 222.764 cv
152.695 225.738 152.982 228.669 154.902 230.588 cv
156.839 232.525 159.805 232.801 162.807 232.887 cv
164.036 235.627 165.425 238.262 167.956 239.311 cv
168.721 239.628 169.537 239.782 170.451 239.782 cv
170.452 239.782 li
172.263 239.781 174.176 239.153 176.062 238.437 cv
178.238 240.502 180.537 242.374 183.354 242.374 cv
186.146 242.374 188.429 240.535 190.587 238.493 cv
192.44 239.2 194.319 239.807 196.136 239.807 cv
197.077 239.807 197.958 239.64 198.753 239.311 cv
201.354 238.233 202.762 235.624 203.982 232.885 cv
206.956 232.796 209.887 232.508 211.806 230.588 cv
213.744 228.651 214.019 225.685 214.106 222.683 cv
216.846 221.454 219.481 220.065 220.529 217.534 cv
221.568 215.026 220.712 212.209 219.657 209.427 cv
221.72 207.251 223.592 204.952 223.592 202.136 cv
223.592 199.345 221.754 197.062 219.712 194.904 cv
220.772 192.129 221.597 189.316 220.529 186.738 cv
219.451 184.136 216.843 182.728 214.103 181.508 cv
214.014 178.534 213.726 175.603 211.806 173.684 cv
209.87 171.747 206.903 171.472 203.902 171.385 cv
202.673 168.645 201.284 166.01 198.753 164.961 cv
197.998 164.649 197.159 164.49 196.257 164.49 cv
194.445 164.49 192.533 165.119 190.646 165.835 cv
188.47 163.77 186.171 161.898 183.354 161.898 cv
180.563 161.898 178.28 163.737 176.121 165.779 cv
174.269 165.072 172.389 164.465 170.572 164.465 cv
169.631 164.465 168.75 164.632 167.956 164.961 cv
165.354 166.039 163.946 168.648 162.726 171.387 cv
159.752 171.477 156.821 171.764 154.902 173.684 cv
152.965 175.621 152.69 178.587 152.603 181.589 cv
149.863 182.817 147.228 184.207 146.179 186.738 cv
145.141 189.246 145.996 192.063 147.052 194.845 cv
144.988 197.021 143.117 199.319 143.117 202.136 cv
143.117 204.927 144.955 207.21 146.996 209.368 cv
cp
f
492.302 197.636 mo
492.604 197.379 492.923 197.108 493.249 196.83 cv
494.091 198.344 495.033 200.087 496.071 202.136 cv
495.054 204.143 494.13 205.854 493.301 207.347 cv
493.025 207.131 492.756 206.921 492.496 206.719 cv
489.747 204.577 487.931 203.163 487.911 202.273 cv
487.893 201.384 489.647 199.893 492.302 197.636 cv
cp
493.323 193.396 mo
491.603 190.365 490.466 188.363 490.788 187.534 cv
491.111 186.706 493.303 185.999 496.62 184.93 cv
496.94 184.827 497.272 184.72 497.614 184.609 cv
497.731 186.274 497.841 188.16 497.914 190.337 cv
496.355 191.796 494.968 193.03 493.727 194.109 cv
493.59 193.866 493.454 193.627 493.323 193.396 cv
cp
499.108 181.211 mo
498.83 177.779 498.646 175.512 499.251 174.855 cv
499.405 174.689 499.744 174.467 500.902 174.467 cv
502.005 174.467 503.541 174.658 505.667 174.922 cv
505.93 174.954 506.203 174.988 506.481 175.023 cv
505.958 176.583 505.348 178.336 504.598 180.335 cv
502.559 181.1 500.774 181.72 499.191 182.249 cv
499.163 181.892 499.135 181.545 499.108 181.211 cv
cp
509.193 172.357 mo
510.543 168.17 511.131 166.47 512.125 166.47 cv
513.098 166.47 514.913 167.5 517.66 169.059 cv
517.945 169.222 518.242 169.39 518.548 169.563 cv
517.486 170.9 516.258 172.408 514.794 174.117 cv
512.503 173.941 510.533 173.737 508.811 173.539 cv
508.943 173.132 509.072 172.734 509.193 172.357 cv
cp
521.816 168.233 mo
523.967 165.472 525.388 163.648 526.277 163.648 cv
527.167 163.648 528.652 165.395 530.9 168.039 cv
531.156 168.341 531.427 168.659 531.706 168.986 cv
530.191 169.827 528.448 170.769 526.4 171.808 cv
524.393 170.79 522.681 169.867 521.188 169.038 cv
521.404 168.761 521.614 168.492 521.816 168.233 cv
cp
535.138 169.06 mo
537.885 167.5 539.7 166.47 540.673 166.47 cv
541.668 166.47 542.256 168.169 543.605 172.356 cv
543.708 172.676 543.816 173.009 543.927 173.35 cv
542.261 173.467 540.375 173.578 538.198 173.651 cv
536.74 172.091 535.506 170.705 534.426 169.464 cv
534.669 169.326 534.908 169.191 535.138 169.06 cv
cp
547.327 174.844 mo
549.126 174.698 550.547 174.583 551.608 174.583 cv
552.782 174.583 553.456 174.728 553.732 175.04 cv
554.321 175.707 554.04 177.973 553.614 181.403 cv
553.581 181.666 553.547 181.94 553.513 182.217 cv
551.953 181.695 550.2 181.085 548.201 180.335 cv
547.435 178.295 546.816 176.51 546.286 174.927 cv
546.644 174.899 546.993 174.871 547.327 174.844 cv
cp
556.179 184.93 mo
559.496 185.999 561.687 186.706 562.01 187.534 cv
562.333 188.363 561.196 190.365 559.476 193.396 cv
559.314 193.682 559.145 193.979 558.972 194.284 cv
557.635 193.222 556.127 191.995 554.419 190.53 cv
554.595 188.24 554.798 186.269 554.996 184.548 cv
555.404 184.68 555.802 184.808 556.179 184.93 cv
cp
560.303 197.552 mo
563.052 199.694 564.869 201.109 564.888 201.998 cv
564.907 202.888 563.152 204.379 560.497 206.636 cv
560.195 206.893 559.876 207.164 559.55 207.442 cv
558.708 205.927 557.766 204.184 556.728 202.136 cv
557.745 200.129 558.669 198.418 559.498 196.924 cv
559.774 197.14 560.043 197.35 560.303 197.552 cv
cp
559.476 210.876 mo
561.196 213.906 562.333 215.909 562.01 216.738 cv
561.687 217.566 559.496 218.273 556.179 219.342 cv
555.859 219.445 555.527 219.552 555.185 219.663 cv
555.068 217.998 554.958 216.112 554.885 213.935 cv
556.444 212.477 557.831 211.242 559.072 210.163 cv
559.209 210.406 559.345 210.645 559.476 210.876 cv
cp
553.691 223.061 mo
553.969 226.493 554.153 228.76 553.548 229.416 cv
553.394 229.583 553.055 229.805 551.897 229.805 cv
551.896 229.805 551.896 229.805 551.896 229.805 cv
550.793 229.805 549.257 229.614 547.131 229.35 cv
546.868 229.318 546.595 229.284 546.318 229.249 cv
546.841 227.69 547.45 225.936 548.201 223.937 cv
550.24 223.172 552.025 222.552 553.608 222.023 cv
553.636 222.38 553.664 222.727 553.691 223.061 cv
cp
543.605 231.914 mo
542.256 236.102 541.668 237.801 540.673 237.802 cv
539.7 237.802 537.886 236.772 535.14 235.213 cv
534.854 235.05 534.556 234.882 534.251 234.709 cv
535.313 233.372 536.541 231.864 538.006 230.156 cv
540.296 230.331 542.266 230.535 543.988 230.732 cv
543.856 231.14 543.727 231.538 543.605 231.914 cv
cp
530.983 236.039 mo
528.832 238.8 527.411 240.624 526.522 240.624 cv
525.632 240.624 524.147 238.877 521.9 236.233 cv
521.643 235.931 521.372 235.613 521.094 235.286 cv
522.608 234.445 524.351 233.503 526.4 232.464 cv
528.407 233.482 530.118 234.405 531.611 235.234 cv
531.395 235.511 531.185 235.78 530.983 236.039 cv
cp
517.66 235.212 mo
514.913 236.771 513.098 237.802 512.125 237.802 cv
511.13 237.802 510.543 236.103 509.194 231.916 cv
509.091 231.596 508.983 231.263 508.872 230.921 cv
510.538 230.805 512.424 230.694 514.601 230.621 cv
516.059 232.18 517.293 233.567 518.373 234.808 cv
518.13 234.946 517.891 235.081 517.66 235.212 cv
cp
505.472 229.428 mo
503.673 229.574 502.252 229.689 501.191 229.689 cv
500.018 229.689 499.343 229.544 499.067 229.232 cv
498.478 228.565 498.759 226.299 499.186 222.868 cv
499.218 222.605 499.252 222.332 499.286 222.055 cv
500.846 222.577 502.599 223.187 504.598 223.937 cv
505.364 225.977 505.983 227.762 506.512 229.344 cv
506.155 229.373 505.806 229.401 505.472 229.428 cv
cp
497.833 201.742 mo
496.626 199.346 495.55 197.364 494.603 195.666 cv
495.998 194.458 497.588 193.045 499.401 191.342 cv
499.688 191.072 li
499.676 190.677 li
499.596 188.108 499.465 185.931 499.328 184.048 cv
501.12 183.453 503.182 182.742 505.587 181.832 cv
505.956 181.692 li
506.095 181.323 li
506.975 178.997 507.672 176.987 508.255 175.236 cv
510.185 175.461 512.428 175.697 515.104 175.894 cv
515.543 175.927 li
515.831 175.593 li
517.527 173.627 518.912 171.921 520.093 170.431 cv
521.754 171.355 523.687 172.402 526.006 173.569 cv
526.4 173.767 li
526.793 173.569 li
529.189 172.363 531.172 171.287 532.869 170.34 cv
534.077 171.734 535.49 173.325 537.194 175.137 cv
537.464 175.424 li
537.858 175.412 li
540.427 175.333 542.605 175.201 544.488 175.065 cv
545.082 176.857 545.794 178.919 546.704 181.323 cv
546.844 181.692 li
547.212 181.832 li
549.539 182.712 551.548 183.408 553.3 183.991 cv
553.074 185.921 552.839 188.165 552.641 190.841 cv
552.609 191.28 li
552.942 191.567 li
554.908 193.263 556.615 194.649 558.105 195.829 cv
557.18 197.49 556.134 199.423 554.966 201.742 cv
554.768 202.136 li
554.966 202.529 li
556.173 204.926 557.249 206.908 558.196 208.605 cv
556.801 209.814 555.211 211.227 553.398 212.93 cv
553.111 213.2 li
553.123 213.594 li
553.203 216.164 553.334 218.341 553.471 220.224 cv
551.679 220.819 549.617 221.531 547.212 222.44 cv
546.844 222.58 li
546.704 222.949 li
545.824 225.275 545.127 227.285 544.544 229.036 cv
542.614 228.811 540.371 228.575 537.695 228.378 cv
537.256 228.345 li
536.968 228.679 li
535.272 230.645 533.887 232.351 532.706 233.841 cv
531.045 232.917 529.112 231.87 526.793 230.703 cv
526.4 230.505 li
526.006 230.703 li
523.61 231.909 521.627 232.985 519.93 233.932 cv
518.722 232.537 517.309 230.947 515.606 229.135 cv
515.336 228.847 li
514.941 228.86 li
512.372 228.939 510.194 229.071 508.311 229.207 cv
507.717 227.415 507.005 225.353 506.095 222.949 cv
505.956 222.58 li
505.587 222.44 li
503.26 221.56 501.251 220.863 499.499 220.281 cv
499.725 218.35 499.96 216.107 500.158 213.431 cv
500.19 212.992 li
499.857 212.704 li
497.891 211.008 496.184 209.623 494.694 208.442 cv
495.619 206.782 496.665 204.848 497.833 202.529 cv
498.031 202.136 li
497.833 201.742 li
cp
496.62 219.342 mo
493.303 218.273 491.111 217.566 490.788 216.738 cv
490.466 215.909 491.603 213.906 493.323 210.876 cv
493.485 210.59 493.654 210.293 493.827 209.987 cv
495.164 211.05 496.672 212.277 498.38 213.742 cv
498.204 216.032 498.001 218.003 497.803 219.724 cv
497.395 219.592 496.997 219.464 496.62 219.342 cv
cp
491.421 208.099 mo
491.744 208.351 492.086 208.618 492.436 208.891 cv
492.217 209.279 492.004 209.656 491.802 210.012 cv
489.558 213.965 488.534 215.768 489.158 217.372 cv
489.783 218.976 491.758 219.613 496.083 221.007 cv
496.56 221.161 497.066 221.324 497.592 221.495 cv
497.543 221.894 497.495 222.283 497.449 222.653 cv
496.897 227.102 496.644 229.132 497.756 230.391 cv
498.57 231.312 499.888 231.439 501.191 231.439 cv
502.323 231.439 503.775 231.321 505.613 231.172 cv
506.076 231.135 506.568 231.095 507.076 231.055 cv
507.234 231.54 507.386 232.01 507.529 232.453 cv
509.099 237.327 509.816 239.551 512.125 239.551 cv
513.56 239.551 515.323 238.55 518.524 236.734 cv
518.848 236.55 519.189 236.357 519.538 236.159 cv
519.898 236.58 520.243 236.985 520.567 237.367 cv
523.489 240.805 524.823 242.374 526.522 242.374 cv
528.266 242.374 529.55 240.725 532.363 237.114 cv
532.615 236.791 532.881 236.449 533.155 236.099 cv
533.543 236.318 533.92 236.532 534.276 236.734 cv
537.475 238.55 539.238 239.551 540.673 239.551 cv
540.674 239.551 li
542.982 239.551 543.699 237.326 545.271 232.451 cv
545.424 231.975 545.588 231.469 545.759 230.943 cv
546.157 230.992 546.546 231.04 546.916 231.086 cv
549.104 231.358 550.685 231.555 551.896 231.555 cv
551.897 231.555 li
552.856 231.555 554.056 231.446 554.834 230.602 cv
555.959 229.382 555.784 227.223 555.435 222.92 cv
555.398 222.457 555.358 221.967 555.319 221.459 cv
555.804 221.301 556.273 221.15 556.715 221.007 cv
561.042 219.613 563.016 218.976 563.641 217.372 cv
564.265 215.768 563.241 213.965 560.997 210.012 cv
560.813 209.688 560.62 209.347 560.423 208.998 cv
560.843 208.638 561.248 208.293 561.63 207.969 cv
565.093 205.025 566.673 203.682 566.637 201.961 cv
566.6 200.24 564.963 198.965 561.378 196.172 cv
561.055 195.92 560.713 195.654 560.363 195.38 cv
560.582 194.993 560.795 194.616 560.997 194.26 cv
563.241 190.307 564.265 188.503 563.641 186.899 cv
563.016 185.296 561.042 184.659 556.716 183.265 cv
556.239 183.111 555.733 182.948 555.207 182.777 cv
555.256 182.378 555.304 181.989 555.35 181.619 cv
555.903 177.17 556.155 175.14 555.043 173.881 cv
554.229 172.96 552.911 172.833 551.608 172.833 cv
550.476 172.833 549.024 172.951 547.186 173.1 cv
546.723 173.137 546.231 173.177 545.723 173.217 cv
545.565 172.731 545.413 172.262 545.27 171.819 cv
543.699 166.945 542.983 164.721 540.673 164.721 cv
539.239 164.721 537.475 165.722 534.275 167.538 cv
533.951 167.722 533.61 167.915 533.261 168.113 cv
532.901 167.692 532.557 167.287 532.233 166.906 cv
529.31 163.468 527.976 161.898 526.277 161.898 cv
524.533 161.898 523.249 163.546 520.436 167.158 cv
520.184 167.481 519.918 167.822 519.644 168.173 cv
519.256 167.954 518.88 167.74 518.523 167.538 cv
515.323 165.721 513.56 164.721 512.125 164.721 cv
509.816 164.721 509.1 166.946 507.528 171.82 cv
507.375 172.297 507.212 172.803 507.04 173.329 cv
506.641 173.28 506.252 173.232 505.882 173.186 cv
503.694 172.914 502.113 172.717 500.902 172.717 cv
499.944 172.717 498.743 172.826 497.965 173.669 cv
496.84 174.889 497.015 177.049 497.364 181.352 cv
497.401 181.814 497.441 182.305 497.48 182.813 cv
496.995 182.971 496.526 183.122 496.083 183.265 cv
491.757 184.659 489.783 185.296 489.158 186.899 cv
488.534 188.503 489.558 190.307 491.802 194.26 cv
491.986 194.584 492.179 194.925 492.376 195.274 cv
491.956 195.634 491.551 195.979 491.169 196.303 cv
487.706 199.247 486.126 200.59 486.162 202.311 cv
486.199 204.032 487.836 205.306 491.421 208.099 cv
cp
f
444.217 202.086 mo
444.862 200.741 445.328 199.199 445.549 197.508 cv
450.177 202.136 li
445.577 206.737 li
445.358 204.986 444.877 203.415 444.217 202.086 cv
cp
435.688 225.772 mo
429.987 231.473 424.771 233.395 420.921 233.867 cv
443.831 210.957 li
443.275 215.35 440.939 220.521 435.688 225.772 cv
cp
407.463 235.674 mo
409.451 235.418 411.002 234.847 412.101 234.301 cv
413.197 234.824 414.739 235.369 416.701 235.613 cv
412.051 240.262 li
407.463 235.674 li
cp
388.415 225.772 mo
383.167 220.524 380.816 215.38 380.28 210.964 cv
403.255 233.939 li
399.414 233.472 394.184 231.54 388.415 225.772 cv
cp
373.925 202.136 mo
378.526 197.536 li
378.744 199.287 379.225 200.857 379.886 202.186 cv
379.24 203.531 378.774 205.073 378.553 206.764 cv
373.925 202.136 li
cp
388.415 178.5 mo
394.117 172.798 399.332 170.877 403.182 170.405 cv
380.272 193.315 li
380.828 188.922 383.164 183.751 388.415 178.5 cv
cp
416.639 168.598 mo
414.652 168.854 413.1 169.424 412.001 169.971 cv
410.905 169.448 409.364 168.904 407.402 168.66 cv
412.051 164.01 li
416.639 168.598 li
cp
435.688 178.5 mo
440.936 183.749 443.286 188.892 443.823 193.308 cv
420.848 170.333 li
424.689 170.8 429.919 172.732 435.688 178.5 cv
cp
412.019 171.956 mo
414 173.108 414.703 174.421 414.554 175.029 cv
414.419 175.575 413.461 175.915 412.051 175.915 cv
410.679 175.915 409.74 175.575 409.601 175.028 cv
409.42 174.319 410.276 173.019 412.019 171.956 cv
cp
381.872 202.17 mo
382.853 200.49 384.044 199.614 384.769 199.614 cv
385.552 199.614 385.83 200.917 385.83 202.136 cv
385.83 202.716 385.753 204.609 384.752 204.609 cv
384.054 204.609 382.888 203.843 381.872 202.17 cv
cp
412.083 232.316 mo
410.102 231.165 409.4 229.851 409.549 229.243 cv
409.683 228.697 410.642 228.357 412.051 228.357 cv
413.424 228.357 414.362 228.697 414.502 229.244 cv
414.682 229.953 413.826 231.253 412.083 232.316 cv
cp
442.231 202.102 mo
441.249 203.782 440.059 204.658 439.333 204.658 cv
439.153 204.658 438.917 204.612 438.694 204.254 cv
438.501 203.946 438.272 203.328 438.272 202.136 cv
438.272 201.556 438.35 199.662 439.351 199.662 cv
440.049 199.662 441.214 200.429 442.231 202.102 cv
cp
439.351 197.913 mo
438.688 197.913 436.523 198.217 436.523 202.136 cv
436.523 203.425 436.754 204.449 437.209 205.179 cv
437.702 205.971 438.457 206.407 439.333 206.407 cv
440.604 206.407 441.977 205.491 443.117 203.939 cv
443.602 205.229 443.907 206.716 443.959 208.355 cv
418.33 233.983 li
416.533 233.925 415.059 233.58 413.927 233.17 cv
415.66 231.832 416.548 230.191 416.197 228.812 cv
415.987 227.989 415.17 226.608 412.051 226.608 cv
408.87 226.608 408.053 227.998 407.85 228.826 cv
407.507 230.222 408.445 231.87 410.249 233.201 cv
409.12 233.627 407.647 233.986 405.84 234.05 cv
380.168 208.379 li
380.228 206.78 380.53 205.31 381.012 204.008 cv
382.148 205.487 383.503 206.359 384.752 206.359 cv
385.415 206.359 387.58 206.054 387.58 202.136 cv
387.58 198.173 385.429 197.865 384.769 197.865 cv
383.499 197.865 382.126 198.781 380.985 200.333 cv
380.501 199.043 380.195 197.556 380.144 195.918 cv
405.773 170.289 li
407.571 170.347 409.044 170.691 410.176 171.102 cv
408.442 172.44 407.554 174.081 407.905 175.46 cv
408.115 176.283 408.933 177.665 412.051 177.665 cv
415.233 177.665 416.049 176.274 416.253 175.446 cv
416.595 174.05 415.657 172.402 413.853 171.071 cv
414.982 170.645 416.456 170.286 418.263 170.222 cv
443.934 195.893 li
443.874 197.492 443.573 198.962 443.091 200.264 cv
441.955 198.785 440.599 197.913 439.351 197.913 cv
cp
445.691 195.176 mo
445.654 189.956 443.305 183.644 436.924 177.263 cv
429.728 170.066 423.216 168.494 418.976 168.46 cv
412.051 161.536 li
405.058 168.529 li
400.797 168.573 394.295 170.146 387.178 177.263 cv
380.789 183.652 378.462 190.012 378.395 195.192 cv
371.451 202.136 li
378.412 209.096 li
378.449 214.316 380.797 220.628 387.178 227.009 cv
394.376 234.206 400.887 235.778 405.127 235.811 cv
412.051 242.736 li
419.044 235.743 li
423.306 235.698 429.809 234.124 436.924 227.009 cv
443.314 220.62 445.64 214.26 445.707 209.08 cv
452.651 202.136 li
445.691 195.176 li
cp
f
215.625 71.0862 mo
214.577 73.8037 212.618 75.4083 210.307 75.4083 cv
208.385 75.4086 206.285 74.124 206.176 71.743 cv
206.128 70.7052 206.408 69.8375 206.985 69.2337 cv
207.587 68.6033 208.523 68.2561 209.619 68.2561 cv
211.566 68.2561 213.732 69.2814 215.625 71.0862 cv
cp
150.14 71.0865 mo
152.033 69.2816 154.198 68.2561 156.146 68.2561 cv
157.242 68.2561 158.177 68.6031 158.78 69.2335 cv
159.356 69.8373 159.636 70.705 159.589 71.743 cv
159.48 74.1234 157.379 75.4081 155.457 75.4083 cv
153.147 75.4083 151.188 73.8039 150.14 71.0865 cv
cp
150.14 89.577 mo
151.187 86.8593 153.147 85.2546 155.457 85.2546 cv
157.379 85.2546 159.48 86.5394 159.589 88.9197 cv
159.636 89.9576 159.356 90.8251 158.78 91.429 cv
158.177 92.0594 157.242 92.4071 156.146 92.4071 cv
156.145 92.4071 156.145 92.4071 156.145 92.4071 cv
154.198 92.4071 152.033 91.3816 150.14 89.577 cv
cp
215.625 89.5766 mo
213.732 91.3816 211.566 92.4071 209.619 92.4071 cv
208.522 92.4071 207.587 92.0599 206.985 91.4298 cv
206.408 90.8259 206.128 89.958 206.176 88.9197 cv
206.285 86.5394 208.385 85.2546 210.307 85.2546 cv
212.617 85.2546 214.576 86.8593 215.625 89.5766 cv
cp
216.922 88.1616 mo
215.532 85.2192 213.135 83.5052 210.307 83.5052 cv
207.095 83.5052 204.567 85.7987 204.428 88.8402 cv
204.359 90.3672 204.805 91.6806 205.72 92.6381 cv
206.656 93.6175 208.04 94.1566 209.619 94.1566 cv
211.777 94.1566 214.104 93.1802 216.166 91.4397 cv
216.637 93.6837 216.635 96.401 216.159 99.5442 cv
213.676 101.527 211.324 102.888 209.144 103.602 cv
209.683 100.588 209.199 97.7789 207.77 95.8881 cv
206.768 94.5611 205.394 93.8303 203.903 93.8303 cv
202.932 93.8303 201.964 94.1352 201.024 94.7366 cv
198.905 96.0923 198.011 98.5909 198.746 101.101 cv
199.604 104.036 202.383 105.932 205.826 105.932 cv
206.107 105.932 206.393 105.92 206.683 105.896 cv
205.73 108.361 204.067 110.831 201.813 113.12 cv
198.7 113.929 195.735 114.136 193.122 113.727 cv
194.821 111.278 195.203 108.618 194.15 106.263 cv
193.161 104.052 191.06 102.624 188.797 102.624 cv
187.927 102.624 187.083 102.832 186.286 103.245 cv
184.273 104.288 183.256 106.065 183.494 108.12 cv
183.765 110.45 185.848 113.255 189.903 114.712 cv
188.194 116.241 185.841 117.598 182.882 118.757 cv
179.924 117.598 177.57 116.241 175.862 114.711 cv
179.916 113.253 181.999 110.448 182.269 108.118 cv
182.508 106.064 181.49 104.288 179.478 103.245 cv
178.681 102.832 177.837 102.624 176.967 102.624 cv
174.704 102.624 172.603 104.052 171.615 106.263 cv
170.562 108.618 170.944 111.278 172.644 113.727 cv
170.033 114.135 167.067 113.93 163.952 113.12 cv
161.697 110.831 160.035 108.361 159.082 105.896 cv
159.372 105.92 159.657 105.932 159.937 105.932 cv
159.938 105.932 159.938 105.932 159.938 105.932 cv
163.381 105.931 166.16 104.035 167.018 101.1 cv
167.753 98.5896 166.858 96.0918 164.741 94.7366 cv
163.801 94.1352 162.832 93.8303 161.861 93.8303 cv
160.37 93.8303 158.997 94.5611 157.995 95.8881 cv
156.566 97.7789 156.081 100.589 156.621 103.602 cv
154.441 102.888 152.089 101.528 149.605 99.5442 cv
149.13 96.4024 149.128 93.685 149.599 91.4401 cv
151.661 93.1806 153.987 94.1566 156.145 94.1566 cv
156.146 94.1566 li
157.724 94.1561 159.109 93.6167 160.045 92.6374 cv
160.959 91.6797 161.406 90.3668 161.336 88.8402 cv
161.197 85.7987 158.67 83.5052 155.457 83.5052 cv
152.629 83.5052 150.232 85.2192 148.843 88.162 cv
147.185 86.1037 145.876 83.4287 145.021 80.3315 cv
145.876 77.2349 147.185 74.5593 148.843 72.5014 cv
150.232 75.4438 152.629 77.158 155.457 77.1578 cv
155.457 77.1578 li
158.67 77.1574 161.197 74.864 161.336 71.8229 cv
161.406 70.296 160.959 68.9826 160.044 68.025 cv
159.109 67.0459 157.724 66.5067 156.146 66.5067 cv
153.988 66.5067 151.661 67.4826 149.598 69.2233 cv
149.128 66.9792 149.129 64.2622 149.605 61.119 cv
152.089 59.1357 154.441 57.7758 156.62 57.0612 cv
156.081 60.0751 156.565 62.8843 157.994 64.7749 cv
158.997 66.1022 160.37 66.8329 161.861 66.8329 cv
162.832 66.8329 163.801 66.528 164.741 65.9266 cv
166.859 64.5709 167.753 62.0728 167.019 59.5622 cv
166.16 56.6275 163.381 54.7312 159.938 54.7312 cv
159.658 54.7312 159.372 54.7435 159.081 54.7673 cv
160.035 52.3027 161.697 49.8321 163.952 47.5427 cv
167.066 46.7333 170.03 46.5279 172.643 46.9369 cv
170.943 49.3855 170.561 52.0456 171.615 54.4011 cv
172.603 56.6114 174.704 58.0398 176.967 58.0398 cv
176.968 58.0398 li
177.837 58.0395 178.682 57.8302 179.478 57.4179 cv
181.491 56.375 182.509 54.5982 182.27 52.5432 cv
181.999 50.2133 179.916 47.4086 175.862 45.9515 cv
177.57 44.4218 179.924 43.0653 182.882 41.9063 cv
185.84 43.0653 188.194 44.422 189.903 45.952 cv
185.849 47.4101 183.766 50.2154 183.495 52.5453 cv
183.257 54.5995 184.274 56.3755 186.286 57.4179 cv
187.083 57.8304 187.928 58.0398 188.797 58.0398 cv
191.06 58.0395 193.161 56.6108 194.15 54.3999 cv
195.202 52.0447 194.821 49.3849 193.121 46.9367 cv
195.732 46.5275 198.698 46.7329 201.813 47.5427 cv
204.067 49.8319 205.73 52.3023 206.683 54.7673 cv
206.392 54.7435 206.107 54.7312 205.826 54.7312 cv
202.384 54.7312 199.605 56.6277 198.746 59.5626 cv
198.012 62.0732 198.906 64.5712 201.024 65.9266 cv
201.964 66.5282 202.932 66.8332 203.903 66.8329 cv
205.394 66.8329 206.768 66.102 207.77 64.7747 cv
209.198 62.8839 209.683 60.0745 209.144 57.0608 cv
211.323 57.7752 213.675 59.1351 216.159 61.119 cv
216.635 64.2611 216.637 66.9782 216.166 69.2229 cv
214.104 67.4826 211.777 66.5067 209.619 66.5067 cv
208.04 66.5067 206.656 67.0459 205.72 68.0252 cv
204.805 68.9828 204.359 70.2962 204.428 71.8229 cv
204.567 74.8646 207.095 77.158 210.307 77.1578 cv
213.135 77.1576 215.533 75.4436 216.922 72.5012 cv
218.58 74.5593 219.888 77.2342 220.743 80.3315 cv
219.888 83.428 218.58 86.1037 216.922 88.1616 cv
cp
207.26 104.065 mo
206.767 104.143 206.286 104.182 205.826 104.183 cv
202.614 104.183 200.93 102.337 200.425 100.61 cv
199.913 98.8638 200.519 97.1366 201.967 96.2101 cv
202.621 95.7915 203.272 95.5797 203.903 95.5797 cv
205.094 95.5797 205.905 96.3207 206.374 96.9426 cv
207.627 98.6003 207.947 101.233 207.26 104.065 cv
cp
191.247 113.311 mo
187.399 112.187 185.454 109.828 185.232 107.918 cv
185.08 106.606 185.74 105.498 187.091 104.799 cv
187.637 104.516 188.211 104.373 188.797 104.373 cv
190.371 104.373 191.846 105.395 192.553 106.977 cv
193.424 108.924 192.946 111.21 191.247 113.311 cv
cp
173.212 106.977 mo
173.919 105.395 175.393 104.373 176.967 104.373 cv
177.554 104.373 178.128 104.516 178.673 104.799 cv
180.024 105.498 180.684 106.605 180.531 107.916 cv
180.31 109.826 178.365 112.186 174.518 113.31 cv
172.819 111.21 172.341 108.924 173.212 106.977 cv
cp
159.39 96.9426 mo
159.86 96.3207 160.67 95.5797 161.861 95.5797 cv
162.492 95.5797 163.144 95.7915 163.798 96.2101 cv
165.245 97.1361 165.85 98.8629 165.339 100.608 cv
164.834 102.336 163.15 104.182 159.938 104.183 cv
159.938 104.183 159.938 104.183 159.937 104.183 cv
159.478 104.183 158.998 104.143 158.505 104.065 cv
157.818 101.233 158.138 98.6003 159.39 96.9426 cv
cp
158.504 56.5982 mo
158.998 56.5202 159.478 56.4807 159.938 56.4807 cv
163.15 56.4807 164.834 58.3263 165.34 60.0533 cv
165.851 61.7996 165.245 63.5267 163.798 64.453 cv
163.144 64.8714 162.492 65.0835 161.861 65.0835 cv
160.67 65.0835 159.86 64.3422 159.39 63.7204 cv
158.138 62.0631 157.817 59.4298 158.504 56.5982 cv
cp
174.518 47.3526 mo
178.365 48.476 180.31 50.8355 180.532 52.7452 cv
180.685 54.0567 180.024 55.1646 178.673 55.8644 cv
178.128 56.1469 177.554 56.2901 176.967 56.2903 cv
175.394 56.2903 173.919 55.2684 173.212 53.6868 cv
172.341 51.7391 172.819 49.4539 174.518 47.3526 cv
cp
192.553 53.6857 mo
191.845 55.2677 190.371 56.2901 188.797 56.2903 cv
188.211 56.2903 187.637 56.1469 187.091 55.8644 cv
185.741 55.165 185.081 54.0577 185.233 52.7469 cv
185.454 50.8375 187.399 48.4775 191.247 47.3529 cv
192.945 49.4534 193.423 51.7383 192.553 53.6857 cv
cp
206.374 63.7201 mo
205.904 64.3422 205.094 65.0835 203.903 65.0835 cv
203.272 65.0837 202.621 64.8714 201.967 64.453 cv
200.519 63.5268 199.914 61.8 200.425 60.0538 cv
200.93 58.3265 202.615 56.4807 205.826 56.4807 cv
206.286 56.4807 206.766 56.5201 207.259 56.598 cv
207.947 59.4295 207.626 62.0627 206.374 63.7201 cv
cp
222.555 80.3315 mo
222.495 80.1055 li
221.472 76.2794 219.791 73.0152 217.62 70.6274 cv
218.402 67.8952 218.474 64.4953 217.835 60.5114 cv
217.782 60.1819 li
217.523 59.9714 li
214.392 57.4251 211.411 55.7884 208.654 55.0996 cv
207.673 52.0249 205.686 48.9374 202.884 46.1388 cv
202.719 45.9735 li
202.493 45.9129 li
198.658 44.8829 195 44.7081 191.847 45.3959 cv
189.872 43.3527 186.964 41.5898 183.194 40.1513 cv
182.882 40.0323 li
182.57 40.1513 li
178.8 41.59 175.893 43.3527 173.917 45.3959 cv
170.762 44.7079 167.106 44.8829 163.271 45.9129 cv
163.046 45.9735 li
162.88 46.1388 li
160.078 48.9379 158.092 52.0253 157.109 55.0999 cv
154.352 55.789 151.372 57.426 148.241 59.9714 cv
147.982 60.1819 li
147.929 60.5114 li
147.29 64.4968 147.363 67.8965 148.144 70.6279 cv
145.973 73.0157 144.292 76.2796 143.27 80.1055 cv
143.209 80.3315 li
143.27 80.5574 li
144.292 84.3833 145.973 87.6477 148.145 90.0357 cv
147.363 92.768 147.29 96.1678 147.929 100.151 cv
147.982 100.481 li
148.241 100.692 li
151.373 103.238 154.353 104.875 157.11 105.563 cv
158.092 108.638 160.078 111.726 162.88 114.524 cv
163.046 114.69 li
163.271 114.75 li
167.108 115.781 170.766 115.955 173.918 115.267 cv
175.893 117.31 178.801 119.073 182.57 120.512 cv
182.882 120.631 li
183.194 120.512 li
186.964 119.073 189.872 117.31 191.847 115.268 cv
193.109 115.543 194.453 115.681 195.854 115.681 cv
195.854 115.681 195.855 115.681 195.856 115.681 cv
197.959 115.681 200.192 115.368 202.493 114.75 cv
202.719 114.69 li
202.884 114.524 li
205.686 111.726 207.673 108.638 208.655 105.563 cv
211.412 104.874 214.393 103.238 217.523 100.692 cv
217.782 100.481 li
217.835 100.151 li
218.475 96.1665 218.402 92.7667 217.62 90.0349 cv
219.791 87.6473 221.472 84.3833 222.495 80.5574 cv
222.555 80.3315 li
cp
f
442.443 88.9169 mo
441.561 85.645 441.055 82.531 441.055 80.3316 cv
441.055 78.132 441.561 75.0181 442.443 71.7462 cv
446.306 74.0225 450.382 76.6278 450.382 80.3316 cv
450.382 84.0352 446.306 86.6405 442.443 88.9169 cv
cp
436.372 100.258 mo
436.405 98.0031 436.523 95.9946 437.148 94.912 cv
437.772 93.8305 439.45 92.7249 441.384 91.5708 cv
442.21 94.1961 443.259 96.832 444.496 99.1541 cv
441.873 99.2451 439.063 99.658 436.372 100.258 cv
cp
431.138 113.663 mo
430.331 114.129 429.446 114.356 428.432 114.356 cv
425.721 114.356 422.586 112.694 419.733 111.081 cv
422.126 108.681 424.57 106.686 426.474 105.586 cv
428.366 104.494 431.306 103.357 434.604 102.475 cv
434.564 106.965 434.35 111.808 431.138 113.663 cv
cp
411.894 117.977 mo
410.501 115.745 408.743 113.519 406.882 111.49 cv
408.848 110.393 410.645 109.492 411.894 109.492 cv
413.143 109.492 414.939 110.393 416.905 111.49 cv
415.045 113.519 413.287 115.745 411.894 117.977 cv
cp
395.355 114.356 mo
394.342 114.356 393.457 114.129 392.65 113.663 cv
389.438 111.809 389.223 106.965 389.184 102.476 cv
392.481 103.358 395.421 104.493 397.313 105.586 cv
399.218 106.686 401.661 108.681 404.054 111.081 cv
401.202 112.693 398.066 114.356 395.355 114.356 cv
cp
382.404 91.5708 mo
384.337 92.7249 386.015 93.8305 386.64 94.912 cv
387.265 95.9946 387.383 98.0032 387.415 100.258 cv
384.725 99.6579 381.915 99.2451 379.292 99.1541 cv
380.529 96.832 381.577 94.1961 382.404 91.5708 cv
cp
373.406 80.3316 mo
373.406 76.6278 377.481 74.0225 381.344 71.7462 cv
382.227 75.0181 382.733 78.132 382.733 80.3316 cv
382.733 82.5309 382.227 85.6449 381.344 88.9168 cv
377.481 86.6405 373.406 84.0351 373.406 80.3316 cv
cp
387.415 60.4055 mo
387.383 62.6601 387.265 64.6686 386.64 65.7512 cv
386.015 66.8327 384.337 67.9382 382.404 69.0923 cv
381.577 66.4668 380.529 63.8308 379.292 61.5087 cv
381.915 61.4178 384.725 61.0049 387.415 60.4055 cv
cp
392.65 47 mo
393.457 46.534 394.342 46.3073 395.356 46.3073 cv
398.067 46.3073 401.202 47.9695 404.054 49.5822 cv
401.662 51.9821 399.218 53.9775 397.313 55.0771 cv
395.422 56.1695 392.481 57.3039 389.184 58.185 cv
389.223 53.6961 389.438 48.8539 392.65 47 cv
cp
411.894 42.6861 mo
413.287 44.9177 415.045 47.1441 416.905 49.1723 cv
414.939 50.27 413.143 51.1703 411.894 51.1703 cv
410.645 51.1703 408.848 50.2701 406.882 49.1724 cv
408.743 47.1441 410.501 44.9177 411.894 42.6861 cv
cp
428.432 46.3073 mo
429.446 46.3073 430.331 46.534 431.138 47 cv
434.351 48.8546 434.565 53.6999 434.604 58.1898 cv
431.306 57.3071 428.366 56.1697 426.474 55.0771 cv
424.57 53.9775 422.126 51.9822 419.734 49.5824 cv
422.586 47.9693 425.721 46.3073 428.432 46.3073 cv
cp
441.384 69.0923 mo
439.45 67.9382 437.772 66.8327 437.148 65.7512 cv
436.523 64.6686 436.405 62.66 436.372 60.4054 cv
439.063 61.0049 441.873 61.4178 444.496 61.5087 cv
443.259 63.8307 442.21 66.4668 441.384 69.0923 cv
cp
434.618 100.682 mo
430.968 101.623 427.68 102.869 425.6 104.071 cv
423.494 105.286 420.778 107.502 418.149 110.182 cv
415.751 108.829 413.656 107.743 411.894 107.743 cv
410.132 107.743 408.037 108.829 405.638 110.182 cv
403.009 107.502 400.293 105.286 398.188 104.071 cv
396.107 102.869 392.82 101.623 389.17 100.681 cv
389.142 97.9256 389.036 95.5647 388.155 94.0373 cv
387.273 92.5109 385.285 91.24 382.915 89.8395 cv
383.921 86.2225 384.482 82.7625 384.482 80.3316 cv
384.482 77.9007 383.921 74.4406 382.915 70.8236 cv
385.285 69.4233 387.273 68.152 388.155 66.6259 cv
389.036 65.0984 389.142 62.7375 389.17 59.9816 cv
392.82 59.0404 396.107 57.7939 398.188 56.5926 cv
400.293 55.377 403.009 53.161 405.638 50.4806 cv
408.036 51.8337 410.132 52.9198 411.894 52.9198 cv
413.656 52.9198 415.751 51.8337 418.149 50.4808 cv
420.778 53.161 423.494 55.377 425.6 56.5926 cv
427.68 57.7939 430.967 59.0404 434.618 59.9816 cv
434.645 62.7374 434.751 65.0985 435.633 66.6259 cv
436.514 68.152 438.502 69.4233 440.873 70.8236 cv
439.866 74.4406 439.305 77.9007 439.305 80.3316 cv
439.305 82.7626 439.866 86.2226 440.873 89.8396 cv
438.502 91.2401 436.514 92.5109 435.633 94.0373 cv
434.751 95.5647 434.645 97.9257 434.618 100.682 cv
cp
442.942 70.0098 mo
443.912 66.844 445.209 63.6535 446.734 61.0986 cv
447.537 59.7528 li
445.97 59.7754 li
442.934 59.8266 439.542 59.3609 436.357 58.6263 cv
436.322 53.5444 436.189 47.8958 432.013 45.4846 cv
430.947 44.8695 429.743 44.5578 428.432 44.5578 cv
425.144 44.5578 421.622 46.4968 418.479 48.2823 cv
416.222 45.8593 414.108 43.1404 412.658 40.5424 cv
411.894 39.174 li
411.13 40.5424 li
409.68 43.1406 407.565 45.8595 405.309 48.2825 cv
402.165 46.4969 398.644 44.5578 395.356 44.5578 cv
394.045 44.5578 392.84 44.8695 391.775 45.4846 cv
387.601 47.8949 387.466 53.5407 387.431 58.6207 cv
384.245 59.3546 380.852 59.8211 377.817 59.7754 cv
376.25 59.7528 li
377.053 61.0986 li
378.579 63.6535 379.876 66.8441 380.846 70.0098 cv
376.467 72.5781 371.656 75.5164 371.656 80.3316 cv
371.656 85.1466 376.468 88.0848 380.846 90.6533 cv
379.876 93.8189 378.578 97.0096 377.053 99.5646 cv
376.25 100.91 li
377.817 100.888 li
380.853 100.84 384.246 101.306 387.431 102.04 cv
387.466 107.121 387.6 112.768 391.775 115.179 cv
392.84 115.793 394.045 116.105 395.355 116.105 cv
398.644 116.105 402.165 114.166 405.308 112.381 cv
407.565 114.803 409.68 117.522 411.13 120.121 cv
411.894 121.489 li
412.658 120.121 li
414.108 117.522 416.222 114.803 418.479 112.381 cv
421.622 114.166 425.144 116.105 428.432 116.105 cv
429.743 116.105 430.948 115.793 432.013 115.179 cv
436.188 112.768 436.322 107.119 436.357 102.038 cv
439.542 101.303 442.936 100.838 445.97 100.888 cv
447.537 100.91 li
446.734 99.5646 li
445.209 97.0096 443.912 93.8189 442.942 90.6533 cv
447.32 88.0849 452.132 85.1466 452.132 80.3316 cv
452.132 75.5164 447.32 72.5781 442.942 70.0098 cv
cp
f
445.013 330.907 mo
444.318 331.973 443.676 332.955 443.043 333.823 cv
442.507 330.533 442.032 327.238 441.632 323.94 cv
442.032 320.643 442.508 317.348 443.043 314.059 cv
443.676 314.926 444.319 315.908 445.013 316.975 cv
446.459 319.193 448.08 321.683 450.197 323.94 cv
448.08 326.198 446.458 328.688 445.013 330.907 cv
cp
425.757 353.807 mo
427.234 351.893 427.569 349.613 426.66 347.418 cv
425.487 344.587 422.457 342.61 419.292 342.61 cv
416.47 342.61 414.357 344.251 413.776 346.894 cv
413.456 348.347 414.033 349.853 415.179 350.557 cv
415.866 350.98 416.755 351.058 417.555 350.767 cv
418.279 350.504 418.823 349.966 419.047 349.292 cv
419.2 348.834 418.952 348.339 418.494 348.186 cv
418.035 348.032 417.54 348.281 417.388 348.739 cv
417.312 348.964 417.085 349.077 416.956 349.123 cv
416.662 349.23 416.324 349.208 416.095 349.066 cv
415.59 348.756 415.328 347.984 415.484 347.27 cv
416.062 344.643 418.34 344.359 419.292 344.359 cv
421.769 344.359 424.134 345.893 425.044 348.088 cv
425.487 349.158 425.917 351.266 423.82 353.363 cv
423.789 353.395 423.753 353.426 423.72 353.457 cv
419.873 352.807 416.016 352.238 412.156 351.771 cv
412.051 351.758 li
411.946 351.771 li
408.087 352.238 404.229 352.807 400.382 353.457 cv
400.35 353.426 400.314 353.395 400.282 353.363 cv
398.185 351.266 398.615 349.158 399.058 348.088 cv
399.968 345.893 402.333 344.359 404.81 344.359 cv
405.763 344.359 408.04 344.643 408.618 347.27 cv
408.775 347.984 408.512 348.756 408.008 349.066 cv
407.778 349.208 407.439 349.23 407.146 349.123 cv
407.017 349.077 406.79 348.964 406.715 348.739 cv
406.562 348.281 406.068 348.032 405.608 348.186 cv
405.15 348.339 404.902 348.834 405.055 349.292 cv
405.28 349.966 405.824 350.504 406.547 350.767 cv
407.348 351.058 408.235 350.98 408.924 350.556 cv
410.069 349.852 410.645 348.346 410.326 346.894 cv
409.745 344.251 407.632 342.61 404.81 342.61 cv
401.645 342.61 398.615 344.588 397.442 347.418 cv
396.533 349.613 396.868 351.893 398.346 353.807 cv
391.357 355.049 384.413 356.585 377.58 358.412 cv
379.407 351.577 380.944 344.63 382.186 337.637 cv
383.39 338.567 384.736 339.053 386.118 339.053 cv
386.932 339.053 387.759 338.887 388.573 338.549 cv
391.404 337.377 393.382 334.347 393.382 331.181 cv
393.382 328.36 391.74 326.246 389.098 325.665 cv
387.644 325.346 386.138 325.923 385.435 327.068 cv
385.012 327.755 384.933 328.643 385.224 329.443 cv
385.487 330.167 386.025 330.712 386.699 330.937 cv
387.159 331.091 387.654 330.841 387.806 330.383 cv
387.959 329.925 387.711 329.43 387.253 329.277 cv
387.027 329.202 386.915 328.974 386.868 328.845 cv
386.761 328.552 386.784 328.214 386.925 327.984 cv
387.235 327.479 388.007 327.215 388.722 327.374 cv
391.348 327.952 391.632 330.229 391.632 331.181 cv
391.632 333.659 390.099 336.023 387.903 336.933 cv
386.833 337.376 384.726 337.807 382.628 335.71 cv
382.597 335.678 382.566 335.642 382.534 335.609 cv
383.185 331.763 383.753 327.905 384.22 324.046 cv
384.233 323.94 li
384.22 323.835 li
383.753 319.976 383.185 316.118 382.534 312.272 cv
382.566 312.239 382.597 312.203 382.628 312.171 cv
384.727 310.074 386.833 310.505 387.903 310.948 cv
390.099 311.857 391.632 314.222 391.632 316.699 cv
391.632 317.652 391.348 319.929 388.722 320.507 cv
388.01 320.664 387.236 320.402 386.925 319.897 cv
386.784 319.667 386.761 319.328 386.868 319.035 cv
386.915 318.906 387.027 318.679 387.253 318.604 cv
387.711 318.451 387.959 317.955 387.806 317.497 cv
387.654 317.039 387.159 316.79 386.699 316.944 cv
386.025 317.168 385.488 317.713 385.224 318.437 cv
384.933 319.237 385.012 320.125 385.435 320.813 cv
386.139 321.958 387.644 322.534 389.098 322.216 cv
391.74 321.634 393.382 319.521 393.382 316.699 cv
393.382 313.534 391.404 310.504 388.573 309.331 cv
386.378 308.422 384.098 308.756 382.185 310.235 cv
380.943 303.245 379.406 296.301 377.58 289.468 cv
384.412 291.295 391.356 292.832 398.346 294.074 cv
396.868 295.987 396.533 298.267 397.442 300.461 cv
398.615 303.293 401.645 305.27 404.81 305.27 cv
407.632 305.27 409.745 303.629 410.326 300.987 cv
410.646 299.534 410.069 298.028 408.924 297.324 cv
408.235 296.901 407.348 296.822 406.548 297.113 cv
405.824 297.376 405.28 297.914 405.055 298.588 cv
404.902 299.046 405.15 299.542 405.608 299.695 cv
406.068 299.849 406.562 299.6 406.715 299.142 cv
406.79 298.916 407.017 298.804 407.146 298.757 cv
407.439 298.651 407.777 298.673 408.008 298.815 cv
408.513 299.125 408.775 299.897 408.618 300.611 cv
408.04 303.237 405.763 303.521 404.81 303.521 cv
402.333 303.521 399.968 301.987 399.058 299.792 cv
398.615 298.722 398.185 296.615 400.282 294.518 cv
400.314 294.486 400.35 294.455 400.382 294.423 cv
404.229 295.074 408.086 295.642 411.946 296.11 cv
412.051 296.122 li
412.156 296.11 li
416.016 295.642 419.874 295.074 423.72 294.423 cv
423.753 294.455 423.789 294.486 423.82 294.518 cv
425.917 296.615 425.487 298.723 425.044 299.792 cv
424.134 301.987 421.769 303.521 419.292 303.521 cv
418.34 303.521 416.062 303.237 415.484 300.611 cv
415.328 299.897 415.59 299.125 416.095 298.814 cv
416.325 298.673 416.664 298.651 416.956 298.757 cv
417.085 298.804 417.312 298.916 417.388 299.142 cv
417.54 299.6 418.035 299.849 418.494 299.695 cv
418.952 299.542 419.2 299.046 419.047 298.588 cv
418.823 297.914 418.279 297.376 417.554 297.113 cv
416.755 296.823 415.866 296.901 415.179 297.324 cv
414.033 298.028 413.456 299.534 413.776 300.987 cv
414.357 303.629 416.47 305.27 419.292 305.27 cv
422.457 305.27 425.487 303.293 426.66 300.462 cv
427.569 298.267 427.234 295.988 425.757 294.074 cv
432.746 292.832 439.691 291.295 446.523 289.468 cv
444.696 296.302 443.159 303.246 441.918 310.235 cv
440.004 308.757 437.725 308.422 435.53 309.331 cv
432.698 310.504 430.721 313.534 430.721 316.699 cv
430.721 319.521 432.362 321.634 435.005 322.216 cv
436.46 322.536 437.963 321.958 438.668 320.813 cv
439.09 320.125 439.169 319.236 438.878 318.436 cv
438.614 317.713 438.077 317.168 437.403 316.944 cv
436.943 316.79 436.449 317.039 436.296 317.497 cv
436.143 317.955 436.391 318.451 436.849 318.604 cv
437.075 318.679 437.187 318.906 437.234 319.035 cv
437.341 319.328 437.318 319.667 437.177 319.897 cv
436.866 320.401 436.095 320.663 435.381 320.507 cv
432.754 319.929 432.47 317.652 432.47 316.699 cv
432.47 314.222 434.004 311.857 436.199 310.948 cv
437.269 310.505 439.377 310.075 441.474 312.171 cv
441.506 312.203 441.537 312.239 441.568 312.271 cv
440.917 316.118 440.349 319.976 439.882 323.835 cv
439.869 323.94 li
439.882 324.046 li
440.349 327.905 440.917 331.762 441.568 335.609 cv
441.537 335.642 441.506 335.678 441.474 335.71 cv
439.376 337.806 437.269 337.376 436.199 336.933 cv
434.004 336.023 432.47 333.659 432.47 331.181 cv
432.47 330.229 432.754 327.952 435.381 327.374 cv
436.095 327.217 436.866 327.479 437.177 327.984 cv
437.318 328.214 437.341 328.552 437.234 328.845 cv
437.187 328.974 437.075 329.202 436.849 329.277 cv
436.391 329.43 436.143 329.925 436.296 330.383 cv
436.449 330.841 436.943 331.091 437.403 330.937 cv
438.077 330.712 438.615 330.168 438.878 329.444 cv
439.169 328.644 439.09 327.756 438.668 327.068 cv
437.963 325.923 436.457 325.346 435.005 325.665 cv
432.362 326.246 430.721 328.36 430.721 331.181 cv
430.721 334.347 432.698 337.377 435.529 338.549 cv
436.344 338.887 437.17 339.053 437.985 339.053 cv
439.366 339.053 440.712 338.567 441.916 337.637 cv
443.158 344.629 444.695 351.576 446.523 358.412 cv
439.69 356.585 432.745 355.049 425.757 353.807 cv
cp
419.017 356.902 mo
416.799 358.348 414.309 359.97 412.051 362.086 cv
409.794 359.97 407.304 358.348 405.085 356.902 cv
404.019 356.208 403.037 355.565 402.169 354.933 cv
405.458 354.397 408.754 353.921 412.051 353.521 cv
415.348 353.921 418.644 354.397 421.933 354.932 cv
421.065 355.565 420.083 356.208 419.017 356.902 cv
cp
379.089 330.906 mo
377.644 328.687 376.022 326.198 373.906 323.94 cv
376.021 321.683 377.643 319.194 379.089 316.975 cv
379.783 315.909 380.426 314.927 381.059 314.059 cv
381.595 317.347 382.07 320.643 382.471 323.94 cv
382.07 327.238 381.595 330.534 381.059 333.823 cv
380.426 332.954 379.784 331.972 379.089 330.906 cv
cp
405.086 290.978 mo
407.305 289.533 409.794 287.911 412.051 285.795 cv
414.309 287.911 416.798 289.533 419.017 290.978 cv
420.083 291.673 421.065 292.315 421.933 292.948 cv
418.644 293.484 415.349 293.96 412.051 294.36 cv
408.754 293.96 405.458 293.484 402.169 292.948 cv
403.037 292.315 404.02 291.673 405.086 290.978 cv
cp
446.479 316.02 mo
445.451 314.441 444.468 312.939 443.435 311.729 cv
444.789 303.889 446.515 296.1 448.609 288.457 cv
449.015 286.977 li
447.534 287.382 li
439.894 289.477 432.104 291.202 424.263 292.556 cv
423.052 291.523 421.55 290.54 419.971 289.512 cv
417.62 287.98 414.955 286.244 412.67 283.959 cv
412.051 283.341 li
411.433 283.959 li
409.148 286.244 406.482 287.98 404.131 289.512 cv
402.552 290.54 401.05 291.523 399.84 292.556 cv
391.998 291.202 384.209 289.477 376.568 287.382 cv
375.088 286.977 li
375.494 288.457 li
377.587 296.098 379.313 303.888 380.667 311.729 cv
379.634 312.94 378.651 314.442 377.623 316.02 cv
376.091 318.372 374.354 321.037 372.07 323.322 cv
371.451 323.94 li
372.07 324.559 li
374.355 326.844 376.091 329.509 377.623 331.861 cv
378.651 333.439 379.634 334.941 380.667 336.152 cv
379.313 343.993 377.587 351.783 375.494 359.423 cv
375.088 360.904 li
376.568 360.498 li
384.21 358.404 392 356.679 399.84 355.325 cv
401.05 356.357 402.552 357.34 404.13 358.368 cv
406.482 359.901 409.148 361.637 411.433 363.922 cv
412.051 364.54 li
412.67 363.922 li
414.955 361.637 417.62 359.901 419.972 358.368 cv
421.55 357.34 423.052 356.357 424.263 355.325 cv
432.103 356.679 439.892 358.404 447.534 360.498 cv
449.015 360.904 li
448.609 359.423 li
446.515 351.781 444.789 343.992 443.435 336.152 cv
444.468 334.941 445.451 333.44 446.479 331.862 cv
448.011 329.51 449.747 326.844 452.033 324.559 cv
452.651 323.94 li
452.033 323.322 li
449.747 321.037 448.011 318.371 446.479 316.02 cv
cp
f
332.84 331.733 mo
332.409 332.055 332.002 332.36 331.574 332.618 cv
330.508 333.261 329.242 333.6 327.914 333.6 cv
327.377 333.6 326.838 333.544 326.313 333.432 cv
320.233 332.141 li
325.721 335.06 li
327.379 335.942 328.657 337.402 329.228 339.065 cv
329.39 339.537 329.505 340.032 329.628 340.555 cv
329.796 341.277 329.971 342.024 330.282 342.75 cv
329.496 342.844 328.763 343.066 328.053 343.281 cv
327.539 343.437 327.053 343.584 326.564 343.68 cv
324.854 344.015 322.913 343.627 321.342 342.645 cv
316.068 339.35 li
320.228 343.972 li
321.484 345.368 322.186 347.177 322.154 348.935 cv
322.144 349.434 322.084 349.938 322.02 350.472 cv
321.931 351.208 321.84 351.969 321.884 352.759 cv
321.114 352.579 320.349 352.536 319.609 352.495 cv
319.072 352.466 318.565 352.438 318.072 352.36 cv
316.335 352.087 314.675 351.082 313.518 349.603 cv
309.692 344.708 li
312.018 350.469 li
312.722 352.21 312.762 354.15 312.13 355.79 cv
311.951 356.257 311.721 356.71 311.478 357.19 cv
311.144 357.851 310.798 358.535 310.569 359.291 cv
309.908 358.859 309.204 358.558 308.523 358.267 cv
308.028 358.055 307.56 357.855 307.123 357.613 cv
305.584 356.762 304.368 355.25 303.788 353.464 cv
301.866 347.551 li
302.082 353.765 li
302.147 355.642 301.522 357.478 300.367 358.804 cv
300.039 359.181 299.668 359.528 299.276 359.896 cv
298.735 360.403 298.176 360.927 297.702 361.56 cv
297.228 360.927 296.67 360.403 296.129 359.896 cv
295.736 359.528 295.366 359.181 295.038 358.805 cv
293.883 357.478 293.258 355.642 293.323 353.765 cv
293.539 347.551 li
291.617 353.464 li
291.037 355.25 289.821 356.762 288.282 357.613 cv
287.844 357.855 287.377 358.055 286.882 358.267 cv
286.201 358.558 285.498 358.859 284.836 359.291 cv
284.607 358.535 284.261 357.851 283.927 357.19 cv
283.684 356.71 283.454 356.257 283.275 355.79 cv
282.642 354.15 282.684 352.21 283.387 350.469 cv
285.716 344.705 li
281.887 349.603 li
280.73 351.082 279.07 352.087 277.333 352.36 cv
276.84 352.438 276.333 352.466 275.796 352.495 cv
275.056 352.536 274.291 352.579 273.521 352.759 cv
273.564 351.97 273.473 351.209 273.385 350.473 cv
273.321 349.939 273.26 349.435 273.251 348.935 cv
273.219 347.177 273.92 345.368 275.177 343.972 cv
279.336 339.353 li
274.064 342.645 li
272.491 343.627 270.55 344.014 268.841 343.68 cv
268.352 343.584 267.866 343.437 267.352 343.281 cv
266.642 343.066 265.908 342.844 265.123 342.75 cv
265.434 342.023 265.608 341.277 265.777 340.555 cv
265.9 340.032 266.015 339.537 266.177 339.065 cv
266.748 337.402 268.026 335.942 269.684 335.06 cv
275.172 332.141 li
269.092 333.432 li
268.567 333.544 268.028 333.6 267.491 333.6 cv
266.163 333.6 264.897 333.261 263.831 332.618 cv
263.403 332.36 262.996 332.055 262.565 331.733 cv
261.972 331.289 261.36 330.829 260.655 330.473 cv
261.195 329.897 261.614 329.256 262.019 328.635 cv
262.314 328.185 262.592 327.759 262.906 327.371 cv
264.011 326.003 265.711 325.068 267.57 324.807 cv
273.727 323.94 li
267.57 323.074 li
265.711 322.813 264.011 321.878 262.906 320.51 cv
262.592 320.122 262.314 319.696 262.02 319.246 cv
261.614 318.626 261.195 317.984 260.655 317.408 cv
261.36 317.051 261.973 316.592 262.565 316.148 cv
262.996 315.825 263.403 315.521 263.831 315.263 cv
264.897 314.62 266.163 314.281 267.491 314.281 cv
268.028 314.281 268.567 314.337 269.092 314.449 cv
275.172 315.74 li
269.684 312.821 li
268.026 311.939 266.748 310.479 266.177 308.816 cv
266.015 308.344 265.9 307.849 265.777 307.326 cv
265.608 306.604 265.434 305.857 265.123 305.131 cv
265.908 305.037 266.641 304.815 267.351 304.6 cv
267.866 304.444 268.352 304.297 268.841 304.201 cv
270.551 303.868 272.491 304.254 274.064 305.236 cv
279.336 308.529 li
275.177 303.909 li
273.92 302.513 273.219 300.704 273.251 298.946 cv
273.26 298.446 273.321 297.942 273.385 297.408 cv
273.473 296.672 273.564 295.911 273.521 295.122 cv
274.291 295.302 275.056 295.344 275.796 295.385 cv
276.333 295.415 276.84 295.443 277.333 295.52 cv
279.07 295.793 280.73 296.799 281.887 298.279 cv
285.716 303.177 li
283.387 297.412 li
282.684 295.671 282.642 293.731 283.275 292.09 cv
283.454 291.625 283.683 291.171 283.926 290.691 cv
284.261 290.03 284.607 289.346 284.836 288.59 cv
285.497 289.022 286.201 289.323 286.882 289.614 cv
287.377 289.826 287.844 290.026 288.282 290.268 cv
289.82 291.118 291.037 292.631 291.617 294.417 cv
293.539 300.329 li
293.323 294.116 li
293.258 292.239 293.883 290.402 295.038 289.077 cv
295.366 288.7 295.736 288.353 296.129 287.985 cv
296.67 287.478 297.228 286.954 297.702 286.321 cv
298.176 286.954 298.735 287.478 299.276 287.985 cv
299.668 288.353 300.039 288.7 300.367 289.077 cv
301.522 290.402 302.147 292.239 302.082 294.116 cv
301.866 300.329 li
303.788 294.417 li
304.368 292.631 305.584 291.118 307.123 290.268 cv
307.56 290.026 308.027 289.826 308.522 289.615 cv
309.203 289.323 309.907 289.022 310.569 288.59 cv
310.798 289.346 311.144 290.03 311.479 290.691 cv
311.722 291.171 311.951 291.625 312.13 292.09 cv
312.763 293.731 312.722 295.671 312.018 297.412 cv
309.692 303.174 li
313.518 298.279 li
314.675 296.799 316.335 295.793 318.072 295.52 cv
318.565 295.443 319.072 295.415 319.609 295.385 cv
320.349 295.344 321.114 295.302 321.884 295.122 cv
321.84 295.912 321.931 296.673 322.02 297.409 cv
322.084 297.943 322.144 298.447 322.154 298.945 cv
322.186 300.704 321.484 302.513 320.228 303.909 cv
316.068 308.531 li
321.342 305.236 li
322.913 304.254 324.853 303.867 326.564 304.201 cv
327.053 304.297 327.539 304.444 328.054 304.6 cv
328.764 304.815 329.497 305.037 330.282 305.131 cv
329.971 305.857 329.796 306.604 329.628 307.326 cv
329.505 307.849 329.39 308.344 329.228 308.816 cv
328.657 310.479 327.379 311.939 325.721 312.821 cv
320.233 315.74 li
326.313 314.449 li
326.838 314.337 327.377 314.281 327.914 314.281 cv
329.242 314.281 330.508 314.62 331.574 315.263 cv
332.002 315.521 332.409 315.825 332.84 316.148 cv
333.432 316.592 334.045 317.051 334.75 317.408 cv
334.209 317.985 333.79 318.626 333.384 319.247 cv
333.091 319.697 332.813 320.122 332.5 320.51 cv
331.394 321.878 329.694 322.813 327.835 323.074 cv
321.678 323.94 li
327.835 324.807 li
329.694 325.068 331.394 326.003 332.5 327.371 cv
332.813 327.759 333.091 328.184 333.385 328.634 cv
333.79 329.255 334.209 329.896 334.75 330.473 cv
334.046 330.829 333.433 331.289 332.84 331.733 cv
cp
336.04 329.291 mo
335.598 328.823 335.234 328.266 334.85 327.677 cv
334.545 327.211 334.229 326.728 333.86 326.271 cv
333.076 325.301 332.057 324.505 330.904 323.94 cv
332.057 323.375 333.076 322.58 333.86 321.609 cv
334.229 321.153 334.544 320.671 334.849 320.204 cv
335.234 319.615 335.598 319.058 336.04 318.59 cv
336.306 318.309 336.61 318.056 336.945 317.838 cv
338.667 316.716 li
336.665 316.253 li
336.277 316.163 335.905 316.03 335.558 315.856 cv
334.983 315.568 334.451 315.169 333.888 314.748 cv
333.442 314.413 332.98 314.067 332.477 313.764 cv
331.409 313.121 330.189 312.719 328.903 312.583 cv
329.793 311.658 330.478 310.563 330.882 309.383 cv
331.073 308.828 331.205 308.267 331.331 307.724 cv
331.491 307.038 331.643 306.391 331.898 305.801 cv
332.051 305.445 332.251 305.104 332.491 304.785 cv
333.725 303.143 li
331.686 303.391 li
331.291 303.439 330.894 303.441 330.51 303.396 cv
329.871 303.322 329.234 303.129 328.561 302.925 cv
328.027 302.764 327.476 302.597 326.899 302.484 cv
325.687 302.247 324.387 302.289 323.135 302.6 cv
323.657 301.425 323.926 300.161 323.903 298.913 cv
323.892 298.326 323.823 297.754 323.757 297.201 cv
323.673 296.502 323.593 295.842 323.631 295.199 cv
323.654 294.813 323.725 294.423 323.841 294.042 cv
324.439 292.076 li
322.608 293.007 li
322.253 293.188 321.882 293.324 321.505 293.414 cv
320.879 293.563 320.215 293.6 319.512 293.638 cv
318.956 293.669 318.38 293.701 317.8 293.792 cv
316.567 293.986 315.37 294.471 314.303 295.188 cv
314.391 293.905 314.211 292.626 313.763 291.461 cv
313.552 290.913 313.291 290.399 313.04 289.901 cv
312.722 289.274 312.422 288.681 312.238 288.064 cv
312.127 287.693 312.06 287.303 312.039 286.904 cv
311.928 284.853 li
310.526 286.354 li
310.254 286.646 309.952 286.901 309.629 287.114 cv
309.091 287.468 308.481 287.73 307.834 288.006 cv
307.321 288.226 306.791 288.453 306.276 288.737 cv
305.185 289.34 304.225 290.205 303.468 291.243 cv
303.112 290.009 302.505 288.868 301.686 287.927 cv
301.3 287.484 300.879 287.09 300.472 286.708 cv
299.959 286.227 299.475 285.773 299.091 285.256 cv
298.86 284.945 298.663 284.602 298.508 284.235 cv
297.703 282.344 li
296.898 284.234 li
296.742 284.602 296.545 284.945 296.314 285.256 cv
295.93 285.773 295.445 286.228 294.932 286.709 cv
294.526 287.09 294.105 287.484 293.719 287.927 cv
292.9 288.868 292.293 290.009 291.937 291.244 cv
291.18 290.205 290.22 289.34 289.128 288.737 cv
288.614 288.452 288.083 288.225 287.571 288.006 cv
286.924 287.73 286.314 287.468 285.776 287.114 cv
285.453 286.901 285.151 286.646 284.878 286.354 cv
283.476 284.855 li
283.366 286.904 li
283.345 287.304 283.278 287.694 283.167 288.064 cv
282.983 288.681 282.683 289.274 282.365 289.901 cv
282.114 290.399 281.853 290.913 281.642 291.461 cv
281.194 292.626 281.014 293.905 281.102 295.187 cv
280.035 294.471 278.838 293.986 277.605 293.792 cv
277.025 293.701 276.449 293.669 275.892 293.638 cv
275.19 293.6 274.526 293.563 273.9 293.414 cv
273.523 293.324 273.152 293.188 272.797 293.007 cv
270.966 292.076 li
271.564 294.042 li
271.68 294.422 271.75 294.812 271.773 295.199 cv
271.811 295.841 271.732 296.501 271.648 297.2 cv
271.582 297.753 271.513 298.326 271.502 298.913 cv
271.479 300.161 271.748 301.425 272.269 302.6 cv
271.018 302.289 269.719 302.247 268.506 302.484 cv
267.929 302.597 267.378 302.764 266.844 302.925 cv
266.171 303.129 265.534 303.322 264.895 303.396 cv
264.513 303.441 264.115 303.439 263.719 303.391 cv
261.679 303.142 li
262.914 304.785 li
263.153 305.103 263.353 305.445 263.506 305.801 cv
263.762 306.392 263.913 307.039 264.074 307.724 cv
264.201 308.267 264.332 308.828 264.522 309.383 cv
264.927 310.563 265.612 311.658 266.502 312.583 cv
265.216 312.719 263.996 313.121 262.928 313.764 cv
262.425 314.067 261.963 314.413 261.517 314.748 cv
260.954 315.169 260.422 315.568 259.847 315.856 cv
259.501 316.029 259.128 316.163 258.74 316.253 cv
256.738 316.717 li
258.46 317.838 li
258.794 318.055 259.099 318.309 259.365 318.59 cv
259.807 319.058 260.17 319.614 260.555 320.203 cv
260.86 320.67 261.175 321.152 261.545 321.61 cv
262.329 322.58 263.348 323.375 264.501 323.94 cv
263.348 324.505 262.329 325.301 261.545 326.271 cv
261.175 326.729 260.86 327.211 260.555 327.678 cv
260.17 328.267 259.807 328.823 259.366 329.29 cv
259.099 329.572 258.794 329.825 258.46 330.043 cv
256.738 331.164 li
258.74 331.628 li
259.128 331.718 259.5 331.851 259.847 332.025 cv
260.422 332.313 260.953 332.711 261.516 333.133 cv
261.963 333.467 262.425 333.813 262.928 334.117 cv
263.996 334.76 265.216 335.162 266.502 335.298 cv
265.612 336.223 264.927 337.318 264.522 338.497 cv
264.332 339.053 264.201 339.614 264.074 340.157 cv
263.913 340.842 263.762 341.489 263.506 342.081 cv
263.353 342.436 263.154 342.778 262.914 343.097 cv
261.679 344.739 li
263.719 344.49 li
264.113 344.442 264.511 344.44 264.895 344.485 cv
265.535 344.559 266.171 344.752 266.845 344.956 cv
267.378 345.117 267.93 345.284 268.506 345.397 cv
269.72 345.634 271.018 345.592 272.269 345.281 cv
271.748 346.456 271.479 347.72 271.502 348.968 cv
271.513 349.556 271.582 350.128 271.648 350.681 cv
271.732 351.38 271.811 352.04 271.773 352.682 cv
271.75 353.069 271.68 353.459 271.564 353.839 cv
270.965 355.805 li
272.797 354.874 li
273.152 354.693 273.523 354.557 273.9 354.466 cv
274.526 354.317 275.19 354.281 275.892 354.242 cv
276.449 354.211 277.025 354.18 277.605 354.089 cv
278.837 353.895 280.035 353.41 281.102 352.694 cv
281.014 353.975 281.194 355.255 281.642 356.419 cv
281.854 356.968 282.114 357.482 282.366 357.98 cv
282.683 358.608 282.983 359.201 283.167 359.817 cv
283.278 360.187 283.345 360.577 283.366 360.977 cv
283.476 363.026 li
284.878 361.527 li
285.15 361.236 285.453 360.98 285.776 360.766 cv
286.313 360.413 286.923 360.151 287.57 359.875 cv
288.083 359.655 288.614 359.429 289.128 359.144 cv
290.22 358.54 291.18 357.676 291.937 356.637 cv
292.293 357.872 292.9 359.013 293.719 359.954 cv
294.105 360.397 294.526 360.791 294.932 361.172 cv
295.445 361.654 295.93 362.108 296.314 362.624 cv
296.545 362.936 296.742 363.28 296.898 363.647 cv
297.703 365.537 li
298.508 363.646 li
298.663 363.28 298.86 362.936 299.091 362.625 cv
299.474 362.108 299.959 361.654 300.472 361.173 cv
300.879 360.791 301.3 360.397 301.686 359.954 cv
302.505 359.013 303.112 357.872 303.468 356.637 cv
304.225 357.676 305.185 358.54 306.276 359.144 cv
306.791 359.429 307.322 359.655 307.835 359.875 cv
308.481 360.151 309.092 360.413 309.628 360.766 cv
309.952 360.98 310.255 361.236 310.526 361.527 cv
311.928 363.028 li
312.039 360.977 li
312.06 360.579 312.127 360.188 312.238 359.817 cv
312.422 359.201 312.722 358.608 313.039 357.98 cv
313.291 357.482 313.551 356.968 313.763 356.419 cv
314.211 355.255 314.391 353.976 314.303 352.694 cv
315.37 353.41 316.567 353.895 317.8 354.089 cv
318.38 354.18 318.956 354.211 319.512 354.242 cv
320.215 354.281 320.879 354.317 321.505 354.466 cv
321.882 354.557 322.253 354.693 322.608 354.874 cv
324.44 355.805 li
323.841 353.839 li
323.725 353.458 323.654 353.069 323.631 352.682 cv
323.593 352.039 323.673 351.379 323.757 350.68 cv
323.823 350.127 323.892 349.555 323.903 348.968 cv
323.926 347.72 323.657 346.456 323.135 345.281 cv
324.387 345.592 325.685 345.634 326.899 345.397 cv
327.475 345.284 328.027 345.117 328.56 344.956 cv
329.234 344.752 329.87 344.559 330.51 344.485 cv
330.893 344.44 331.291 344.442 331.686 344.49 cv
333.725 344.739 li
332.491 343.097 li
332.251 342.777 332.051 342.435 331.898 342.08 cv
331.643 341.489 331.491 340.842 331.331 340.157 cv
331.205 339.614 331.073 339.053 330.882 338.497 cv
330.478 337.318 329.793 336.223 328.903 335.298 cv
330.189 335.162 331.409 334.76 332.477 334.117 cv
332.98 333.813 333.442 333.467 333.889 333.133 cv
334.452 332.711 334.983 332.313 335.558 332.025 cv
335.905 331.851 336.278 331.718 336.665 331.628 cv
338.667 331.164 li
336.945 330.043 li
336.61 329.825 336.306 329.572 336.04 329.291 cv
cp
f
103.971 328.277 mo
103.442 327.305 102.798 326.458 102.049 325.751 cv
101.278 325.025 100.385 324.424 99.3513 323.94 cv
100.385 323.457 101.278 322.856 102.049 322.129 cv
102.798 321.423 103.442 320.576 103.971 319.604 cv
105.466 320.73 106.666 322.236 107.419 323.94 cv
106.666 325.645 105.466 327.15 103.971 328.277 cv
cp
103.548 333.49 mo
103.073 334.071 102.57 334.596 102.044 335.06 cv
101.966 334.94 101.886 334.822 101.805 334.706 cv
101.101 333.703 100.25 332.81 99.2813 332.051 cv
100.505 331.876 101.696 331.527 102.793 331.017 cv
102.922 330.957 103.05 330.894 103.177 330.829 cv
103.401 331.494 103.574 332.201 103.695 332.942 cv
103.711 333.044 103.727 333.146 103.742 333.248 cv
103.678 333.329 103.613 333.409 103.548 333.49 cv
cp
102.273 343.147 mo
100.768 344.246 98.9765 344.95 97.1184 345.179 cv
97.1464 344.072 97.0118 343.017 96.7162 342.03 cv
96.4121 341.015 95.9391 340.049 95.2856 339.113 cv
96.4111 339.21 97.5009 339.136 98.5274 338.893 cv
99.5295 338.656 100.511 338.245 101.455 337.667 cv
102.186 339.391 102.473 341.295 102.273 343.147 cv
cp
94.8829 345.22 mo
92.9564 345.049 91.0864 344.347 89.4751 343.189 cv
85.1326 340.067 li
88.2542 344.41 li
89.4125 346.021 90.1149 347.891 90.2851 349.817 cv
90.2993 349.977 90.3097 350.138 90.3163 350.3 cv
89.3487 350.335 88.4372 350.227 87.5977 349.975 cv
86.1626 349.545 84.8225 348.688 83.5006 347.355 cv
81.1613 344.995 li
82.0355 348.201 li
82.5292 350.012 82.6016 351.601 82.2562 353.059 cv
82.0538 353.915 81.6922 354.758 81.1788 355.576 cv
81.042 355.489 80.9076 355.399 80.7761 355.307 cv
79.193 354.197 77.9247 352.653 77.1087 350.845 cv
74.9084 345.969 li
75.4408 351.292 li
75.6383 353.266 75.3115 355.237 74.4958 356.99 cv
74.4281 357.136 74.3566 357.281 74.2814 357.424 cv
73.428 356.973 72.6929 356.423 72.0896 355.783 cv
71.0617 354.693 70.3297 353.281 69.8517 351.466 cv
69.0061 348.253 li
68.16 351.465 li
67.6818 353.281 66.9497 354.693 65.9219 355.783 cv
65.3186 356.423 64.5837 356.973 63.7303 357.424 cv
63.6552 357.281 63.5837 357.136 63.516 356.99 cv
62.6999 355.237 62.3732 353.266 62.5708 351.292 cv
63.1031 345.969 li
60.9031 350.845 li
60.0868 352.653 58.8185 354.197 57.2354 355.307 cv
57.1039 355.399 56.9695 355.489 56.8326 355.576 cv
56.3193 354.759 55.9577 353.915 55.7553 353.059 cv
55.41 351.601 55.4823 350.012 55.9761 348.201 cv
56.8502 344.995 li
54.5109 347.355 li
53.189 348.688 51.8489 349.545 50.4136 349.975 cv
49.5743 350.227 48.6643 350.336 47.6951 350.3 cv
47.7018 350.138 47.7122 349.977 47.7263 349.817 cv
47.8966 347.891 48.599 346.021 49.7573 344.41 cv
52.8788 340.067 li
48.5364 343.189 li
46.9251 344.347 45.0552 345.049 43.1289 345.22 cv
42.9692 345.234 42.8077 345.244 42.6458 345.251 cv
42.61 344.286 42.7187 343.375 42.9709 342.532 cv
43.4012 341.097 44.2584 339.757 45.5917 338.435 cv
47.95 336.097 li
44.7458 336.97 li
42.9262 337.466 41.3491 337.537 39.8873 337.191 cv
39.0316 336.988 38.1876 336.627 37.3701 336.113 cv
37.457 335.977 37.5465 335.842 37.6388 335.711 cv
38.7497 334.127 40.2928 332.859 42.1013 332.043 cv
46.9781 329.844 li
41.6548 330.375 li
39.7037 330.571 37.6872 330.236 35.9562 329.43 cv
35.8105 329.363 35.6657 329.291 35.522 329.216 cv
35.9733 328.362 36.5234 327.627 37.163 327.024 cv
38.2532 325.996 39.6656 325.264 41.481 324.786 cv
44.6938 323.94 li
41.481 323.094 li
39.6656 322.616 38.2534 321.885 37.163 320.857 cv
36.5234 320.253 35.9733 319.518 35.522 318.665 cv
35.6657 318.59 35.8105 318.518 35.9562 318.45 cv
37.6881 317.644 39.7056 317.31 41.6545 317.505 cv
46.9781 318.038 li
42.1014 315.837 li
40.2927 315.022 38.7495 313.753 37.6388 312.17 cv
37.5467 312.039 37.457 311.904 37.3701 311.767 cv
38.1879 311.254 39.0316 310.892 39.8873 310.69 cv
41.3489 310.344 42.9262 310.415 44.7458 310.91 cv
47.9504 311.784 li
45.5917 309.445 li
44.2584 308.124 43.4012 306.784 42.9711 305.348 cv
42.7187 304.506 42.6097 303.594 42.6458 302.63 cv
42.8077 302.637 42.9692 302.647 43.1287 302.661 cv
45.0556 302.831 46.9255 303.534 48.5364 304.692 cv
52.8797 307.815 li
49.7573 303.471 li
48.599 301.859 47.8966 299.99 47.7263 298.064 cv
47.7122 297.904 47.7018 297.742 47.6951 297.581 cv
48.6611 297.544 49.5741 297.654 50.4136 297.906 cv
51.8487 298.336 53.189 299.193 54.5109 300.526 cv
56.8497 302.885 li
55.9761 299.68 li
55.4823 297.869 55.41 296.28 55.7553 294.822 cv
55.9577 293.966 56.3193 293.122 56.8326 292.305 cv
56.9695 292.392 57.1039 292.481 57.2354 292.573 cv
58.8185 293.684 60.0868 295.227 60.9031 297.036 cv
63.1031 301.912 li
62.5708 296.589 li
62.3732 294.614 62.6999 292.644 63.516 290.891 cv
63.5837 290.745 63.6552 290.6 63.7303 290.457 cv
64.5837 290.908 65.3188 291.458 65.9219 292.098 cv
66.9497 293.188 67.6818 294.6 68.16 296.416 cv
69.0061 299.629 li
69.8517 296.416 li
70.3297 294.6 71.0617 293.188 72.0896 292.098 cv
72.6929 291.458 73.4278 290.908 74.2814 290.457 cv
74.3566 290.6 74.4281 290.745 74.4958 290.891 cv
75.3115 292.644 75.6383 294.615 75.4408 296.589 cv
74.9084 301.912 li
77.1087 297.036 li
77.9247 295.227 79.193 293.684 80.7761 292.573 cv
80.9076 292.481 81.042 292.392 81.1788 292.305 cv
81.6922 293.122 82.0538 293.966 82.2562 294.822 cv
82.6016 296.28 82.5292 297.869 82.0355 299.68 cv
81.1617 302.885 li
83.5006 300.526 li
84.8225 299.193 86.1629 298.336 87.598 297.906 cv
88.4372 297.654 89.3489 297.545 90.3163 297.581 cv
90.3097 297.742 90.2993 297.904 90.2851 298.063 cv
90.1149 299.99 89.4125 301.859 88.2542 303.471 cv
85.1318 307.815 li
89.4751 304.692 li
91.086 303.534 92.9559 302.831 94.8826 302.661 cv
95.0424 302.647 95.2039 302.637 95.3657 302.63 cv
95.4018 303.594 95.2929 304.506 95.0404 305.348 cv
94.6104 306.784 93.7531 308.124 92.4199 309.445 cv
90.0611 311.784 li
93.2658 310.91 li
95.0853 310.414 96.6624 310.343 98.1242 310.69 cv
98.9799 310.892 99.8237 311.254 100.641 311.767 cv
100.554 311.904 100.465 312.039 100.373 312.17 cv
99.2621 313.753 97.7189 315.022 95.91 315.837 cv
91.0334 318.038 li
96.357 317.505 li
98.3066 317.31 100.324 317.645 102.055 318.45 cv
102.201 318.518 102.346 318.59 102.489 318.665 cv
102.038 319.518 101.488 320.253 100.848 320.857 cv
99.7585 321.884 98.3461 322.616 96.5304 323.094 cv
93.3177 323.94 li
96.5304 324.786 li
98.3461 325.264 99.7585 325.996 100.848 327.024 cv
101.488 327.627 102.038 328.362 102.489 329.216 cv
102.346 329.291 102.201 329.363 102.055 329.43 cv
100.324 330.236 98.3079 330.571 96.3568 330.375 cv
91.0334 329.844 li
95.9102 332.043 li
97.7186 332.859 99.2618 334.127 100.373 335.711 cv
100.465 335.842 100.554 335.977 100.641 336.113 cv
99.8239 336.627 98.9799 336.988 98.1242 337.191 cv
96.6635 337.536 95.0857 337.466 93.2658 336.97 cv
90.0615 336.097 li
92.4199 338.435 li
93.7531 339.757 94.6104 341.097 95.0404 342.532 cv
95.2929 343.375 95.4018 344.286 95.3657 345.251 cv
95.2039 345.244 95.0424 345.234 94.8829 345.22 cv
cp
94.5467 349.081 mo
94.5101 349.177 94.4726 349.273 94.4342 349.369 cv
94.3385 349.407 94.2423 349.444 94.1456 349.481 cv
93.4437 349.747 92.7449 349.951 92.0577 350.089 cv
92.0502 349.947 92.0402 349.805 92.0278 349.664 cv
91.9201 348.444 91.6297 347.246 91.1712 346.106 cv
92.3114 346.564 93.5097 346.855 94.7288 346.962 cv
94.8698 346.975 95.0118 346.985 95.1545 346.992 cv
95.0161 347.68 94.8128 348.378 94.5467 349.081 cv
cp
88.2128 357.208 mo
86.3614 357.406 84.445 357.116 82.7329 356.39 cv
83.3104 355.445 83.7215 354.464 83.9587 353.462 cv
84.2028 352.431 84.2763 351.358 84.1785 350.22 cv
85.1145 350.874 86.0808 351.347 87.0957 351.651 cv
88.0789 351.946 89.1358 352.085 90.2442 352.053 cv
90.0159 353.911 89.312 355.703 88.2128 357.208 cv
cp
78.5545 358.483 mo
78.4746 358.548 78.3941 358.612 78.3131 358.676 cv
78.2113 358.661 78.1092 358.646 78.0071 358.629 cv
77.2663 358.509 76.5594 358.336 75.8952 358.112 cv
75.9599 357.985 76.0223 357.857 76.0821 357.728 cv
76.5983 356.619 76.9461 355.435 77.1189 354.219 cv
77.877 355.186 78.7697 356.036 79.7715 356.74 cv
79.8874 356.821 80.0055 356.901 80.1252 356.978 cv
79.6617 357.504 79.1362 358.008 78.5545 358.483 cv
cp
69.0058 362.354 mo
67.3015 361.601 65.7959 360.401 64.669 358.906 cv
65.6415 358.377 66.4882 357.733 67.1946 356.983 cv
67.9214 356.212 68.5217 355.32 69.0058 354.286 cv
69.4898 355.32 70.0899 356.212 70.8168 356.983 cv
71.5233 357.733 72.37 358.377 73.3426 358.906 cv
72.2156 360.401 70.7101 361.601 69.0058 362.354 cv
cp
60.0036 358.629 mo
59.9019 358.646 59.8002 358.661 59.6984 358.676 cv
59.6172 358.612 59.5367 358.548 59.4567 358.483 cv
58.8753 358.008 58.3496 357.504 57.8863 356.978 cv
58.006 356.901 58.124 356.821 58.24 356.74 cv
59.2418 356.036 60.1345 355.186 60.8926 354.219 cv
61.0656 355.435 61.4135 356.619 61.9296 357.728 cv
61.9895 357.857 62.0518 357.985 62.1165 358.112 cv
61.4521 358.336 60.745 358.509 60.0036 358.629 cv
cp
49.7989 357.208 mo
48.6997 355.703 47.9959 353.911 47.7674 352.053 cv
48.8783 352.083 49.9333 351.945 50.9156 351.651 cv
51.9305 351.347 52.8968 350.874 53.833 350.22 cv
53.7352 351.358 53.8087 352.431 54.0528 353.462 cv
54.2901 354.464 54.7011 355.445 55.2788 356.39 cv
53.5666 357.116 51.6507 357.406 49.7989 357.208 cv
cp
45.9838 349.664 mo
45.9713 349.805 45.9613 349.947 45.9538 350.089 cv
45.2666 349.951 44.5676 349.747 43.8651 349.481 cv
43.7687 349.444 43.6728 349.407 43.5774 349.369 cv
43.539 349.273 43.5013 349.177 43.4649 349.081 cv
43.1987 348.378 42.9954 347.68 42.8571 346.992 cv
42.9997 346.985 43.1417 346.975 43.2829 346.962 cv
44.5019 346.855 45.7001 346.564 46.8403 346.106 cv
46.3818 347.246 46.0914 348.444 45.9838 349.664 cv
cp
41.2951 342.03 mo
40.9997 343.017 40.8652 344.072 40.8931 345.179 cv
39.0348 344.95 37.2431 344.246 35.7388 343.147 cv
35.5389 341.295 35.8252 339.391 36.5565 337.667 cv
37.5008 338.245 38.4821 338.656 39.4841 338.893 cv
40.5111 339.136 41.6005 339.21 42.7261 339.113 cv
42.0724 340.049 41.5994 341.015 41.2951 342.03 cv
cp
34.4631 333.489 mo
34.3981 333.409 34.3336 333.329 34.2699 333.248 cv
34.2846 333.146 34.3002 333.044 34.3169 332.942 cv
34.4373 332.201 34.6107 331.494 34.8343 330.829 cv
34.9616 330.894 35.0895 330.957 35.2181 331.017 cv
36.3158 331.527 37.5066 331.876 38.7303 332.051 cv
37.7618 332.81 36.9104 333.703 36.2067 334.706 cv
36.1253 334.822 36.0454 334.94 35.9677 335.06 cv
35.4419 334.596 34.9381 334.071 34.4631 333.489 cv
cp
34.0403 328.277 mo
32.5454 327.15 31.3454 325.645 30.5922 323.94 cv
31.3454 322.236 32.5454 320.73 34.0403 319.604 cv
34.5695 320.576 35.2136 321.423 35.9628 322.129 cv
36.7337 322.856 37.6264 323.457 38.6604 323.94 cv
37.6264 324.424 36.7337 325.025 35.9628 325.751 cv
35.2136 326.458 34.5695 327.305 34.0403 328.277 cv
cp
34.4634 314.391 mo
34.9384 313.81 35.4419 313.284 35.9677 312.821 cv
36.0457 312.941 36.1253 313.059 36.2067 313.175 cv
36.9101 314.177 37.7618 315.071 38.7303 315.83 cv
37.5068 316.004 36.316 316.353 35.2181 316.864 cv
35.0895 316.924 34.9616 316.986 34.8343 317.051 cv
34.6107 316.387 34.4373 315.68 34.3166 314.938 cv
34.3002 314.837 34.2846 314.735 34.2701 314.633 cv
34.3338 314.552 34.3982 314.471 34.4634 314.391 cv
cp
35.7388 304.734 mo
37.2431 303.634 39.0352 302.931 40.8931 302.702 cv
40.8652 303.809 40.9995 304.864 41.2951 305.85 cv
41.5994 306.865 42.0724 307.832 42.7259 308.768 cv
41.5996 308.671 40.5111 308.744 39.4841 308.987 cv
38.4821 309.224 37.501 309.636 36.5565 310.213 cv
35.8252 308.49 35.5389 306.586 35.7388 304.734 cv
cp
43.4649 298.801 mo
43.5013 298.704 43.539 298.608 43.5774 298.512 cv
43.6731 298.474 43.7693 298.436 43.8659 298.4 cv
44.5676 298.133 45.2666 297.93 45.9538 297.792 cv
45.9613 297.934 45.9713 298.076 45.9838 298.217 cv
46.0914 299.436 46.3818 300.635 46.8403 301.775 cv
45.7004 301.316 44.5019 301.026 43.2827 300.918 cv
43.1419 300.906 42.9997 300.896 42.8571 300.888 cv
42.9954 300.201 43.1987 299.502 43.4649 298.801 cv
cp
49.7989 290.673 mo
51.65 290.475 53.5663 290.765 55.2788 291.491 cv
54.7011 292.436 54.2901 293.417 54.0528 294.418 cv
53.8087 295.45 53.7352 296.523 53.833 297.661 cv
52.897 297.007 51.9306 296.534 50.9159 296.23 cv
50.0176 295.961 49.0543 295.824 48.0523 295.824 cv
47.9579 295.824 47.8628 295.825 47.7674 295.828 cv
47.9959 293.97 48.6999 292.178 49.7989 290.673 cv
cp
59.4567 289.398 mo
59.5367 289.333 59.6172 289.268 59.6984 289.204 cv
59.8005 289.219 59.9023 289.235 60.0042 289.251 cv
60.7453 289.372 61.4523 289.545 62.1165 289.769 cv
62.0518 289.896 61.9895 290.024 61.9296 290.152 cv
61.4135 291.262 61.0656 292.445 60.8926 293.662 cv
60.1347 292.694 59.2418 291.844 58.24 291.141 cv
58.124 291.06 58.0062 290.98 57.8863 290.902 cv
58.3498 290.376 58.8753 289.873 59.4567 289.398 cv
cp
69.0058 285.527 mo
70.7101 286.28 72.2156 287.48 73.3426 288.975 cv
72.37 289.504 71.5233 290.148 70.8168 290.897 cv
70.0899 291.668 69.4898 292.561 69.0058 293.595 cv
68.5217 292.561 67.9214 291.668 67.1946 290.897 cv
66.4882 290.148 65.6415 289.504 64.669 288.975 cv
65.7959 287.48 67.3015 286.28 69.0058 285.527 cv
cp
78.0071 289.251 mo
78.109 289.235 78.211 289.219 78.3131 289.204 cv
78.3943 289.268 78.4748 289.333 78.5549 289.398 cv
79.1362 289.873 79.6617 290.376 80.1252 290.902 cv
80.0054 290.98 79.8874 291.06 79.7715 291.141 cv
78.7697 291.844 77.877 292.694 77.1189 293.662 cv
76.9461 292.445 76.5983 291.262 76.0821 290.152 cv
76.0223 290.024 75.9599 289.896 75.8952 289.769 cv
76.5594 289.545 77.2663 289.372 78.0071 289.251 cv
cp
88.2126 290.673 mo
89.3117 292.178 90.0159 293.97 90.2442 295.828 cv
89.1355 295.799 88.0785 295.935 87.0957 296.23 cv
86.0808 296.534 85.1145 297.007 84.1785 297.661 cv
84.2763 296.523 84.2028 295.45 83.9587 294.418 cv
83.7215 293.417 83.3104 292.436 82.7327 291.491 cv
84.4454 290.765 86.3617 290.475 88.2126 290.673 cv
cp
92.0278 298.217 mo
92.0404 298.076 92.0502 297.934 92.0579 297.792 cv
92.7447 297.93 93.4437 298.133 94.1456 298.4 cv
94.2421 298.436 94.3385 298.474 94.4342 298.512 cv
94.4726 298.608 94.5101 298.704 94.5467 298.8 cv
94.8128 299.502 95.0161 300.201 95.1545 300.888 cv
95.0118 300.896 94.8698 300.906 94.7286 300.918 cv
93.5097 301.026 92.3112 301.316 91.1712 301.775 cv
91.6297 300.635 91.9201 299.436 92.0278 298.217 cv
cp
96.7165 305.85 mo
97.012 304.864 97.1464 303.809 97.1184 302.702 cv
98.9765 302.931 100.768 303.634 102.273 304.734 cv
102.473 306.586 102.186 308.49 101.455 310.213 cv
100.511 309.636 99.5295 309.224 98.5274 308.987 cv
97.7959 308.814 97.028 308.726 96.2449 308.726 cv
95.9288 308.726 95.6096 308.74 95.2856 308.768 cv
95.9391 307.832 96.4121 306.865 96.7165 305.85 cv
cp
103.548 314.391 mo
103.613 314.471 103.678 314.552 103.742 314.633 cv
103.727 314.735 103.711 314.837 103.695 314.939 cv
103.574 315.68 103.401 316.387 103.177 317.051 cv
103.05 316.986 102.922 316.924 102.793 316.864 cv
101.695 316.353 100.505 316.004 99.2813 315.83 cv
100.25 315.071 101.101 314.177 101.805 313.175 cv
101.886 313.059 101.966 312.941 102.044 312.821 cv
102.57 313.284 103.073 313.81 103.548 314.391 cv
cp
104.706 317.975 mo
105.024 317.114 105.264 316.191 105.422 315.22 cv
105.461 314.978 105.495 314.736 105.525 314.494 cv
105.567 314.144 li
105.355 313.862 li
105.209 313.667 105.058 313.475 104.903 313.285 cv
104.281 312.523 103.611 311.843 102.906 311.257 cv
103.928 309.042 104.302 306.54 103.961 304.136 cv
103.912 303.787 li
103.634 303.57 li
101.722 302.073 99.3697 301.147 96.9405 300.924 cv
96.7852 300.02 96.5313 299.1 96.1825 298.18 cv
96.0958 297.951 96.0044 297.725 95.909 297.5 cv
95.7708 297.175 li
95.4457 297.037 li
95.2211 296.942 94.9945 296.85 94.7658 296.764 cv
93.846 296.415 92.9262 296.161 92.0224 296.006 cv
91.7997 293.577 90.8735 291.224 89.376 289.312 cv
89.1589 289.035 li
88.8102 288.985 li
86.4204 288.645 83.8925 289.023 81.6895 290.04 cv
81.103 289.335 80.4233 288.665 79.6615 288.043 cv
79.4719 287.888 79.2795 287.738 79.0841 287.591 cv
78.8022 287.379 li
78.4524 287.422 li
78.21 287.451 77.9678 287.485 77.7263 287.525 cv
76.7554 287.682 75.832 287.922 74.9716 288.24 cv
73.564 286.247 71.5854 284.673 69.3326 283.766 cv
69.0058 283.634 li
68.6791 283.766 li
66.4261 284.673 64.4475 286.248 63.0401 288.24 cv
62.1797 287.922 61.2561 287.682 60.285 287.525 cv
60.0435 287.485 59.8016 287.451 59.5591 287.422 cv
59.2093 287.379 li
58.9275 287.591 li
58.7321 287.738 58.5396 287.888 58.35 288.043 cv
57.5882 288.665 56.9085 289.335 56.3221 290.04 cv
54.119 289.024 51.5915 288.645 49.2016 288.985 cv
48.8529 289.035 li
48.6356 289.312 li
47.1382 291.224 46.212 293.577 45.9891 296.006 cv
45.0853 296.161 44.1655 296.415 43.2457 296.764 cv
43.017 296.85 42.7904 296.942 42.5657 297.037 cv
42.2405 297.175 li
42.1025 297.5 li
42.0071 297.725 41.9157 297.951 41.829 298.18 cv
41.4803 299.1 41.2263 300.02 41.071 300.924 cv
38.642 301.146 36.2893 302.073 34.3771 303.57 cv
34.0999 303.787 li
34.0506 304.136 li
33.7095 306.54 34.0837 309.042 35.1053 311.257 cv
34.4002 311.843 33.7306 312.523 33.1081 313.285 cv
32.9535 313.475 32.8029 313.667 32.6561 313.862 cv
32.4442 314.144 li
32.4869 314.494 li
32.5166 314.736 32.5508 314.979 32.59 315.22 cv
32.7479 316.191 32.9879 317.114 33.3053 317.975 cv
31.313 319.382 29.7384 321.361 28.8314 323.614 cv
28.7001 323.94 li
28.8314 324.267 li
29.7387 326.52 31.313 328.499 33.3053 329.906 cv
32.9879 330.766 32.7481 331.69 32.5903 332.66 cv
32.5508 332.902 32.5166 333.144 32.4869 333.387 cv
32.4442 333.737 li
32.6564 334.019 li
32.8032 334.214 32.954 334.407 33.1084 334.596 cv
33.7306 335.358 34.4002 336.038 35.1053 336.624 cv
34.0837 338.839 33.7095 341.34 34.0506 343.745 cv
34.0999 344.094 li
34.3771 344.31 li
36.2889 345.808 38.6419 346.734 41.071 346.957 cv
41.2263 347.861 41.4803 348.781 41.829 349.701 cv
41.9157 349.929 42.0071 350.156 42.1023 350.38 cv
42.2405 350.706 li
42.5657 350.844 li
42.7907 350.939 43.0174 351.031 43.2457 351.117 cv
44.1655 351.466 45.0853 351.72 45.9891 351.875 cv
46.212 354.304 47.1382 356.657 48.6356 358.569 cv
48.8529 358.846 li
49.2016 358.896 li
51.5931 359.234 54.1196 358.857 56.3219 357.841 cv
56.9083 358.546 57.588 359.215 58.3496 359.837 cv
58.5392 359.992 58.7316 360.142 58.927 360.29 cv
59.2089 360.502 li
59.5591 360.459 li
59.8017 360.43 60.0442 360.396 60.285 360.356 cv
61.2561 360.198 62.1795 359.958 63.0399 359.641 cv
64.4475 361.633 66.4261 363.208 68.6791 364.115 cv
69.0058 364.246 li
69.3326 364.115 li
71.5854 363.208 73.564 361.633 74.9716 359.641 cv
75.832 359.958 76.7554 360.198 77.7256 360.356 cv
77.9674 360.396 78.2098 360.43 78.4524 360.459 cv
78.8026 360.502 li
79.0845 360.29 li
79.2799 360.142 79.4723 359.992 79.6615 359.837 cv
80.4233 359.215 81.1033 358.546 81.6897 357.841 cv
83.8921 358.857 86.4191 359.234 88.8102 358.896 cv
89.1589 358.846 li
89.376 358.569 li
90.8735 356.657 91.7997 354.304 92.0224 351.875 cv
92.9264 351.72 93.846 351.466 94.7649 351.117 cv
94.9941 351.031 95.2209 350.939 95.4457 350.844 cv
95.771 350.706 li
95.9092 350.38 li
96.0044 350.156 96.0958 349.929 96.1825 349.701 cv
96.5313 348.781 96.7852 347.861 96.9406 346.957 cv
99.3697 346.734 101.722 345.808 103.634 344.31 cv
103.912 344.094 li
103.961 343.745 li
104.302 341.34 103.928 338.839 102.906 336.624 cv
103.611 336.038 104.281 335.358 104.903 334.596 cv
105.057 334.407 105.208 334.214 105.355 334.019 cv
105.567 333.737 li
105.525 333.387 li
105.495 333.144 105.461 332.902 105.422 332.661 cv
105.264 331.69 105.024 330.767 104.706 329.906 cv
106.698 328.499 108.273 326.52 109.18 324.267 cv
109.312 323.94 li
109.18 323.614 li
108.273 321.361 106.698 319.382 104.706 317.975 cv
cp
f
105.733 209.059 mo
104.645 209.877 103.529 210.716 102.463 211.18 cv
102.535 209.965 102.665 208.754 102.851 207.567 cv
102.888 207.332 102.927 207.096 102.97 206.857 cv
103.011 206.621 103.055 206.386 103.1 206.152 cv
103.332 204.973 103.624 203.791 103.972 202.625 cv
104.815 203.425 105.576 204.595 106.319 205.736 cv
106.747 206.394 107.186 207.068 107.648 207.684 cv
107.003 208.104 106.36 208.587 105.733 209.059 cv
cp
101.384 205.815 mo
101.335 206.061 101.29 206.309 101.247 206.553 cv
101.203 206.801 101.161 207.049 101.123 207.297 cv
100.905 208.688 100.76 210.109 100.692 211.533 cv
100.438 211.51 100.193 211.448 99.9506 211.346 cv
99.0999 210.989 li
98.7885 211.858 li
98.3055 213.205 96.3974 214.388 94.7051 214.388 cv
94.4327 214.388 94.1775 214.356 93.9468 214.292 cv
90.7105 213.401 li
93.1005 215.758 li
94.3468 216.988 94.5134 219.87 93.4129 221.169 cv
92.8166 221.872 li
93.5509 222.431 li
93.7587 222.589 93.9355 222.77 94.0839 222.98 cv
92.8848 223.751 91.7258 224.587 90.6301 225.471 cv
90.4348 225.628 90.2407 225.788 90.0513 225.948 cv
89.8578 226.109 89.6664 226.273 89.4775 226.438 cv
88.4167 227.363 87.3925 228.359 86.4247 229.406 cv
86.2447 229.224 86.0962 229.018 85.9769 228.786 cv
85.5546 227.966 li
84.7581 228.431 li
84.3256 228.684 83.7575 228.817 83.1156 228.817 cv
81.6643 228.817 80.1371 228.13 79.4841 227.184 cv
77.5781 224.421 li
77.8933 227.763 li
78.0577 229.506 76.3326 231.821 74.6549 232.109 cv
73.7457 232.264 li
73.9495 233.164 li
74.0072 233.418 74.0258 233.671 74.005 233.927 cv
72.5906 233.747 71.1655 233.642 69.758 233.615 cv
69.5283 233.61 69.298 233.608 69.0672 233.608 cv
68.9443 233.608 li
68.7135 233.608 68.4833 233.61 68.2535 233.615 cv
66.846 233.642 65.4209 233.747 64.0065 233.927 cv
63.9857 233.671 64.0043 233.418 64.062 233.164 cv
64.2657 232.264 li
63.3566 232.109 li
61.6789 231.821 59.9538 229.506 60.1183 227.763 cv
60.4334 224.421 li
58.5272 227.184 li
57.8744 228.13 56.3473 228.817 54.8957 228.817 cv
54.2539 228.817 53.6861 228.684 53.2534 228.431 cv
52.4569 227.966 li
52.0347 228.786 li
51.9153 229.018 51.7669 229.224 51.5869 229.406 cv
50.619 228.359 49.5947 227.363 48.534 226.438 cv
48.3448 226.273 48.1537 226.109 47.9639 225.951 cv
47.771 225.788 47.5769 225.628 47.3815 225.471 cv
46.2857 224.587 45.1268 223.751 43.9276 222.98 cv
44.076 222.77 44.2528 222.589 44.4607 222.431 cv
45.1948 221.872 li
44.5986 221.169 li
43.4981 219.87 43.6647 216.988 44.911 215.758 cv
47.301 213.401 li
44.0647 214.292 li
43.834 214.356 43.5788 214.388 43.3062 214.388 cv
41.6141 214.388 39.7062 213.205 39.2229 211.858 cv
38.9115 210.989 li
38.061 211.346 li
37.8186 211.448 37.5738 211.51 37.319 211.533 cv
37.2509 210.109 37.1066 208.688 36.889 207.297 cv
36.8501 207.049 36.8087 206.801 36.7651 206.557 cv
36.7217 206.309 36.676 206.061 36.6276 205.815 cv
36.3565 204.434 36.0059 203.049 35.5829 201.687 cv
35.8306 201.622 36.0817 201.596 36.3442 201.609 cv
37.2655 201.654 li
37.261 200.731 li
37.2526 199.029 39.2329 196.928 40.9781 196.787 cv
44.3242 196.518 li
41.272 195.12 li
39.6802 194.391 38.5381 191.74 39.1279 190.143 cv
39.4476 189.278 li
38.5667 189.004 li
38.3175 188.927 38.089 188.816 37.8782 188.671 cv
38.7412 187.536 39.5446 186.354 40.2719 185.148 cv
40.4014 184.934 40.5289 184.717 40.6523 184.503 cv
40.7789 184.285 40.9028 184.066 41.0239 183.846 cv
41.7043 182.614 42.3259 181.327 42.8771 180.012 cv
43.1088 180.122 43.3188 180.264 43.5103 180.442 cv
44.1875 181.068 li
44.777 180.358 li
45.3977 179.611 46.6477 179.129 47.9614 179.129 cv
48.8364 179.129 49.617 179.341 50.1596 179.727 cv
52.8962 181.671 li
51.4564 178.638 li
50.7055 177.057 51.5349 174.291 53.0132 173.447 cv
53.8141 172.99 li
53.3152 172.215 li
53.1738 171.995 53.0698 171.764 53.0021 171.516 cv
54.3928 171.202 55.7677 170.813 57.0999 170.357 cv
57.3367 170.276 57.5737 170.192 57.8067 170.107 cv
58.0438 170.021 58.2791 169.933 58.5131 169.842 cv
59.8265 169.336 61.1298 168.75 62.3973 168.097 cv
62.5041 168.33 62.5733 168.574 62.6062 168.833 cv
62.7223 169.748 li
63.6299 169.583 li
63.7686 169.558 63.9164 169.545 64.0686 169.545 cv
65.7367 169.545 67.763 171.038 68.1593 172.559 cv
69.0061 175.808 li
69.8524 172.559 li
70.2486 171.038 72.2746 169.545 73.9429 169.545 cv
74.0951 169.545 74.243 169.558 74.3817 169.583 cv
75.2891 169.748 li
75.4053 168.833 li
75.4383 168.574 75.5074 168.33 75.6141 168.097 cv
76.8817 168.75 78.185 169.336 79.4986 169.843 cv
79.7324 169.933 79.968 170.021 80.2016 170.105 cv
80.4378 170.192 80.6748 170.276 80.9119 170.357 cv
82.2438 170.813 83.6188 171.202 85.0095 171.516 cv
84.9417 171.764 84.8377 171.995 84.6963 172.215 cv
84.1975 172.99 li
84.9983 173.447 li
86.4766 174.291 87.306 177.057 86.5551 178.638 cv
85.1154 181.671 li
87.8521 179.727 li
88.3946 179.341 89.1751 179.129 90.05 179.129 cv
91.3638 179.129 92.6138 179.611 93.2346 180.358 cv
93.824 181.068 li
94.5012 180.442 li
94.6928 180.264 94.9027 180.122 95.1344 180.012 cv
95.6856 181.327 96.3073 182.614 96.9877 183.846 cv
97.1087 184.065 97.2326 184.285 97.3573 184.499 cv
97.4827 184.717 97.6102 184.934 97.7398 185.149 cv
98.4669 186.354 99.2704 187.536 100.133 188.671 cv
99.9226 188.816 99.6941 188.927 99.4449 189.004 cv
98.5639 189.278 li
98.8836 190.143 li
99.4735 191.74 98.3313 194.391 96.7395 195.12 cv
93.6873 196.518 li
97.0334 196.787 li
98.7786 196.928 100.759 199.029 100.751 200.731 cv
100.746 201.654 li
101.667 201.609 li
101.93 201.598 102.181 201.622 102.429 201.687 cv
102.006 203.049 101.655 204.434 101.384 205.815 cv
cp
95.6758 222.008 mo
95.6708 221.994 li
95.5712 222.056 li
95.4644 221.897 95.3475 221.746 95.2213 221.604 cv
96.0713 220.045 96.101 217.823 95.373 216.097 cv
97.2783 215.869 99.1583 214.703 100.07 213.206 cv
100.256 213.245 100.445 213.271 100.636 213.284 cv
100.633 213.4 li
100.646 213.398 li
100.644 215.39 100.787 217.397 101.075 219.385 cv
99.2091 220.13 97.3994 221.009 95.6758 222.008 cv
cp
94.4615 228.582 mo
94.3664 229.362 94.2695 230.159 94.228 230.929 cv
93.4633 230.836 92.661 230.793 91.8766 230.751 cv
90.5173 230.678 89.1234 230.604 88.0087 230.274 cv
88.8449 229.389 89.7224 228.546 90.6277 227.756 cv
90.8071 227.599 90.9888 227.444 91.1757 227.288 cv
91.3589 227.133 91.5432 226.982 91.7286 226.832 cv
92.6636 226.078 93.647 225.36 94.6631 224.69 cv
94.7946 225.845 94.6259 227.231 94.4615 228.582 cv
cp
85.1909 230.805 mo
83.9083 232.329 82.7284 233.958 81.6709 235.667 cv
79.7628 235.038 77.8117 234.548 75.8493 234.205 cv
75.854 234.192 li
75.7382 234.175 li
75.7583 233.985 75.7658 233.794 75.7605 233.604 cv
77.4142 232.956 78.8653 231.272 79.4168 229.482 cv
80.454 230.16 81.783 230.567 83.1158 230.567 cv
83.7453 230.567 84.3406 230.472 84.874 230.29 cv
84.9917 230.438 85.1192 230.578 85.2565 230.711 cv
85.1788 230.798 li
85.1909 230.805 li
cp
70.6932 238.461 mo
70.1191 238.997 69.5319 239.546 69.0058 240.109 cv
68.4797 239.546 67.8926 238.997 67.3185 238.461 cv
66.324 237.532 65.3041 236.579 64.6624 235.609 cv
65.8714 235.469 67.086 235.387 68.2872 235.364 cv
68.5057 235.36 68.7248 235.358 68.9443 235.358 cv
69.0672 235.358 li
69.2867 235.358 69.5058 235.36 69.7243 235.364 cv
70.9255 235.387 72.14 235.469 73.3492 235.609 cv
72.7075 236.579 71.6875 237.532 70.6932 238.461 cv
cp
62.1622 234.205 mo
60.1998 234.548 58.2487 235.038 56.3408 235.667 cv
55.2831 233.958 54.1031 232.329 52.8206 230.805 cv
52.8327 230.798 li
52.755 230.711 li
52.8924 230.578 53.0198 230.438 53.1374 230.29 cv
53.6709 230.472 54.2661 230.567 54.8959 230.567 cv
56.2287 230.567 57.5575 230.16 58.5947 229.482 cv
59.1461 231.272 60.5973 232.956 62.2511 233.604 cv
62.2457 233.794 62.2532 233.985 62.2733 234.175 cv
62.1575 234.192 li
62.1622 234.205 li
cp
46.1349 230.751 mo
45.3508 230.793 44.5482 230.836 43.7837 230.929 cv
43.7423 230.16 43.6451 229.362 43.5502 228.582 cv
43.3856 227.231 43.2169 225.845 43.3485 224.69 cv
44.3645 225.36 45.348 226.078 46.2831 226.832 cv
46.4686 226.982 46.6528 227.133 46.839 227.291 cv
47.0226 227.444 47.2044 227.599 47.3838 227.756 cv
48.2891 228.546 49.1666 229.389 50.0029 230.274 cv
48.8881 230.604 47.4942 230.678 46.1349 230.751 cv
cp
42.4404 222.056 mo
42.3407 221.994 li
42.3357 222.008 li
40.6121 221.009 38.8024 220.13 36.9366 219.385 cv
37.2245 217.397 37.3679 215.39 37.365 213.398 cv
37.3788 213.4 li
37.3756 213.284 li
37.5664 213.271 37.7552 213.245 37.9416 213.206 cv
38.8533 214.703 40.7337 215.869 42.6386 216.097 cv
41.9106 217.823 41.9402 220.045 42.7902 221.604 cv
42.664 221.746 42.5471 221.897 42.4404 222.056 cv
cp
32.2787 209.059 mo
31.6511 208.587 31.0085 208.104 30.3631 207.684 cv
30.8258 207.068 31.2643 206.394 31.6927 205.736 cv
32.4352 204.595 33.1965 203.425 34.0399 202.625 cv
34.3876 203.792 34.6798 204.973 34.911 206.153 cv
34.9569 206.386 35.0005 206.621 35.0422 206.861 cv
35.0844 207.097 35.1237 207.332 35.1604 207.567 cv
35.3463 208.754 35.4761 209.965 35.5483 211.18 cv
34.4822 210.717 33.3666 209.877 32.2787 209.059 cv
cp
32.5379 194.44 mo
34.0367 193.102 35.4365 191.657 36.7147 190.129 cv
36.7239 190.139 li
36.7965 190.048 li
36.9513 190.16 37.1124 190.262 37.2795 190.352 cv
37.0139 192.11 37.7477 194.211 39.0245 195.583 cv
37.3551 196.437 35.9474 198.16 35.5959 199.902 cv
35.4079 199.93 35.2217 199.97 35.0377 200.023 cv
35.0005 199.912 li
34.9883 199.919 li
34.3099 198.046 33.4887 196.21 32.5379 194.44 cv
cp
35.024 181.251 mo
35.7744 181.076 36.5432 180.842 37.2945 180.613 cv
38.5938 180.217 39.933 179.809 41.0922 179.738 cv
40.609 180.855 40.0729 181.949 39.4923 183.001 cv
39.3771 183.209 39.2596 183.417 39.1375 183.628 cv
39.0181 183.835 38.8967 184.041 38.7738 184.245 cv
38.1532 185.274 37.4745 186.284 36.7489 187.262 cv
36.2302 186.221 35.9147 184.861 35.6072 183.535 cv
35.4297 182.77 35.2482 181.987 35.024 181.251 cv
cp
43.5582 178.275 mo
44.2422 176.405 44.7936 174.47 45.2032 172.503 cv
47.2113 172.441 49.2125 172.234 51.1736 171.885 cv
51.1738 171.899 li
51.2885 171.876 li
51.3344 172.062 51.3925 172.243 51.4625 172.42 cv
50.1304 173.595 49.3424 175.673 49.4367 177.544 cv
48.9714 177.436 48.4745 177.38 47.9614 177.38 cv
46.4599 177.38 45.0279 177.854 44.0333 178.652 cv
43.8718 178.553 43.7036 178.464 43.5289 178.387 cv
43.5718 178.278 li
43.5582 178.275 li
cp
54.5635 166.123 mo
54.9192 165.423 55.2833 164.706 55.5853 163.998 cv
56.2721 164.346 57.0116 164.661 57.7345 164.969 cv
58.9868 165.502 60.271 166.049 61.2055 166.74 cv
60.1172 167.285 59.0041 167.778 57.8834 168.21 cv
57.6611 168.296 57.4372 168.38 57.2089 168.462 cv
56.9838 168.545 56.7584 168.624 56.5328 168.702 cv
55.3963 169.091 54.2269 169.429 53.0429 169.711 cv
53.3143 168.581 53.9466 167.336 54.5635 166.123 cv
cp
64.0353 167.204 mo
65.7617 166.211 67.4279 165.083 69.0058 163.84 cv
70.5839 165.083 72.2498 166.211 73.9764 167.204 cv
73.9675 167.215 li
74.0703 167.271 li
73.9867 167.442 73.9149 167.617 73.8551 167.797 cv
72.041 167.831 70.1234 168.93 69.0058 170.419 cv
67.8881 168.93 65.9703 167.831 64.1564 167.797 cv
64.0966 167.617 64.0249 167.442 63.9412 167.271 cv
64.0441 167.215 li
64.0353 167.204 li
cp
80.277 164.969 mo
80.9999 164.661 81.7394 164.346 82.4262 163.998 cv
82.7282 164.706 83.0924 165.423 83.4481 166.123 cv
84.0649 167.336 84.6972 168.581 84.9686 169.711 cv
83.7847 169.429 82.6152 169.091 81.4789 168.702 cv
81.2532 168.624 81.0277 168.545 80.7996 168.461 cv
80.5745 168.38 80.3504 168.296 80.1284 168.21 cv
79.0074 167.778 77.8944 167.285 76.806 166.74 cv
77.7406 166.049 79.0247 165.502 80.277 164.969 cv
cp
86.723 171.876 mo
86.8377 171.899 li
86.8379 171.885 li
88.7988 172.234 90.8003 172.441 92.8083 172.503 cv
93.2179 174.47 93.7694 176.405 94.4534 178.276 cv
94.4397 178.278 li
94.4826 178.387 li
94.308 178.464 94.1397 178.553 93.9782 178.652 cv
92.9837 177.854 91.5516 177.38 90.05 177.38 cv
89.5371 177.38 89.0401 177.436 88.5748 177.544 cv
88.6692 175.673 87.8811 173.595 86.549 172.42 cv
86.6188 172.243 86.6771 172.062 86.723 171.876 cv
cp
100.717 180.613 mo
101.469 180.842 102.237 181.076 102.988 181.251 cv
102.763 181.987 102.582 182.77 102.404 183.535 cv
102.097 184.861 101.781 186.221 101.263 187.262 cv
100.537 186.284 99.8585 185.274 99.2381 184.245 cv
99.1149 184.041 98.9934 183.835 98.8724 183.625 cv
98.7522 183.417 98.6344 183.209 98.5193 183.001 cv
97.9386 181.949 97.4026 180.855 96.9193 179.738 cv
98.0785 179.809 99.418 180.217 100.717 180.613 cv
cp
105.474 194.44 mo
104.523 196.21 103.702 198.046 103.023 199.919 cv
103.011 199.912 li
102.974 200.023 li
102.79 199.97 102.604 199.93 102.416 199.902 cv
102.064 198.16 100.656 196.437 98.987 195.583 cv
100.264 194.211 100.998 192.11 100.732 190.352 cv
100.899 190.262 101.06 190.16 101.215 190.048 cv
101.288 190.139 li
101.297 190.129 li
102.575 191.657 103.975 193.102 105.474 194.44 cv
cp
107.785 204.781 mo
106.825 203.306 105.836 201.786 104.556 200.83 cv
105.301 198.716 106.236 196.648 107.341 194.672 cv
107.689 194.049 li
107.149 193.583 li
105.435 192.104 103.848 190.48 102.425 188.749 cv
103.301 187.412 103.711 185.646 104.108 183.93 cv
104.365 182.825 104.607 181.78 104.956 180.908 cv
105.369 179.876 li
104.269 179.717 li
103.339 179.583 102.313 179.27 101.227 178.94 cv
99.5473 178.428 97.7827 177.9 96.2126 177.988 cv
95.4248 175.89 94.812 173.704 94.3884 171.481 cv
94.2547 170.779 li
93.5411 170.77 li
91.2774 170.738 89.0181 170.514 86.8155 170.103 cv
86.6269 168.516 85.8056 166.9 85.0077 165.33 cv
84.4935 164.318 84.0076 163.362 83.714 162.469 cv
83.367 161.413 li
82.422 161.999 li
81.6233 162.494 80.6364 162.914 79.5919 163.359 cv
77.9716 164.049 76.3036 164.759 75.1392 165.853 cv
73.1873 164.753 71.3127 163.472 69.559 162.041 cv
69.0058 161.589 li
68.4528 162.041 li
66.6988 163.472 64.8242 164.753 62.8723 165.853 cv
61.7079 164.759 60.0399 164.049 58.4197 163.359 cv
57.3751 162.914 56.3883 162.494 55.5895 161.999 cv
54.6448 161.413 li
54.2975 162.469 li
54.0039 163.362 53.518 164.318 53.0038 165.33 cv
52.206 166.9 51.3846 168.516 51.196 170.103 cv
48.9934 170.514 46.7342 170.738 44.4704 170.77 cv
43.7567 170.779 li
43.6231 171.481 li
43.1996 173.704 42.5867 175.89 41.7989 177.988 cv
40.2313 177.898 38.4644 178.428 36.7847 178.94 cv
35.6988 179.27 34.6728 179.583 33.7427 179.717 cv
32.6424 179.876 li
33.0552 180.908 li
33.4041 181.78 33.6466 182.825 33.903 183.93 cv
34.3009 185.646 34.7105 187.412 35.5863 188.749 cv
34.1631 190.48 32.5766 192.104 30.8624 193.583 cv
30.3221 194.049 li
30.6704 194.672 li
31.7753 196.648 32.711 198.716 33.4561 200.83 cv
32.1759 201.786 31.187 203.306 30.2264 204.782 cv
29.6071 205.733 29.0222 206.632 28.3958 207.333 cv
27.6547 208.161 li
28.6345 208.686 li
29.4629 209.131 30.3199 209.775 31.2273 210.458 cv
32.6347 211.516 34.0835 212.606 35.6136 213.066 cv
35.6363 215.307 35.4645 217.571 35.1021 219.806 cv
34.9878 220.51 li
35.6553 220.763 li
37.7718 221.567 39.8179 222.55 41.7472 223.69 cv
41.3816 225.246 41.6007 227.046 41.8136 228.794 cv
41.9507 229.921 42.0804 230.985 42.0509 231.924 cv
42.0161 233.035 li
43.1042 232.808 li
44.0239 232.616 45.0947 232.559 46.2285 232.498 cv
47.9869 232.404 49.7974 232.307 51.2658 231.677 cv
52.7234 233.379 54.0472 235.223 55.2058 237.168 cv
55.5712 237.781 li
56.2452 237.546 li
58.3829 236.801 60.5821 236.239 62.7928 235.873 cv
63.5128 237.299 64.8375 238.537 66.1241 239.74 cv
66.9538 240.514 67.7374 241.247 68.3184 241.985 cv
69.0058 242.859 li
69.6933 241.985 li
70.2744 241.247 71.0579 240.514 71.8876 239.739 cv
73.1743 238.537 74.4988 237.299 75.2187 235.873 cv
77.4294 236.239 79.6288 236.801 81.7666 237.546 cv
82.4406 237.781 li
82.806 237.168 li
83.9645 235.223 85.2879 233.379 86.7456 231.677 cv
88.2143 232.307 90.0247 232.404 91.7833 232.498 cv
92.9169 232.559 93.9876 232.616 94.9076 232.808 cv
95.9959 233.035 li
95.9609 231.924 li
95.9314 230.985 96.0608 229.92 96.1982 228.793 cv
96.4108 227.045 96.6299 225.246 96.2643 223.69 cv
98.1936 222.55 100.24 221.567 102.356 220.763 cv
103.024 220.51 li
102.909 219.806 li
102.547 217.571 102.375 215.307 102.398 213.066 cv
103.928 212.605 105.377 211.516 106.784 210.458 cv
107.692 209.775 108.549 209.131 109.377 208.686 cv
110.357 208.161 li
109.616 207.333 li
108.989 206.632 108.404 205.733 107.785 204.781 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (150327_ 221654728 Vector line emblems and badges frames for logo and labels.eps)
%%CreationDate: 3/27/2015 9:16 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q=sZLIbe4O="^EPTRPLrf\%NJ%iIK>E(Z^d8r)7`c#'p%`QVqcfb@VBlq2=mmR!kjI7iU=H6C.sH,M@3O7df#s?T7BZ14
%WhsRT[]XBur2]kfT7qt8Q(tQHZ:DW+lINgukHNJbL$eSGUY9Ch=1-:[`O`Kb]RXpXg4un9D>_n(eRIbM`aj:`dmBlL()j;YZ(niI
%SJnV/)Z6HAUL40$9^U^$:(<YP_bLFp!HZ`$8)$%H8_b0^ZhWc5]Vr2!X^\3VW.0)G?*cUF:OO3@Mu3`P[]157cQ[b9jhp\!\(]du
%[C@$#lo`^8MC7+D'3j0Ib(YNXqF;A%n6^nl29:95%K-79g\"A;g!hRtk&h.Eo=0Os*F)mV*Ve>&",q"'@*9a2&i"VDesb,u-`!NC
%F?SYtb9m1KqM4DGB0[K(%Gf8g/tB$3A6`4-peU`RoSnnlr3I%8>h*/6`H'TDVjVCEN[t-`;a[hjnds&9h.kSg;m19CD*1\2#I3/7
%LK+=1*aYc\l"Ce[l+`t58[3CMG(:>IeLmH2WocgP]^")AMSDKR3^YH=cj]4fNOQ:BA]k2R\H/:_jd94Z>4<oAi4,(b(hRlAnTm.q
%%[RiUGW:IDKa4a&7A[^:f\3VI\:QoR>Es5&T!#15](dr'RIQPl"8T.Q.KJ>iKQXhL_`Zc1=%HWCllY9A>P7Q!UP:/C`]nN0jE7-q
%C?%X.)ui4]_%b_&!/;Ce?Su4VV2c5hnXin\SUYrfmD>4EX[]e1;a53unXmd:\T&C"Do5JNd=O/+CBnM0iK$L_,-dhbdOLPj%er-N
%P:9P$O2aj!E4/)m^P/rbVu5Etj+0]d>f7:plW3u1YhEb?'6Co61EKSTojURh0;8dI.Y#;o7DMha-$B\Ymh<qPeC"K,cn*\EDuL=h
%Pcp6$[9'>7RtB@OXj56^lO"0(*#<$MRq0t-X0>O6m%7=crgelVMk*L;!+ERrNc;ga`csu.F'FeF2iH4$je>ak?<0[%Y17ArC+#!1
%24As/pX)UuGOuW19F+*8Ct0']%+"TH7>LjG6,N/Z$!o2%2/"<2Egg$kLtO7Z5XZ&i`K>S/IhmUtpF9g4M"17AmAs0eZtn(UC<Ic>
%:8Lo!O+4Q!@3XBH>b]IP_GTc'&Y;D^NNi%NYCaf<?E&RJTH/5,SM93N7]hM:V075hCkdTdg%.1pdQ%KEVWt;Fjfo`Kd.tlF\(`$u
%3bY4g7%^keq!7nXhCC9Ek]=I96>N=JqDIE92/Vle>."iI/cu/YQ*Y?U"@9I!*ODkKZ+j*!Z;N9`_E.?D[?Vb/-de:UT?](m)noS,
%(ER9@a"V*'U:8=<`G/KHq)+s@]ia;9Yk0U*c(os\<rrs4\igT54UDZa/*5&f!^K/gaTgl_XB]"R&jR['hA/*(S^VD_H!*6e`WK3i
%-NFE6h%h[R18YeIH9=ma,eM-W8cW*ln"jQf9U\ZAFB`D93n?s_GjOpuZ"St@^GUP]K@1+]h.dR_PT=ZMS9j5*;ZZ2t4@j>SLOk1*
%[+j(,[X^0S6WNU+%SE;OT8A(r45ZK]cKNPuYg/-nYg<`,FFj%HQlLPQ'+14;&/_/b(b[/PPAroVg%soR\<S:"DKK*ZE1;:("H'@R
%7+'O4?0##N_q;(-%eKAo)2`,3N(,U>'u>`#!)),?QMH5^YVpc<$/">]g'&?Ej#=3*&'qYk\LTTN+O"-%8HWT$>WI0!b5H7gEp'PK
%(r+U&NCnQcbRF\em`bW^^a5'u;s;FO#_^HN\[a@PpZ:POgt\5h7k)XD%!Zj8J=(G.cCQ>3/eKedjNlr)5JudVA[1%cq7A<DVU=9]
%X*09?^hIm#fTIDMI0T&*"PuDU;pL/J<[do*OcuP`^L\p']@^u0/&cgP3"8Wkh:stSDhjkqgRgqN8gY-^JTo7.bb=SZg-\G>87E$n
%s13>Z59O!p8hR<Ac%=Vr-$m)ko5_@udNb-/<Kk?*7DIS$1!JQ>kRK\A\bs#r0G<G2[(EI3@OXDl'pDKu:\S)b-ka<!1teuH>FUUu
%]2PdY+hHu,D@Jcm3Ik=`2&l5X7KCFqVUXR,2K\`/kmpcRM4g7*=9Uml9*3+_'7fW1>IQ<s)jP_^03K]4l(?_MZ!c*F@5glVd5-,m
%6"5WshDD`NOCNa_ED,ldB"&bD-3:-3%_XB`+VBf$dp3FS\Q(VndfeFO=&oqNXN?2?M:B,J7A2SSGNLh\Nt\]nMQKM6Z5.VH*)'PT
%19gms(j#@(N\NW<E>kD+Rp6rg6uq)FJaS;qM\%U'j4;LlT#X(,Mg:W7mu#^B9#m=ocrgDe-9Q6Z)"T#F@F.\5P0[a8;9cMcn@o8^
%lK7OnB&VQ8Jk4PDKILL`M93gaGbNtDQ7Lc:Zmn/o(,Y+[Q7JI[[k\8XrT65`J'?bc[$m=`=YPC=1kBPc/3VLO$a7,1RLGLM$a5'C
%,SJ&gVabtYH9aCIdVF+DP$jJMe[.%*'PG8-i5>>r,eAD-jOHpgMbbT#-=%N;aQT23\,?VXkjQ:RT31V;/W+2`$P]*?b@m;58Nda(
%/.lqsI\oX;\nWU@??*UG.[%$W`*[Xt'3oEm?5Dl"Y^.9il/t0lgiZpBEa/#R-+N`_3IKG6gp4B1=5(o6YnZ3D^[)c+;lOeP7@5^D
%<SMV?3XGig;klS;hicEjI5H76NX)":-8Dr?a,(T#'5o`*jt_h'.HC2I_+"`fad-jX$/Eq-&IF:"CXTa<aii>O=m]^..;dYZm$oFs
%7QR_PX3!,?Wjd2FeOhtU-HKErLT#m@S<s;L\Edu4eI'E/*=l/T>d!"'hBd\%mWrZWdP0EF%F9_EM.ECFG?^`i)tbJS;^up*h%A8o
%4m/S^^+HRZ"=I/D;BLaB9sF1LD`)9$A/f['/NAX<T>b.DNW^o):9g)22WC=;"]>Ds6"M1Lpa^r)4:h,Y^GRoAi2JYuq!!cBp+2*o
%8hH1t>5G.?0E[$^9(P`@ams;7r>E[E8O?G+'#'`GU.eI4[PZ;uR?C7.6o&/uV/_Y:AQ+tRo'cKgi5>tYBi.#lSr6L8V-K7Q&8-ie
%A+F\<&t$a=P)GKV7HV-/o3@N06efh+;'sQ>RH[rjj*r0f-'<GEGb\]=M_[$XXY`\].#A4Fd^`jgF&A)sg9bhtn%>Kb`giJcB6aSK
%]?R[Pmc&MK1;)`s0mto<VWT*$d9YPi%VD_i@<Ufj:Gk[<Irg9V)YM^`<KKrg(S=dO\c%?:%BI^sjk<GiRQHjOZR49:*9g_2c/mZ<
%b-e>e[*6e&fb8/-A?LVWUiWLnQYJICC3*m%k+p]^)/F;m2OA/;P%s9Ad-3.;Dbh9D&tn1OhI971"lPo1DU(`.S;e/S@*V5_2X6tR
%8(X763H#>u;51EVV=/8(A0;j%.t<9'_eS_nl#2"[GUid=Ip4<%P$2:r0sofXZk[L61h4e[28b"Fl5KT4#+sk(fAI$RL6>Nj9e94!
%*h[e@RThFC;lQ,$o1FH+Do).CJMtDT-_I=[MUM7-5b$B_)+f,f:k-MVE^Wi&J7f&of8MKqIr!T'g[d[J;Xn>H9V\p^5@H]4\bi`+
%bDZCPh`ekEpV3*8IlhrNNEW[9#4(ZLS)EJYVa_FIUp<Q.!]RjOS+q3u6W$&/G@I&)O/?4jbYn,A"@:84@J<GF*8'N,I%1<n$qgij
%J\ddk(m9]XX':fn2q+!iU0816b7h']MQKM6Z5.VHkfKh#M;0@3C`%Zpn;]4b8obh',&X>hk:cer0E(&-^]2sbmr'i#2o#B`<3\M`
%pV4Y6GQVdICC-DNC@6K45>3iIo:=e7cL6/DGJ="a1r&XQhtbRdI"+X#CVjS%o/kk*SaX<k8)X<XS)i`kVFD!<aE;EQ8o3m4lPpn%
%j.s*$Hb/+'ad0_MA")1heA6m=-_\(d,Amn#?X^@rpc0D6C?=H\"!*\#=Re6LK`)!"q"Rqk,c/YThR<Yg@OX;&0>qHP6H76ZG0pZ7
%qAQ;dE33"k="YD,Io[K<Yd;mfbA3)<Ys.fg?lh@uLX,%UZ[(bN-:;E%npA>3(ck<#*7!SW[r*b-$*N(#.f>Pc5bmtb26#L]J>r>$
%9!-hcp9TiDPU:b6EgS1\+hqt,)=(=E;tB9glj4/o9!W@o_\+B$f)1fK"GVnp=cFAOZSp!8PltPto%ac7@b6B/1gQ!pDZ/)gS,5YT
%`^Am>QeN%`LbK2A?:5K^i\0o=b<58L&%p*g0D!!&4Rb*:]Z^I2o>&Pa&9t`K<goRAT8<js*=IX8*^Q7)#h"^*ReT.rXM"q3(Rpd[
%8PlO2%Z?UGTq5s4"1(g:+pe[A?=tGg%$P"1@b-"X,C,m:j=?I_/M`Ha5g012Obm:BNq4_oPGK;_<L>+#4!lm--XJOad!)!1a%;S(
%s(fbs)XlF!TNgU0QfchbDMq2p4/^,c`H(#%r'tN$=,I^:?fb(fSX,pJf`0GSW(e3%1sXG%@0a:!$Hia4DJE9f7T,Har0V+W_6:sY
%Vb)VOR!.eHiNHJKq#b)os$\"PNNedEB40._jr_81R%?[5HYCmdTe.5/_KZD^U<d^SSL"@^M*h+*p4+i54TQ*Y/*0/:FJ@Zp!FmDV
%jt]VrO;;uO/TB]/`k9sp4H;.UcIZmO1#.$oA"jFjGoU>bH,uV/3(=Mtk&H=df<k-/`h\L^GoU<8a-`#L#'ssR@\SOH\UQLFrn2Rt
%=R$U$Y8WZO$/%FY/7P@<DZuq7K&FMq=NU6UEMq56%?"6ZG\Yn"Uf'od-_mU6Xe!s[cF]OtU-80em/Yf*cU:9uG.oQ$oLsj/4_M`W
%=D3CQ\m`::`5V!,5KWJ)?K!nBLm)1ZBO5am??><'C[TD[Tpcju;j0bGS[TNF,gq^ah%h7l=E,^F+n8bEmbAE]-MTHr:*YUFeOXM$
%r%gX"S!4BYVZK(1h:>`<$5>:e6,>rikbS)>oC="K@@>R7+S.j4!b&esp$#dS5a_1S07B.L]b1?%:!$_HMEW'S&q5;'0Okn+ST/8p
%Zs>%%5k>A;l*sP\ON922Tm6NCM8eALI6-K(>VZmGpZCVpgt\BgHZO7HDXPbD\Mokj+IRRtZf'*Q@!^J\T:6mO/jY&B.J2d95W*cK
%k3h$[Sa1uBm`s)5\YOofB#(*5#/m=LFNuGJFGYO9-C=.+UJ\a='pD2>\N`"\rnL25A!ifo`^o#*r7ur5'23SunhY7V\e:2X'5"&C
%`4S:r[CR![a=FSA]REY-N8"Y.=2A/'?fbQVWtn?0CDo,hR`/1$o4p3\BW^+d<D=+&(B&-/mLoNonC39UK^_YC)\nJ(VNQjL>59PB
%Z:W[Il&,<7:PWn-"e[c=ZeV'&ff%[$Q^@L!-)X52c%nlR+DIY-D4MJ9iGkiabXCd]ITpb;-t4B6EjJW@+-9:Xo(8!Q/a.Xi-@2b#
%'u*/O4A#^V!;6qji6u38:J-j7]l+:Yj?Kn2j+U7`"P%e7.f>PcSuVFr22\dS8CHLI/%'8h9=:_]D8AT&i"g(ur);`V^-X#j0A/5@
%dQb8S&d!DHdS?VrGGCcuSQg2WMf*G(r"bblo%aaKf'>\@%DDs;?g`+'Y@aONh?^oAaP824)b'e";)Gb=IeuTp"V8q=U5:[`D?SM.
%gICf$lWMHGShs"]J&$Mf`'=CYjD*=)^Bt3hRUd7i<Q+-Q_4#0WP";^U>818IQ62PXX?64bV:_ei/o+mihjTq445g>!p!p914cEmp
%Q/c+0cCT&M_B4uE*0\/ll,k_@HVD(Y]V4XNf8YtF^])i,j"s5ek<CjarC5+LT#X(,MlEM.)6DdQ[_Ts@g@d=.a_/&23.3-'o5.fH
%G1%[^XU*B%W,"(%141$1[n!4t9qqtQ1gU#8kYotd*b+u56u^5-e"DPq`SdQT4StmuD6h.!N5"\K/JI,N..qSL4>c^g1(IplRI!-S
%\@J/.BaG4"M(b1"r0s`uga;bkEKLP9lQU\GbZ:.i)d(i.cgGL8o+YI+bVST4>ok89Uc((3iF[+Jiam_(jS,5.#5'Q(deiX?<N*9:
%.HL(2.Fr4G'^c[]P+Z55U6DI?+N.%U^J,WHlfii@d\P6lQ]@q@N6DosANW]=At@/Sk@AbjA7j'"0[&9eEX938pa#X1<NN[UPPgT\
%"O]D!_*Rc4ZdEZ&H;;,VF5p=Ro?bN?oTA-4.-3$bXo:,>?lD1uRnCb9\ac9"'[(u>#<2PmUkS/qTq?5QbL)@o;4E24Vlq$36^WSM
%]e#*8>^0,FX5EjFT3"b`cKFX+X'PMh!WA/fCa`M*S:t.LeSSZ.qo*mO,&CruXYT6_gm8q/]3249.i5987+[VlUUgO,m?T@0I(f)A
%bD6T.&A?io#='665D3Fs%NgNa)q3@H?)N2B+-Ub]IfK*Dr[usj*+M;(2R)5bHK/Y/r^*2]bgn53p^.:[\J8Z&T4.Bj$7UOD]c@&Y
%f&Gh'Yu92`90lApmXI[t=W0Eh\5Oqah0`=feT/WPV:;hNX)Sl7*b<\@eUs1O][S<c!@NlP;-7Q5<L2lRmO1o,j@6i_ouDQ(D&5Ba
%LUNgoWnP2\l&2^0s*ub`n4WQ61<tr^VZAS,.W\%+$&^$<C+G(Y<bEO[\S>5"O28eK(heY1&BlCB-sMb1(r#Uh?u.adj_gnN%#!KR
%^PO6*XT''uE.SpH#Cs":D?moACA>WQ*"P7:]&s]3A-,j,HlG<&JSsKIRYKi,gA<(gq?F<:o[?RB'>cuLO9;JW/\YqS>CVD#K5u8"
%.;F$6Jh^JZKr$D>L;/tf;)gg9CR45/AbB;/cXldoA[Q:kL*(p_G'qI?I/Mn_4pl5[0c^K&ZtUDDBAj*5n6?2_bbau;>,RM6T:imM
%X`hFWiqg/_CK=qbc%Htrg#G:jD+I/7cd[B`5k=OugN89k_8nmYp!Cdq%m[9_](ghN$iJr8?t*Yb7'q[o>'bMJ!uJKZi-$LY`->)=
%YZM>rSWJCa4@<c`_mDQ`L-4@7:#*$i"MTR:;rH?3-apV]km/VLG?U6=nDt6*k5BcATtOh2nXm_I+QP,gUZ/32lbA4n+qZ3d_.Yl:
%2dHOfVU0J`i)oodl+s_ddP1hCf/%g3[%(6_ct#XBX[(WiCAV3&W<3Xgn([!e;`I_NpB1?jngSgK@d:j9HsY4"grs?b"0D5.oQ?nd
%/h&q_6g$+`J(;g_<Li@SWNh;oemU(b:$3IlDCqr6o#2*3A`7`"2B]cnT08;pBMcQb"25fte:PtC=R4k5ju9Ct/Gc_m3\l#kE4Yh;
%hELnEfP7UL%37cJr*o"m>dTuDn"3O>.PTGo#?[[,[8FLBa&YL&S]Is,'*7#oV2dc>4T7&PoEC[D%Qgj"RKS/@h1$eLr-bB"%+$Vs
%-::3*n"(247ZrtLF[EUK:g!ZP\QHY]P<n[DB;sYR1hm[Hrr,b-?#:D*:.601I$gF%rsc\&*rdkQhql[qZ#]a>k600+'M.e<[8NG6
%0tqJii,Kim`Td_ja1aj7%K)Y+M*2oOZ-UgBoa-2i9lNE`/*6:c&3tRR4XU<:,d_b5-7QZ)Rugo'!]EEcqh@F\f'%W]Yns!U%U,-U
%nMqDmRHoJP`dT&HaCut]N!95>)*'4]iU5[UG+m<`'usB9KAPdVC,iMC04Cg8-\;Bk!FPR$fI=6]_@@D\(sZjaj:d)iIF'O!&&sMp
%r!BNB%G30K<N+_$Kdt)u`Hl#9Q4?F`3,pU1]`TS_b43?`dHjhIQ2`0>!@b]0!kuX#"o>tZEiaGje#Z:!=mBKCfoL$U>3R<=P,#`)
%!ShpCCpk5uXg$War0]*lf@,4A?jpg`@<lL,o<?b124=frCL\^2%NB1qr4<Q)?B%)[>8#q[XqW6uA*rl['=!U%fI<,ESRD[ODR,\g
%Df=cE=kr*bi_-+lY=Y"[L10l`4iFhPm#M!i]@o4p<fb+0\([,YkPIcA1n*^^hCm8(lhctJcgDX)(0sE3\TOCq?Ent,/RF+a@ADLm
%b,q&>ksp@-Xk;p/22\NA7R+MaRG(e+\Z,5ei8^qOZ%]#([>S(^XL5lDkbEjt'D>'hm*R@B_\NZaFfTNXJ;$qRE@bbtc4!f4$kmi&
%7:sbGLuYXJB2t$LG$9%#L26Tce6/BlB!M>JZ$kD[7u8QPc9ort@I)693skrPBNsRjVg)6>eU"unZQ^WggoP$spd6mS[cD.)Y,&%/
%Z!?]]U0=gMe_^S^7([r0m:N+,F$t1AbB>rVmAS\*KWQ(:]a#h)2Hls5JAVluTcr7aNUD3pDj7CCh%&AM&Q/+A^T,%W;9r@!D`NC1
%3P)@Wo2O!I3gm]j@L'TUPBqc//'qSL:[&Tm%q*5"p$,Q.oA1S&hL'bDlJ9i<n&RN5.Ti_&)]^.!p<K^Kj0qD8kdKpfE/$_h?okQ0
%)Epjg)^*hk3P$(RV@hd-pmKd+mci:>8:8J)Ij64WO3N5R2b3Bl<UMIXI`BI-pX<3sSO0ehQ+[&RCnZN;Dl(,9UH&kD]4OUe[G)fq
%:Jn'/rRHbTab[[,>C&>;a*FipGT9ak'K`P&]geu'`Ja1CFVnpK7_M*$KWUem:LEel'>1!TV$F6-Y+8YA_lA?Z#I^a8lClc0+dT?J
%RkeI-I0'h2Ck;I-_I'X-U[<bbL=H;<]?8(2HDdK'pS+065.3b7ZOdQk&_tcuCk:eXE'*r*q_F=Z6pfU)#a2=E)5,c)^d5HY">Mf`
%LfEXhH<N.?q+mXf:bZ9I'WJD)8<fF?PpU/i]Q*lX'\rpjq#G!$%V\PCe+b_82),]CI=5JbkqS!D/dC&Y&("\(Km25t/q26qZ9gDq
%((u&e]K"U%e"d;PmF4eZDAf(-ifRO(g[u0!c!h"3BWK_Nr7VR[eb4-]>p$H0fE7__P[c\LZg)[cCV\51?u>9IRjZA?_t\)^BE0>8
%lCDBA#q2#bfb8s3YQP6,:8JXV@#PqBP(/722_WZb%Pn.0-sV'iGW9Hq[):/Kj2BI*p+1]P(BBiF)\Q@i;0`1m2E!Wj44t_ccV")9
%laF`+E5R6)odRmgZ@QWAX]fED3Wf\)bW+.k)ialKe<TJ\@/uaBnW7"#=o>T=a56Y'h!Ec<F9YT*FGIjII#Js*V&LbDkh^!;4V0X6
%7d5?hmC6"<=^]HWmQbA+2_$$2RgntEE8-agehpnVNf"u0WR:X?jbflboH`^",:uqmMQ+u@mS1Pm478]22l^FcNP0Lc3j2@PgACid
%_$bn>l^r&3q=fl-i$roWGEmKbnT0Nc;EO:_97uu4G'[)jr7-j*jnhZ2[i+i]A.->rENS(]4n=%)SGd1K4rK>r$da+:c4H5hJ/GEA
%p@WLo5L9<dGiW9fb#L-#cgsiJ)8EM/&1a<+@7E+3eII#CD>i"$ZoVk_`L9[^fK::O-<b/$NSYpo#LZ_4(0j^DZ1Oaig+/NBN7\4_
%;]9K"c0()(9]K03:M(m_@BY&sS7Q4NV$5=SO5KX)DW9,oV5N*^J%lbD$*AC'BZ5@3%-^Ad/6;Y-V>bB"X%Msl9^o);/!h1)C.uP*
%(7!8@cjdsGnEnG;j(tWBhTutGCE0'qh?j_/,47+[.2;#)BUeBa2,iYJBX\Qt#LA=a76`)A3hgQ!>Q[cr>#2kjk&ilVn&dYuER-qK
%"FMKkNE?uYM05YY*]P%\Pho\q?Sqr.[uF'8ZtE0$OYO3^WMiKJ4HI)-)1-Jg:*YYmqUUJ9Epo="%H$e5cC"U$,U>5q:`6e2AaSiN
%Q>_?7e/CYk35.SlSaIZCIKU/LeUtLHP;PbUol8IRpU`m"e;](=A,)X/?bNj'7s-p-\P2%]/@NkSSQ`9Y<]#iUEiY^EZn=,#US+`t
%1:>cL+4d:<W5FI90HrUd#4*63(!c%1Rm;rlYWH^+!h,uG.%W1"(7EKekX2sZ4k^2*6*1&e1BN@6;'R3@].2bk_\pl;YH3'q4`SES
%YA<H-=3hc>ZSrA)%-6)b#/`NFYSK]b_0-#R^TXCi(m3JFZ3\#u*&D*T.$6)A\ej;/6Vj.?GH-eAF$3:Lf<HB''K^;H^d)VjcC@m2
%B1ak5m(PEeGcf/7]p!/Sce>/0_`m0sZZY-7mNQ$,V_FT%&FgREX%]YJ\nZknl4M\U]#XXi6"`X8$ml#AI>6/>rgb=u*q(@?kMDb7
%5:>ekQYpHTejsi"N\0@dn$p)F>ZSYs)S:5e"_VcrJjsq+R*JO4_8sD7\>oO_BN"1+K"b1J<(EEZ]LfDJ'R_f[X6o,EqM7mT*TR1]
%;5ZrO).[6bfSft)fT%2a&bPC>:E!LT%cS_!nYQ(QVW:LsC.Sb_YmTO;&PJi6W)cB'A8l59R3GrpNS7Db,GX^ec=LNo&$d0_c*m*A
%J"d#^;;a\K5c`'>Is[Cs;RTE%r>OeQ^^_:-Ed'n^?F<ujNIV,^6Q`""+,(M7W]c4dBrPF->\kL!kHpe^:"KYUGM2>nXh+dX@gm"s
%(.sSVBADN=/:Q:`bEZs>\`4RiLVX%%>T_V](g@F2^oK*!l0>fY+)"E8_fk.95#)_7$\1W[?8c!eQ/9H@DH+o&oPD#igTT3;S:Q!t
%7hKjt@D5U5)d,bL#o$O'T9;Iqo^qVF^U%s>2WWlHM1[%.Q+t3$@G!UO#PN8IXi"X#M\hT1hW%MO4JnG#_+R/,(-V)r(A6Z0($lGY
%j'0Kf[sUE-l`gi<&7RK:R&a"/3<OWOSXh1KDu]7i&o^e)5T]UR5cPr'hbaq%C'mhO&`6>uPrd`?MH[=;G1!qP?6o69#j/?"3"UMj
%JLFoea"NDlKjLMb)$g,lYLe=DJQnnA3X/:ph5g:(oU<aFAG;)l0Fd%49)YdDmXS0cX`sUYBr?EV@DRqm`NXNceLk!A5Sh*bSqYoZ
%bSO#cR[(/_k$#U>S&H^e>ZJW^Iq\%Fqi,osFP1EY5Yh9Zo0_\V\,-7J\JnfH%tV^<%<-asVJamF,%hatE7h*i,#`+g!/FtPmdsVo
%f;5>1/!C\]TU8Xo.oEBi<8[[?p8I@V,X*#KrBo_TZ*2XsUSfChT!XC"k.$uepT2m<;:-XYfU`_k)mP+W:9e,c;^TN1Ro?`G./[ri
%2`f]NACnpLE.Cu*Kc1f!RYZ!!D0]Feo.mC_D8,KgehuNP7r2Q>N^PYOMJ`9S9@q$A;=\%JmV"Yg7%;6i9`1s=eXAb\>,/6Sb]gE'
%T(E*-]2e,Y:/b8:8V;_l$0m$AXjb(B8tf9/SP[h973;12;[;8Pkoq$%DVA2V[tq"/H*W"\a`qC%*ZuFr%]s^lDlD+8](IST`g%Dc
%J)gpQbb\@:3Q<,'VZOa4Aor.ElYmB*\,_]Q?$Q(O')ijgSs''B-_!R206\BpDT5PBQ^.>t27X_ID*1G`@TBC"F(Yc-P%A1W,8#G]
%4@T>,&8'6,,GRj$a9;W!*f0=[8DSiOC*`C!l<F>.!F5H,dCN5O`$gT)@1>^$-jd,;.]1i):G08eZ[/lS*>LEq4,st#%6T1e"kG'E
%q*ao09kPG>cok@WU.6]hj6dd/Y>Oa.iIN@B5S&i)=;qqY<97`lSbS:`NCeU>%6kG%56Ajt*sg+^7F*o6.!&,f]os:TR%d(,YOQe$
%'S%=MM$JAe@BA+GUL&ql2XIhtY`rg^q`,qEeuu^Cp"[=<d(3.YDPUD!4/Qd[Bh4m[H.(n9Jlh$Ol^l^Z2j6p,m#:Hp]qad\fWCB8
%F%qT?+bXXnYN.cdLuge`J?B4XS"V:!>qB9BCoPrE.sCWD^V\'X[1cEs@-KlodU)I1<5T/EnUH=W<"%hXr4Q$`j/nhQ7V6Zdc\!:U
%[3P:`_4-.<Z!jpU3Ln^]"inSH_gO59/$Np"0=>:E[Zu+^%-BLi?u5Rm%X&e(g&Z]"L($0t:iiph\d`sdeGkoo\/sHNYN.1]s3;[(
%md0^D*dmH4Q'P^[T-$2joORpVdt__XpIi-LK7i:@7VfVZ\U%,fZWjrG[.nUH;TuN:]5M"l\bB,`hJ>F2\"BklI=A]@dH[%1_Nqb$
%0,V-G:Y4@sn+hkfrVjgjf?E97oqc8IU]&VGJRpajp?o:uYMDtAil15sNHI<FhQ/hf<m#&1%kk)f[9*>-$[VWc_Q*?M]9E9o-"h^4
%?HUh;HYpQJkOQ_NpKk=j\*q)TIBPh^#Ku2Sp"cs*ZebA-F78M^:S4s@S!gb'=&o."Ib@i<.X]oOD.dTZnk0AH_W#b7*0qaq'ts_A
%k0LfTo5`B@lMK-'ggt-ided_M@-$'pI*(%<Z*F<+iB*V:2Vm6fHL\BDT-!pOn!&%ajHfc5pTqo`pZfDJpVh.hQ3k8Y4t1?6SC`[g
%QhK[tH?R,Nn0IaCl._D]c%g3ERpl']Za[R@0%W^liY?pB4P;dQ]B#dtIAQ/8.eg][<ke!fF4H!-&!pKr5'O>[`t*VA!09%hFtYFL
%`a*rgAKtD44fgel]"b]5eNQ4"Ghu'igrd&t43!Jb<?ms<Pi$>m"jD6&6gpSBQWG],.n)F.A,kfQnktjUHA=A4iPXNh`obSC]m![R
%JV2L&o/iT"HdB@L`n)U(Dp+bRc*Mb(B\mCp"T[eTqtM3Rb:!%TqmqfdHBu0hj=UfAI9YRWNA(&"o..fQ#DG685.5DJ(Vf`;ZVVH?
%7R+MsA()MqSe]hqVtG7<0=h,Fdag@Kc2:u;!!U-hT0.J/[:JEl?T]&:]mI?)<rW*`/"L:ZA!l^-kK%5-=)KtN_O#KT`o>GllkS7(
%k1n)?:C5ibr]I[GO7)a?p*B\:8cF,!jc?NQn_sG:HhQUpqMY:9Zg>eFWKTKX?eWhtQkkiMf),$s*XjNJgj9"fGrNSQ'5nDhI_CVO
%o;e;1$[HD-)Ys!bXYQRajt/cCo'G5e4$Fs\)4&r:24hJ*g$a+m)m.]Q)gc`-h/bV'hl3tf35NX.:NDHQCHj_(6!$o:;8n<K;o(5)
%:S)_G$i-fbds%?_ps6BTiJF/:B8qnYPKr"Na_n#'*LhJTWM!Rhrqk7eCcaqNp*3MXp7nX7'SM1Z#L,c.QgW8AXYYD(EB\3HQLs\9
%kutG-`^kcC^$Y1NY!FnR^AP*`/Gh2dhtc[TKbWHDooFUP?=j_^k4T1PkI\HG]K@\\2TrK=,Y862_fi3J5(+5CmWS;qIa#Jb\bEIL
%'<ho3,<X%c?S-r8f'@Gm2O8g+qQ=gd^]"+'n7el.h7S(M"AdV8=+*&2gM&Ul2_49Q9;6M'e"QU$hTh#rY-i6A5n/)8kReH\rfa7l
%+*ZhH(S=!j=n(gqhW+"KBt9NmrjJ;'WB=H;n-%nb?b"dQrPlgrgQS1;@EX0!*gTrYU2PI?0[e`[C:l;0&)>_0E:D[kX*"$pJR!aC
%V-7CarSZ/B4ckq)+(gS6c,XS6f>SOK$6S!YdH0C^p>q(i3\7$sFP5Vpj2?:`YdsMg`9:&AO!!H/ZOahEW.^p4iUkNg9*,5!E'4?T
%EmFNqPpCl#Y'Mpc1Ail*ea:B-dRi[P+S,1e@.F!cT0.Jc>4c\*G\Nqe=fK%d,B.k2b=V]pb88?Uoe#>=I7qpl4K`c*PPpJp>]j,o
%i-Ba.):e>N=!$*8DpMIs_\`2?`nAs&=mNnpqci3Xqd2:AmEN<Rr:CCGh0>rTB<0@<V8^^B;;3m/VKWSqV)J6-LD"Wk7adpsnXfOp
%^O8_lUD5\l/]Ue$f9Zl:Z^a68:HpbHYff("B^Cd3q.QlMp3IHL`67(j]lS!XgOBuu=JILYSO;*ED$$D^M6ac3KToobD'=L+Y\fA3
%MjL+tqQY^C*jdEq.?T?`*qpkC#-Hjn"N^0OS(nm*a,$g(XM'XUE(h[>Q<@:_M,3WoaR`,R(k!b4bOceZ%mkZ_P7o'lWa:WH-+Mr!
%BrYk2m<B;K9^dNr)anoqO+fMeT-CdiebDp+B`lI%!Gu6-]a1d.?MZ*P5Vj*]:Dm3m+Gl5Y1"=kO?k?ZA=;I3Zd.jsYdKhG*]lQ=)
%h9KUpQG2`j<Luq/J-t-)*::)"Gc<JC,<LEeetO`;7Uh$B<BsJ*>gg8VdB.4o,gd1SOTZ5^dH&UX8OEP3imF5-,FsZVg3U+-mIJ?k
%NCO6GM2rd2eT9V[c9[tM[tGq6ZM!S3q8Gu\3+"T@oLJW9mE9fa__A6$RI,^q;a?8IkUI?@p[uCLiO![sG[jH4]^o\"mJ@\t[k6K=
%C^e9\k]`fOIRqiL2m?-]>5=$7]GU`01bWq<6a-k=I2_BgH#"Mr$<c][r[rI&]c]H]pApTM)nW\j[CgU!k?gFQ@B7T4:;cEqrV0+\
%\?f,gHEt#cf_]NnYRrECV9a/R.!Ep]Kq2!e5I(N`\O3Z=K[j)g_%!oRBV"h5W`UD#>3X:/f)*+,Pi$=@r\eGAXRkGp:A3e]f4[O0
%]tIRYg28!c/R]=\\N*LJT/2UFOW!OiN:ndCjH-MJcK9Cj^4\02kHEX\/!\"J?rCqAfOSLI1@KZ1m4AciQ!bK[>D`_%JR_4JIJ0=q
%s8MG.ZgupX=Z`f=>_))9fDr9@qrW/ojTb-j3B!@[KmR)'&l42a/S:J(a2<<F"V.-c0:!\Ck7q<-cb=r2GOTSCo#Z[3Q--G2X5^d<
%;:X^,>QOM1$F.(!1/0oe_\[CtYc;gVUC;KCqgq;&SIG*M*^!qQO87`'726i(fKJHk%@!t!=5h=s!3,mlnEojNOPg&qSV,P.Aa8Ed
%^#)'ClT:.kp\?Lpd^J5Rhd5Klh`TQrWEmT7O31\NMWE'W8dJOTI9h>A22o;__UgH%mhN:rh/DFB;"Gt>X=rC:q;cn!^"qK0_[V.Y
%6g^-E"EZjZA7*)4ITslX.a'JSRVt=8]rUSSTt^9lX;QB5rP8g3it\01k2kbfX&#=(T:S[OqN?D>be2/*m6:Whs6r-_hGoNWI*Grb
%:[c5/6idC<[9TctW)I"G_EZ%[&Te?bXT#hu('`8=Q&1uuf2&!Q/cLh^S9Pug00e4q(\@2mn)O`,j6cD]31HftF5tN9JBi]UiTXh'
%%$C&)kmN_icS+$Y3pGQ[LfddACD#\gBlBP#NO+VP2\.]::sF*^GLt-PLYoEcDi,WEL"320pq1%OG$Z^iZFW9MJap*^TlE8TDN(O[
%M.C+=[Y/I5o`QF.F0]\pfa%=/4$4S-`l_&<NA$Bd$]bduCPBFmd<tNO_jAEqVb@X2;!-S4fJp?aH:]O(Z[(^$G4V,so('fcX7',P
%c8ot6(@%A5RKt1Kh#,QujB(3AD+KmT$s,(!YMTnfD6^_?r)4b6h`Z*Yo:*;E_)#&+4m'g94*T&Z4p&<Vg07>o]B>%YMl@3nb.W;n
%LVL+jmRLjUr5I@.`p3GQ3YfhVG4C2@N'j?U?XNZf^7`R_I4i+rMr;m)8oTM,fCEAA@#o+4pYMKi&)5>+bEMn:nbV+slJ;h\^?>7"
%:A+IMr:ro*"2nD:NW!bGfuSWr.NMP3oiY-9RX)/W"k#9<la9f#^!3/8D'2%IbLa5<^:;Qo%_C?2UQmL5Q*:0ISGKk<GW(H0_trW^
%$II&S@k_+N^F>\U?*<h'C-MMlK9O$ZZgm($.?)$WoBKrdZfX]rGk#rK[)"JlST]&Ra)YUn&No@Uc8aS51#k8<Q&D,\[@F;KoQ).D
%X,l\TeUnAOCX'Z)%\2`QB*2F&s)mAlcsG45[9PomEP9Q9jh)X^Hs##0h5fm6^1cT-r]OUIQ[Vml<Y&M<l-NC<F,cLLG2m<$r?l!E
%r-nA'AE1^Q!kHq>X?><WDla]iMXGQ[rV#BSc*u"DZdG'7``oX2536u\7u',%S_:PsqHr^I!G/"?/hHESh[<b</p)bt/.OE;jS%#-
%H[.i&T"hf0`V*?%R8#Au.Z`VhfGqi_cGKk7hP^$:pD6SeaOdoH<^&Egc#V[1J+DOsET-QHK4BH$alfe0h`E+k>@'haG%^+lpNR:9
%=l"R:IEJ.O4Lij-1=(0=H1s^'9@1["Me)YHk93gqia-%LqZUfVN?*rf(@k*G:)%=$r<??VXcoh&**i^@[p0BXbiqL,TO'%@0D0"h
%^2t!UD;_=_]R>7:Z2Uh]f0m/a?%4P9N\G\MYd9h*5MU\Yiot+Q@3Sg-rRWjK@cfHuF1(THglnjpb(/nL"81\,#"Sc&a1;Ks`5a!l
%A(C);]IH&?E7i:Hr*YbS<M.!Q<R-qH_,AU=#OH:>K`8g<74aF$,WEGC3XX&"G98AbT=eodc^tHSebn+\b!N?,XgMKV<pOrYL>#-S
%8-4#Z\GBr]j`CF_bOlUYiQToobCqP.I'KoE4h<.>p"^f?Js-rDBd*@)k:ST^r(aN.E(q$H%j(gq^)WhSc/`7"gr2N[+"+0DFUp\N
%2Y>9D*.7^dE9HbS!IjGU*#+dU6.S!Qa61/lYP!/1&NcZBM>("VIr-b/?/Z)PX;)LpC>%P9o;d4lr8IWp@A.CfS9YoWCfn6/G0H2f
%3eC/4h*i-2=mu.BAetAoZ*D$5Gr0a`m.Fa*K?Ts]f9UQMg$W-WmD[kMXi:"e(R-@<5JHd`dRQ>$i8E]-_j<C?bF+F::Bo*Q4PVN`
%A,S1;\3,#;\lPS.QDd#g$:cj:'Y"*12[FY7B"iN&rHW`uqhktQF4F8OGP2ANJ-7duPC5c!SRb+")uKHT_<&6p][,B07cEm4,o<X-
%HN?6gN@NaeY(]1+XglDmGMf@'Wj.HEAmoQ@DX?OnV_hD=2p:B<`L#>1HI>3eY<Up^0<3^cZfX80Pbrg%,$2DBIod&WN>Kh]&UVOo
%L6d*tXV\[Yf*@)aj6dlX\q4p*q41]c%=0R,K.U-[_RKJt@(93UYe#jGY0Hq9hS$a</e&7SBWRH,c5J@%a7MH=nF"J#n_;@F>j]W8
%7;#,TVV!0??bM6TXsePqIBt@2GR[\Q0^#?QO=q[T!-<PN<MZE^R!rs:Hs_-FD2('_Rfc^t*-0#@V_5AG+2hl*X.&qbrGX!r;h!QE
%mk-4.n31uMDk=8b@Z;q9Xj2Qi4*'Rk]NuUdfBs)'DM<f!\lVAd>KX[/HjVp@<&7M4]\Di;4.it5qq+5%"(k3jAG+L)ZYnaV=0mXG
%Ajpq8+'!o=)Wh`NJ/ln&=O=68JZa74Qp6)I]]XHEG+KIEX-o70AL_&R0&T.OO1j)I:QFs7kt1p.=HD__(^Y@?CHm4!#`Ns\=0hgK
%]7YA7@-Htlhf#kD]t^%d\bkJY5$\,62a0(l#enub[a1Ec8Ns>fX(MYJOq,O;!I.s)?5--r?^;'=&&XUf)a0P_70jjs2]RFXhH7Ma
%@DSf-m>q7gkH2(Sm(<1Lo:XMZaW_lTj]A7f=_*A!fqRNBlj(2Ggq<QlrhGQ<gh<kY\%@XVBVOhl0S6'IBsW&LIp?,*H0a$^\FoB>
%B.F=';O:nOrSmtEWaaOdcJ6C;aYl^E7bZfkn)W5]PsW3SV<cCX@"pdKc55d!IF+o?O)e<;lc[.]l'q5FK\^YBU`:b7Y[eH3^:p(X
%*YgBTAuiS5^JI=rk\tQ<?s95l:%kNjpW\-[j3a.W=<j8U&(gQaQG2GJ^f[oYLNEi0TT)0;&8BI>4Pn>T]ap0Sm@M#Drc$Th7KPAT
%UES9N%S/u'T7T%00&1MPY?sBsKBP<$m$BqW[&5=JC;+$@+B>PUD[sr@^p7mE$4FitGh9-[QL_Y3c?0j+mbBYS[m/0EU`g'QHerMp
%jABQc[).HV(\R]Oj3&)C1^sk@$d#%40rfW,h9@dkAm^"7jMrNr.0U6k9&7*drIYp;8RO.;Xqa]uhQHQ>'2<SSe`]rn]b>hK]XTLT
%`&i(UB@G629m8\RpsEEaP`^UrQcb)14]gOG-s5:W^>4iId,SrW#2=C;n8N`Jn=g]o:#J=N]:[465.TjT9344L[n::+AP,U?B0I-V
%[CZt=oM<kr>ORE2J+5GJ^+OW9-_&sAGc#%k`)i7_fg[kN`4P&4XMsP[`nHb<3Np/<@cY:/Hnd?.E*V4$OgBW&3%P.V<n7<6*\2B6
%n6gUH)5fN,mQ:d3]'aIt_ED'$nBp%&Z^b71XI"k>K8Xq*f^&tss-kf&.sF0?7)!s;\F_#Lhd<OMb'38i4uU2fW8.Vii6Bq5L0GH&
%li3RT&\WDS:!(RWZ2=MJ%._*hG,n`b@OG?a?5DuH7O/;`;1"[8Rr.[D.MR=p1Uq'LILUP^`HYL:eRV!UJ$*4G4s!a_o`:+1#NeTi
%X4?5A;_+,JcIX-C.R,08p\W_Rp^?!ST(*?Q=2HE,Q@G.U&AMY7s7HH<0R\q0"'ouPFmn[Xs"%&d/24V9V^+jdgRqnpHF&ge<]0;n
%$GH9)oi()R-E<bO%'8s</%i!kZ,Z.WH>hC>oQ3J8SDs"fBCS4TJ,\u1/jbqBih$JN'C`RRpb)R:]5D-GDu>.#r(c`o!a#,Dr1Wr%
%%WiBaQ[])YJ,>eA"-)%3?hi5*I/4=i5;bg[p9d\'FKPHGHjRe=rdl9kcsmMHd\f8+7/qmH7N^]8i0:nMj$/+'pdfc3NY7/5.?K^'
%8,Oo%6k_#_l*!."]U5fG+l[<DqZ"V65<9t*d.2u$f.maVJ)]>T/M$>\KBN#c*S1;n5Ra$G@<iW;0FZ9Mn:Q<&?(f)Sb`&]Og9MT`
%)96b!gpc6EctHY=lM?g%qnoS.*X(,1A3;*@\CJZ&VIMllmpupb[Pbr41;7VZf]9gs3S7l[#fjn2pnYh'JIcSL(*&QOE3!cd1a-tk
%E?d<o2?VXrl2ckT161C?0I89jX2&n+"%HN#As5t\8#5*5%6&795PW_LJI8aYQB,5UoSaOK^eqP0d9U)%LG&Z=L(-5L/Y(LL0-07P
%gW-K8:,c[0\1%[(dP3;mL2U2(WGCg;?DF!m3*F]qlklt8jZ".$[conJ_h(pY)i_Wh&LH'H!)$_#$S*&H\&'iO1UO_Y$iq?\Bt,&=
%*!;\g"FW6>dkkI6AR^jg0g(6L0hqS7(5Gr>Z3g3Vl?]>F_emH`ALl/[jnNfo0U6@f_76YmqpA[d4THD^5]Eca'l\ZKpIti,E!l5g
%X^24!)$HCbo^7(Y'Hm-3[!r`jJ3Ca%RuC:p!0dR)E3$+iVHi$bO0PCj^^o$u*H;u0k`QWq.[CdCN=d)V2][XkI)H<\q*aQ^+(W;k
%S'%/"//TTgU2Xk4R#a3M3hD.5Y/?tT7>0!C^'R\opkTOAj,)D76E!N5!q3S7#CJS8WGp%2AVV?s//KKkXJmC3V:eu+7.a3U;D(Cs
%+Jb@H0!Ue%phE_BM(0$*![j`24VfItQm,"U`E0u1"2Icf<?uN-![hBPA;W?4a=f('(J>)TYF!1;aV;"3OC,0-0*Be=INeuJjZ,_I
%:<%??[ZSu<3m^Ij"a7oZ@@PmPFA11niLW_\Z3@B-!SCp/*bspbKRmBF%tu^=!>E(=5X8h(0Ra4jS'TRcJ9s*gp'G)!*TGuqY"c>*
%PIbO[=E\+k[P#YKJeR=@J=_:J'JNsG*lTHJ&!uM7ohbA"=>-n,juM@90c#&lpDGeLE,_lb"R^Q0aadlFOe7=knuP)m(q$e&kOX'h
%8s&RZ;L,W!C(9B<)\-@G2glnhC<I'5\k1]Z,N&b2W/0"]D+A7mf)r'M@*.pI?\5;)]K+FW.b4"h-e'YEZFV,$f^O<I2s2$h08<)j
%2dN4H!$2Ehk9ef4=_K@*NA&3bE.UAgA!dJ0(gt9YM\l///g*J!kb,0LGUifN:?q!IQ7HB$q4L%C#m#`:,1a,L<sTO%&DXGm$VEEh
%HA$;@V'+6R>S_S*AIAPeK__#I4kAi$'>uFZRC^c/!=0\eMc.e8']J:/Fp(CpO]DHO!>F!0,.:(=#-]X.X%c'gY?NEnF9=HTKSp)5
%_75*AJ5"s'#FD7*!B_Vt_Z>'r6O3i2@N"5>S56ppVJ_;4JdpqdNp%j`"L'Jp!cH'!Tcd/O0<f\$hddW*_.1#$'4HO)@1)TVYYe<^
%-t7=cBCes:kVc+Q0M53`TST7ALWLS1@?O[BJM2jk*McKab6D;6%>/1:'#c_Uh-nAU?Ur:.#G+7^KOY+>VZSET*H@;tUMou1VncrP
%/c\:LiKIm];q86D0@L;R?"aC[_\Q`">bDn+FOAJJa9r&R9Ga(J]b+S;C`[846,_5Sh=)G&!kXu#"+;>=l%'qt!t*D)!SkR&/7^Vk
%2^#ed@m+@-<(2ft!L"]AB[1WL7Y9YE@mQ;s(`q_e_IKIr4IZq$H\0'7;k@P>g`#rOS$<"aR\^+_&4PR'8Pt?\JL>+eQ#9+oFs,r<
%K-2:'EBu<uPA/_P9sBl$6Xf/Lbs"JP3<CQl%0`&<=jHe-`W7kT;Q+/qJrJ+EKme24Ur"+&_0@bY&s_)PMb#B"HPtW(qgLfSj6J>(
%-l`l#Sj)he3m]_1*[3Lrfg1MkCp=ng&m;:OS<\Y+Vh$=KRa;U#%;p2\@6_PQqm[__e_.55`1_"d71=fCF'-_A,;jUOJ"P:\_2CCj
%YrZj*,E*MU.P(s_@-Q+RZ-`[S.0Wpb"'@D-:^]+4)t\5?ED3//CUbe^9HEL+?W[_sm5#*#1-od3_?L$G@LLPN0L9([@%SZ2(rB_O
%Kn.)f^r?a!/!fX359Ng])f1lK,S_Am,HNGc70pa63"3`I3`mrc'Y%\b`+oE/"D#)'-ur!3)@NDYDqDcI!TM&h8_-.jA^S(!&t6d6
%VCmV?(+^(7#UucXg)ik#?Gd5jC^*K;2XNWUQ"**KR(PZ,'-h@&<OrCgd`@\3'+T#C)4cb$$5A#__.Vg'^-F';)]h^]kan<h'8u-h
%c\Y'mH%s%A#81(pjcd+^dH$ue-'e^U>hFY>DRiG&/<e0k7-=kic>hO?es1@YZXgetN%Xo_HA"?j)-mf^mn4-UkFfaUAQkBB$H"+$
%"R+Q!b\")\9,mrDUTl4HM'E>'`&jog3#Y(e0usYiR=JoI*\RRB:XfH]R<TbW\jO,C1t%I&Yo:02-64uVJ!ATLZ#*QaFA6k[^^2dL
%c\1,)_.8]"COf+;F`k`6Uk/[PYSk)B&5Y!+aT`&UnkjN&WBdiMmVG"4_5$3Hfk@^"X+f+*D8dl#ZU'TRr8`5CW5#<1+EhRr.X-+D
%*<h(HPX^=7,>HVf_<RgKTZ'DB.'Z8P8l"^h<&o;Li'G^d&*Un)3M,/5%eg$G.?OEa=Y>fcp'pTf^o*A:9lb_H!1MCT1^/nJ`3?fo
%04K7gVM!G*Lso1MTM!$Ib@T1Kk^j%[cX^NiW-Zh,+_X00LnP%KW"oTW!jOam(X&8_-'gfSAHWL*"aDX$TjVYW&Atfp6ia=C\nNY;
%&o:r\19;P=?Mlkjpo$L8ffThU`fN%9Gs!)Y]IoorSgAB.E+(-C-FO(u,&(:k5MmTYQq1(5Cc[Ki1keO'I:giT6/A!b'KGZ./;a^j
%<o<F=,r(.J"h[Gp)kc,Bk*,?uEe.u,$!?W9^/CaH,*+5),-'s_63tMb+1l23K$bYSIN42FWV9AI0340sB,I\saFB0AXm0T>ME,]J
%A+^kQXYC_n"+\cf!>K5s&5k4m)k.Kqp/S_WO,6"c@A&FoZskO45'5?/M2=S:71'&eb=SBa`P`t26LJ)hM\-=W,T;?P7P_qmf-@Te
%R(.KhTkVNtRP5<g[SUd3Kn#oCWGn949EdL=]dBht\'idfN<FtiLeZmU8.$c21PlL3*>Dpk.mcZCiemA*/9XHU8^guXB$p]VUn6Qp
%.,n+8'J)Z**>+;:$X9o;'G#oU2+[sC=,'/Q(:uZ5Hro)I71Z&ZiG+7Q+<LtYCU$c7S2!J08>f20;=*#9b"QdUL!m:B=#!a8d[uIu
%W9ST4XpodCTF*39!cZSG27-J.8+(8jjBY>,^5,?Np-@\.$g#]hK5e:o/N,7+V`_CT<:;t.=P1lB[FhL9@KEb0UBV1K:@`O77Mfkm
%2PrkJ_G[Hf,ubI\B2M2E[c*sr7r7Ok&J?u/=`0qt:1L-b(kl1')cI3h`5ZI)^PNEN.*<3-[NZ]%`aa-a#ogj<EYMc9%;Ia-'jKN'
%YO-&/I4dii[UR=9fU!flH+*JmD%ldM;'[`:+OlLBF>H<icIQH+6q$K[mCJ0*Om7kBIuuB_j3Ssi#p]HpN[@5U;&"0>EM,"!'lY9r
%GZke.ZOGAWUQCa["(TB2U4Tthb2JAbR-ckj)]6Ue<Hg/-W()5I*-R=ScR:oVHDtm$Qebes,J+r^NL\kXD,uW$iEi"2Q,-3TgY&MD
%-r;8(FgbH*h@XY=XVa"6pK&o=3(BR08kLX#g/L\_5oO'%BL8uN.+Db;_R-X<0SEhf^HiGl,*$.*fn:R-U)K(b=@SaH*58-,;/B)A
%kA_32<NKt,e(-A*Y`WAr/+Fp".k=IFBi-D>.`M&B\<a%[kT'L-]Z?1Ye0p_onLNQTko(s92sERUd5f1p+E1W+Z1(:DfOr62Mhh[C
%4jFMW%UCUUJUC1K0Tr>%d5i/%<'2WV@OYS9-*G?"RMu3*4ZO*&ob<`g6rPB`Rc==7_lg!E8`<f\<KjItBH4su72%\W*:5Td*L#Y)
%7>@ASaYcLt=9Ob_2_:]B*,?<r1NOg3Ua+bX%UH,1GT>aUDr!.U3"d;.oPqrWFoLFRH5%[`#eVPE<B@^oEMQnM3lE3?-oqqFrhC<"
%F?uS>3hgs(%Z/P'\na"-3,fL;8uN>fq">m=`Pcs?,$Yf;KSZ:]1=-i>'`EmW<MC=-Hi^"\P+m:A"r)c0FI*XEVP6-o&\o%,=a;qO
%1_&=OnI8A1%uY=oe@8Y/+XQ,`I+\Q&6A4,F$?ofXE3/l0Mc\O?rhq)a0J+u<^hBhB[c/G89Q-SanH?X0Uq@#04,<GCh@^bn`"3-b
%%L+tB'[sM<WH1IkMh2u&L9<b>$.`^:!_BQ:ml"!)i[lCJ_t(m27H_T67O7tRfPb`VW=jO$1JQh&!'49?=]%[&ObulE7@-X1F8/(H
%T]WS/3?p:'2M#!]*"eiRN[=RWn1Q=gge\'L4?@h2_eco36:=Bf$qcUI29Mm2'Wa#K6&(%?JS*gdZ,PG<ona\sX@&>_%be'2Z#pJi
%gQA;]7494;MCq\$6]-4"%qB6)CD8.X9nB-S'I"2-X8=f5<8ZWW'9n1pfH7?r!);O2MQr19iYXdi+a&l5(g[U;;3+*kBXHuFKt)bq
%^.6j,i*0<n5A2c3q#c%#9*ekU,<5m;Asda`^[68V/3l_[(ACK<qm#@tR<3S,\)7B+1mpo7o"KmX!&nD\<K44c,YZR]EDX-<+uP2B
%aRs]SkT3)M74T@S,qf'8d1ht4X+V0__V%1)aVC100@(E'nNGC8aC(%M5^4p<.bj1^=b<VHA5m!pp_KDGZiYf"Nfq?n9ka)Ok`8Ge
%@#D3S[!$PZ7g^+PSH-2#>!,_"6S1IZ-D-8S"%gIj<2a[iS"cAD=G?UQ6LfRsfL(k?<XL\J.%J8^VBJf4Q5K"MAKZ.Am^(=$2oW?d
%\i#t9AP]eS+uXarf]5)6?!,@J-HBbHH@-/J`]EHP@]SOH/-eNDB4LcD@o&2S-$P;kY:2anD-k*KabHH5ds3^,XZgD"@2I"ii$t0h
%;?;*cKQio]!t%EEARe*jN%4un<dCg%.5Olm\JSX<Ec`j<O>9W\hmS,FjU-C(Ape`89@2nnS*W.*Y`":NQKU_(nX_JDHYmpdTJaN\
%&s<_/a_qi7'+u9&N-n'(@LU3dU/X)f?^M.2==bI4cI"CAFC9`m-D="aD'`E6C=d;s9SZH3J3>htQh1`UYGPEg2Mc]<n]39tEWQY_
%!e]*+iAF1lqXH-j+iZnp=As0OJOJ%j5XdFb"Z#n+:BU?#JXmTRiXD@qP-P8J:Z-TbiEBoW\a`\29pR'3JuQ^'"LR1XFMJcc8lQQe
%Jq55)8l2.6Yo4rn6)#.WIL>(H8qn*COr"_LA#j,0&qVd@a`IrVJ[!6/8grgYC))[XplVF@[tY`d"?JHODT''!/b/!-#.&kP0g.iP
%RPl]N/?rhpH6sn>6pK9:rgFB_ct)\&H6fEH&-L7>`X78$Xc=crO+a*]HJVP2,G)X<3tb=ULdJ.=I$(AHTpBJo1)[!VdNXk183LMG
%Z[`hsX0]teB`\Z:H_IKW1lk5=!`A`QchMSaZMZ9^`JT22c"5QRA[5'#DVPhO!P7m@(<>rEjb6F;'JuWH9Q$\c)V0QBDZhKCOt'B1
%iLko=eqMJQ#b'eX\eQ-Nkf!*n<=O`cJ)$Ao*d"tQ7b8DjhY/:!*6SouJhD4u)\s[7O<=T.N*1bgKt1X&(ub'd]>VQ'T%(32!Fm:F
%]:Pme3RHhaE$D`GTZIuf&gU@GTii4s1Y="^>r'<ra_+Pp0l9Qt&nAb1$e12m;:cH0!M-g%$&>"f]Kh$Y@I%&;gQTJu,Ub@+P>[:Z
%FEGIS>(JAlai8FJXQtcI3fgEod!+&4^rI3@qRsJ!'hQRaUC>)JOnjp?#iHJ"Z'2H7;H!;jdkYUqat,g(&KMn_@%bWm.2tT3M6X5/
%[rb54?e<9.2FaTSgE)hXM(3ZM-l@O01l`nF"e,gNJ.sVi,UqW7&Lq`_K]KR%6k_R/.&/4?4SE<iac0bE_Vmd@@$*eg]1$BU(p5d4
%Ik%F3l,_AOWY90]XY-L;0Ik.<,UMT8L;B'd6NOTJj"NSB8f1Y!*'4ECA0;pJd1rmR1G/=s9FM5pOV)GNQ3+G!c[_8EOsVq],.So>
%SV&(47M'Dmni'[R6`]HT4B<8!!SpC'hZU[WAB<P*j:NPnJ^-A$LjWe?BEC][m:fJ##IW):*4B$u@UWrt"5O`n'!5U]1tlLB>+J1g
%)_L%\B]2VuCsiEd#?VZ$Rk'%I>W,DPn`k[FkHbKUH*/<Q/?C&=Odo"@@BlBbanR6RRDUqOJI4r<X`,-tdh*'f6j.btkF8!7-qVBC
%Xtd9a1fYHVjDM18'jJp?DUiUgGEI/F9tI/>iHTV^"J2ji5t#ba2miFa-"bXU8K?!q^m)j=ANSCP\@/V@F]W0Cd;b%E;n)Q`b!f)X
%FulRg+cV!9SR?6k9;dU$(qSOD%"VN$G%c((71^33#_<Xt/Eo<+POr[EO+g0tVWip$UbbIn!aJCPgm#*u-80.`ne3^4Kuh:H^9.#.
%Z.35R.%Nf\TPb+oe%k#q[*mY$<Er>4OgE!3kbHRK(C#6N$5GZ.E5q\0dcE._Hb>BO63OtE>(+&d`$U,CLY.0T(-V4&dCA#n)c&P=
%a#U]Kk7G,lfs-69'_^p2h2h_%c:d(<J5=oWfJ=,%!kQM'Fh5#?6OM>c5)5([L^RQoM^&pX1MlZ2G9"c@<jn#:jC'cFY,dK=L;DKC
%kd^k#:B6*aB6>XJ/UW[RC/Do[n1NJHjjD_.l[cO%!p:9TETl[An,j8uU*pR"'_nOQdR%NP#VSh:3lGGQOf1PbNabf:jEd]V)l1>O
%d-?&oc/M,BQ@'n=AVn$#g[#B0;=^CAb:HJKU>ZQ[m0P0B:2.PO%9LoCN6,KYfS))Hj&01j&j'7g1;l[WN[_uj=<M%0POV&b&FXc_
%>8M=E!fLel/C2gHTk]kGUdA+JN>8qT?EE'Z9`Q>r".9Q#d(5@Q^h6;B@=+L1$:>K:MiA676*b7%ctV^XV3j&`Ad1b`UsVQMaEM6R
%F[WbjQJ(0CEJ[nqYn[q,C6caP'U`kHSOk&%+\9Qh'U7o3<[3eegZHA]'Pp%388NqdINdb[CK9=CC"()WVqA^7[iAh4PEAOA1qFQm
%iBCm<OS8(H\Od35^>INSjE8u"E)_)pS,/"IOY22/IAGnrLag<\&E:p\@TPr'^"?aJV0)>T<>gP0PgB0Uli;%nLFmm_i_i2dP;hS@
%nu7n9gZ3N\RNgP?2mZI8^eS,;/GR)6^rb=UV.,X3'J?)RHkb1p1.d'_qP'"f>0>kRYB308:TH'6e`t$0QMjM"Nj,nCs&IRFi[>2J
%.Nh)S:f4snFuu^iNnncMbs`jmY#sj[B4!A'Pc0+A7>U/Y@VU]!K49ulJI'5<OV%t0iJ;RJKLK@[ZH5$nL*;sYH5%asfOXR+(8ki'
%/IX<F?El65\g\2l>AA7L1$<'U8$VrU?k5EBdp3h>_Pe#'"hO&VYp7+*-S-Z3->^*OAgeFK/WRr._Z;8+)7ZD0#.A1u2J'G@#T2OU
%[A:_%84-3Cc=B%s?6f`XOP:Io1WbCF`#9>]UWbA]`lWc/j.+XJZ:+dYcMTGOpLFPnMYeg,6P_%kXqYER=Me/@]*'1!Us(SPE%#>_
%7*eg7h%a6ni/&.UJ=jhj#a@/Zgna-rV%l!6i'l^K(jZpB[o(X50]Qa+rp[R+>6mYFMYMLX$8.*g,KV::,%J]/7h.@+32V559WTFn
%7[SsA(+Mg$j4j+O.WKE]"=R[Gn\\p(-ko\uB"FW`dN`?l;1e@LTKX\u)9l7(30*hcj=W(j'W-sn#Qq`::$"O?:3+Z\%^4I<.QfT:
%i2/oO:>&T[*=&`d*AD8*W!CALjdd2Z%E+LOOa_Bs*O]c9^-s>tduP2rD9>oCaA9YnRq[W4=7K2B'.qYWV+/15Aq-3FJSLCOZmB<o
%PCoEA\YsH!_Ca@ASTPLWbDRA5SsGb^UIK;%7Hu2R@2p>m`KHeu5o;#,`M+Cm+WPE.S&+b")1lh0*_>>TKtrM>aY3t#>JQ`)a^@X^
%&M0B$^0KpU^e$rQ'o0,*iOktdB":_#l=r(VA&t`\a5S3E7<NuP,ngmf)*h!L*I>B>([9?K6EeFtC34)R3Q_VgiVI40a=M"_d`m0p
%P'E<4`J:GC("n3t4rpFGcOrs<n*jF`4T%X1c;?!+1du;lO%'VeO9J*La"\E_9s/2e>XBOm)RLu/?@M'qOp(r.SfX/H^c4NTF*XGQ
%D>D6hOMpl5*_KC1A<Hak!5n;KoIFJ>##$`Q/>5NFC$I=WR"7'*N\1.e)R*(heW4;E?iabglPk8q#-N>k0=MaB(ffl&,!\ZKEVc?I
%>]7LqH&WSCo@,$lW?Lj%Z6mA;L<S\b%!G(<eY9P!F;XeC%@\?dO@Mc3q:K3qI:nJ?*[a'B+p]UAb>_"9F&*h*E>=olEB^3F?L^'Y
%,(Lakq)U`h#-Pg^-fo>OiWYp-l-7)i'R510K:eaGQl@9UkY6sV%="8rj)Pf(IU@CF(6]-o&'Zq["NStgP+jV$L2l_r]_%Ad[[>/Y
%4W8Ds0ca2m.?ba@>eJBK^i\06Pbo(kg=i-8p2i]<;J,A"C"h'IdduN"e)iV:MAWa;d>^K8Lj-o6"n$mC4JESJP0`1k<tn.j$M#L?
%*.5AL9d]\(3#5%&+5aX(FBBLo\:B10!#^>@i!<0F)1e4GD4*-G'0Uq=k510,$(n>NBub+!aWtW6"SL/Mp4N^V;0HE4iR*QufWlt(
%$#8!bnWqqIW#)b$.BBN-qcR1S'jIHsYWroa`JY''!T$(MPNA9#?5PST=9AuCG[`6#j'nr3?>EC*1ljJ0YmnSqFu7RI1.B3hG_:n2
%lB\B<@8h%McDu:9V:`Z'>&&(OOZmR_n*sM;1g'=mn:ith>MKqZ6TK%oJnJ6#4D`i;3t?Z6^skjVbTMYhD95XsZC"c-#cs5Z0-h""
%8$K,U$DIf:1,hlG0MsgB/>-?6jMt1/I$&hoT\R=o4ba"[kKr<nJ/OPUH,.Dcgd$JWnhXEpMM$\8<BM7&N($m1@MNRnO)jGe'?%bR
%"<?$S0mq1OE0[TULd--#R`^j9#ZfE6ScE2@hnqQ@cg9DZLUM+S,T`i3l)"e@W#"9qSNb!%PVHRH(j(BY7OHLKl)^J'Nrt^@,Aq\p
%FVF0RX<C6./s*_9Y@j@h.e)rEgiZS:n`W0Y;2GXL**4na`RZWL>.X.%AEk>I8mT6N%-r5*kOoNO1g5H0i63/^AqrF=_Ef6W):ACh
%7`1@cj/<@m9s/9T1(EG]i')6GYl"272Jb2:7=r=m$rb2DKnY:S;_h>u<M5VoOKnG/ffUd@l7-1F*.i)3DP&UMbZjX$MT\Lu3(EQ.
%"Q..E8=tngRm]+=&**5#7p5ucSRk;!%i!,2d$aVBl0D6#d#Q&O8KA8C?,FJ6+lgW;pqZC'?"l27U9k&;LO`$\GeH/V`Q/V(bYWBj
%-I^\S\q@'4:t2DOUF7b=P'(Wnld]qY]cH>&LjjC:50]qh!LSaZS%Y7j4@"uT!ifXE!n0tGeC`i$<=VHmdu;"O.T65T/m*ThA0>ik
%/EgHMf93q6f0G[)-AqtWZN=4V"^Q(S2i:8f8Y`Y/k[B&nXQ@M+Z7&H)A$_.(-$oMTVJKd?@0WuJM9I#!]hE=OOgS[$NLBnn:b4VC
%E^Z?iAFX)kYE#m"fIk)h#P3a]!tl9#F^:g7Tq,SI7j\FOk60f3#/;iXNJ19d$cm>(UW/'Q1fW7knoGG7C_7>QK8GV3J8Yb@C34;_
%Bd-gnmYX`A@FUF2Er+d,MhQmN/Gpq7)Td5fjZEs:3THLCN\#$l>Rh'!7Jqli,-#T)pPa.Fn3%LGA1i<m&YU?</-Mu#l-Fkf@RN1e
%0!rT=H\m%AB+0&PiZS[k5&PJ,dV3`mkeM&SO6WEtaPi"J.!!L?6AnAlU.?2\2!p-#+AFK;'8WY#@/Ed+?,RpHSR]T@kD&G]76Eq:
%)WDA<-jL070BjX@9^\&@9:KuO5t>rUDpD:W!OgYE3=2jqR92/da$gn3#WUWF?aLp``W?Qq;.<^#\>gV%fJ8Pu1a*@JWWYR420!D_
%@>eb2;S3VVE5l'4K^&"<^FbPqRWaYY4,"$N%>qLOp+4G?!0uK#f*_<,_sjINOi7>p+bLt-`/cN)Ki`">g^3'c```gIh[qfOZ214N
%A+\\*;NaG>)"NWn.5q!n.'"&]?$[d4b"4'qD"98t(FsKOe.A"0(2%2S"HU,W2@6<i(ho#OFJ(Q*Q5+\sCh"$m;rUhgM;[\##B);*
%P6Kof7>>#Wg@2Y@XKpLZ_Bu;P`J0O'N]Z6F18k>\!.GJXA9M+=.IcjnA=jG?aK^jJ8+.Jf`OW5H"DBj1-&Tr6`!I`k#t\WbEsop=
%&eIXG+mTHGPkPHq1MoW]8We^S&6^^9L(?*(aV]aU/7#p'F7<A*Cgc(^`s?M1CG0`t2_HD4XhI'6kdr3O(*%VZ8VIDe(Xf[ta2/p6
%VY4m><2gg=.O=p%h,3-j*!q057qs%;3+<:cDFofMaFEG7ON>f]-c_gXTR&_,o(/e(OkE50Oae+n9B:cF6ksu_.e,r6>th&Vmh_1.
%j<OBFI,mu@bRo,j0agFABb.C90!&GQ/bX5hk8K4Fgr&-gDiQ,0jBK[q,'(PS?nnGjcJEjuJKg^mLahTcbElsAS5G6\:rOI\&u=k@
%i>>!'HDG3gRLnJE_]%Mh+:DaNM0/6<3Ka!paS2?,/Lc^L850Xa=&al>E@=UTDQ8JDoac^R''^j)#H<#!%NJ&g(.X]8V&+o\']g0e
%X+UuE,rhjBHId&pi0UI)3Cr9OMW3bpRN>"K:d]-#)#tH<j#=[AhVPi]==&4N[*(n)o3=(u5\XSA*`Up]]3d5[Ms]a:r5.Y`-%<+E
%5`oDk:0H_GW[D;=AZDB(_2]gRFGZ#Dom^u+oG)mrFSZok_mfOJs.^R:HE;`l"Cq=Z,/N&^]hC,gV_8_mUBd(lk4\,[K"4$U\_s^t
%40X`!2Q*`(N2+kQ&l*_PK1ZTRGj]"4_<$DkfBEYQ.hpJ`(^:cs`qHcNLW:M$^j<rOT"6+#,:@>&icKr:\7Dio'RRB'E7n]::LCV6
%(&5J*@:8V7QA91t(QTBL"7$k8Hhtn)o]m'fCE"Wcfth6\Ys!6g@ih/KoJ);"?i1`GV_<OYUXKuD`j)L9+H+(8MBF^h;O0W2_.a9#
%j62`(OE"t!@`Z3"g2b8*T'6V,1WQ:BM9P1t?5/g:FM04\F&L/ta=KX*Pt#B=Q*NBTYTHf07qN@)[QlTP`+_jiZVjD",[%pRZ:m"q
%=3<kOX:J6q8nOTi/!eBr93Em82.t'`afNriQ:tn<V(A&t>e(?IV2Xg+X"!Z([.TYlFS^m;3&l=\A\`<NWlhhlb.>_T1jrqH0fiTW
%AK75S\h]=A='o+#<4WF[3&l>GAR7E7Q":r+^<SKT>fo[^\FfGtb@3ijW\*g?C$R@WT9cqF1:r?VCG$"(5?66Fp63tU?02tng<.UO
%la4'd--YVR0D!IfemHG5kpnGX98c,b2lOR:<0FNo1C$+lem[\h9?KlN,LktN!mRfId["QY`KIMt1Wt<UAX\;s:KaWa8#Irhbjm,m
%Z"B#$V(:0A&^,8"RjB`[oLi;lRCP"gd:O/@C!/E@n4?ioR7F/,h97iO>J++SSYge@cu>rk3/a_N\e<;?_U90=Ahlq^``ZIVrIpcH
%I8DA*[OooCEu*1O>rcOU0%1PW`j+c$3jZb!>LZfK3+Z6*3BCGSB?"*.da%2NUb2#Y<ctG5cGT>>i2Y*C1JM$HR7!ic.mJ+11M,rd
%Nl7cqrlgM4[.U&2FSZ?k*&C/h".J[WdT1q]V,Poqk)`0g9$eR.93Vdm\"0rGZiE-m4_P>KV6("T^eRfA>(ghC<J;2)?7G2,F!*8U
%AS>\9['cT=LqLJ`1sUE\4u<MidoM8?&gV%JB\mIW.a]e,;q?ff_'pm'o=e/RMO$V.<JtHtT<;KWSlG!4dC=/lRaK%'Bl@2'TQ8Jo
%m5HREc$YbaUbm-^g7m#s*n-F?k+/D$/Bp.I=^%8t1=?r)(3f0qb=bJSQ*.nZO%rngRc."EA=C>0>@q'oRADDj/T-):QC?s+PEa%`
%foSg1DH^;,VCOXNg,X#lBjNi;d:pUFg9T0i3aL]Y*h0V1Zrf>"nS+*sRBlat+RsOWW5[\Z-)eeREloTU4?@<sC2p_PZ4OFV92AKD
%>3n=^0l"Oo.EbRETqs81/Q0D_QDEZjBo>m\k`fYX).dLi;tK3PV5\al.>q,_SAUTQWEB7t/Pn$0Ge+O<9]%:W<3s/2>Gdi@Kli$K
%H#224eO#Ls.on6uBY&67,2"ea_.lGag61"QA>Uq^c),U*ZINd1V_)/uUXPO3AoB>.nS7%YUaoe(nXZh5Fb0i7K.:+"[bn<t2$\ud
%<jriaU6P>QL!,[__R3dPPVoV_k]Bh-`P0gO\`U_B.pWN3R'P;Ni5q56Y1#SP(fUp5gXDJ+k%o[W"gRmC05X9s*hB_f2T))o/@Kf:
%P-Qc"O%rgrRr:@:(<>PFg2uG]q,TLUJS]=_T<:Sj8E39E,b%<%/!J618m*R3De`4:b2t5=[)K=29dFSdCqd5L=YQ=(T!i1<^fe7C
%fmMbMZ>?u%GKReUI&EUFF>cLW[Wo7%-q[W+>@\GE/>17E`G%tYMt_G[MJ.o<D^ikCMo<JSKs[W)SlDPnH$%bLg5N@[jg5n:.19ku
%N28&(/TQ3d("F'H9$4HnXDH?#f&i7HQIZfX];^['1W!%UfB.e9("a;C:0D%14E!qsA=H)e/$ghogN8.X`Ja#GV7$P?Uaif)`hk;r
%c(i`'gh*K`QJCW!dh^c*H/5IBDMrq@/%dI$11f]eVQt<_[fp]G/AF@I?2;:IgqE)6XN\r#->dU;OUIV\3k*K(WTnQrfQ7k>`Ro8i
%\p88;.c!3HD4PQfYgQS;Ag9!HXmR,j1ET`=>GN=;/EDec;j[(;_'t:fj5BRk]O>pYK&/3VDj9n6`tPG1HK3rUA\EA2g;;]UFNW%g
%S5#KY\2QLgC!1k0T9Qe"[n&e[=lPoLYL=6^(=-epQMJPJkmMq"kgZHCO[7D3qrZ;jb'i<Y;]#Ao_<FR@j4Num^N"AlZJW=`["Z7t
%*i1Fdc%FI\s(8K6QN'E0),pSUgBWrCa6(l?^enC50*BM".V0cB?92XHE)q$oMh0pPeE+JcE8#p%@Vj2Mi4SHa7DWtclE]?\nT9K$
%EGYL"i.Ats'aJA=/7j*GO[YhH5WC+qV_&M+3QYunKStfOP\%]l&Naj'n51iV#Ls>$[QqtBikfe1=$p6FS11Lp$Ss&6*H<'h^61I5
%r:ID8=^e,.-B?lO^7Mk(N)E[j(J\,URc7dub,XG/VgkVI3+o=gW@Z?-S?fR_ZZ=dbikg=C<F9!UYph2^ZYbf4`]3;+PZ>_+9r>$K
%c?_6_V/[QI[amFm6n,0r1X8nL)ooeZ.ulEbUocZ&ngJ)"E<14)]&TfaY#ZV,p?T-,7<g+aol8IuWU#VOY"DoLS<luRK:H5@FB-D9
%pR&5r3I?g$/!5b;l"Z@P`m[p4k9rX=HK;a)PSM:DQ)(KQcIPspWoP@WQEDk9_J/khjPh2.]%Z4M!$Giqo&419(+hKAS%J=m=L$Yt
%CEZ`fk_e<k;GFO(`3>B\1i2)?neeZ_5Ok2.D)l>Zi>D2dM1User!3?C0J\P\+Ko&'`7KnWhB;?n\s/UnBF^jRO@$idWgIMY@&f&,
%lb;VT8+OIC.<@bAWA^&uEA5q#Zd\.F/5W+:j'@BchR*^:gED`AV$)0V+U>oMSu=tFQ8c63%^R57a5q[_CisT!OGJ`"=1Ep$nN2$?
%O91Y-5U4!6Do%l,QGm@]^i@=TAf"09+9@e%e3l#"C^M^OhK0Gd!Fs9f>=_'K#&lYGKFR^fGc_rnnfB\lXq<hMkNIdjH!lYoRfR+I
%i,l[9=3"tY0'iD?Lq1^NI#-g5EK'/)QjJC1"M,gGUkKR(U#!+eFZbScSIl*uW%gaTg4U7".a\iL'F7S6d,2YH';!.+Y00;I_Sd55
%2arY*K-Q+Fi(qKjSo2UYMir\u)"=P[9s--BncefE*apo8n^,jp3/g620R]Y6^sf]Zn9eT3i'G.1QF&E"J28XY<VIe:fU0U2Z[&\s
%"BL&PbI"9`$e*,#HqWn[2(W0])BaHb9SCVU;BT/]1iP89j9c;o)Q-[>=9U\b%R:_noC4Do6cD>"?g;7;hkjG'd"!c_Fm=c!2O6%S
%%*[bI_f9L"P]X9[4ecE3OYum'5i>S*8oc?ufcW\n7V$h$&mPq&q!#ZM1pObEM?&\h"Y@:q,>_>B63^jJNaMk"M=sBoDC=onP"^mT
%+"^.n0XUp:X[GD35WQiED.*"SiS,\W>:B"m5N<[A<m!n2!7h/d9VR!#%0f42TcM3CJ#t,!b-;A(KLDq'&I;]IdRsj^Z7rJGR]*4d
%2S"u6/;-M0@gO37i"6.U.?b(-I&beK9pY%#AK=IS'Gkh^mGJmbb"%a*1VnZ/?k&.d@$oO+"@`W3A_7tHoXG*UKCp6UU1'/77"<b'
%QXl,X(?Xgs&i`u^_NLTa2ZU,@i9MR?&E.s<YMH2"n15HbjW%DC)qZo0W4N<f^8Vj@2`/:b$c/sTQ7Kg_T#We9N_T<=jY_sQ^f^qJ
%e.FECb8a97"57"_d\3I$EI/I/*Atcn\=fUcj:8SJUEqSW7)^Kf209EG2LQ:%QmV(^U:(N0Gahe-9bAg4*Bi,]@E<Kg!>b@D-<Jtf
%RN*bBBFRi*N;AHTD%>FmN*''\S%QP$*O-4]2?fh")[^nJ.4j=aLuR8$7_Q&us8U$NbDml?Q5mC^d/W$n!6E/JdIaP%ZQ`nFZ'mt^
%"%4\r?3CQk\eao3F%,.028/FLeTFYfAc[mo9[0VUB)4V#3?lFL-0&\"T2QesAnW(]c:j-EUY1rfFB3%1la^\//Ya-*W]"Bp!cPBX
%%B=m(<9hc='tt#_31f!$+`DdurC-Ji[IPJB))gHKB0CH^nIGZjf_=`9JeD(MX)XM"c:3A-%3+GF3HasOHnj4^5X'YLV;QkN>eqEB
%1@;?IgX`KS/#1@,J2/rH;_?AuS-)Lu+D@fM>#0=L!SWujPiq%XKOLK(?%!.l!!ns\&SAQm_Kf(A'qAFB;W2[Mbn+n^\<]?>jE(O]
%2Tbra?TQGqjn&DFJM9me*&(^-CTVej85+#QqI)-#\mn?Gc]$j^2kJ83S)Sma1\X5gk)?F0G*k)a>Zu$jh!:$`be%FYCM'HWT)2s@
%fW%`&2=n1<[P`-pUM\92]8bssGdf343HK+Gg,!<1Rs`sH:T)%;BC98>gGAT_6@5U(GGieGB^Xnq)`7;_[OmrGdr/GIpG"+TAtEZ"
%[V28X>ZrtUc6(F.O@`CJ5/R2*dQF)ngSDA5"Z'l\Mdr55:H-KUC$[=LLIn6KX.L``e'1@G`[UlX/DHslqk@n^8b7&!d\L<SHXFI^
%9Y?tbkAA[1?0&A,Y,<4g)`?A$fJ_!<q*7/=>b\S]OutVL[S6fTo&4^SR4\!@`bF>WldAkE'dTu`4<Gj>\p?G6*-tn%mW5?L?J!X,
%[bWPtl#*]J:;_*s>u/N'p:B\PFaIEg+oLk`Z_MF\j4bUOATidoCq4&gn:i3Q[Pt(AB7"-;dGfnLftFYYhsPj8]Wl`eGYd05DoR)a
%A,H,8]eSBML\'TYh)&k^pVqGnf@(Vl\,2@F[`s?W);E0JG/e&loOhfQ)^!fPUP7.Zl&9IXk/eLq2UCcLd5"<icBq;(oZeE1[asi*
%D2W4WA(u#[D_-1c+]d+[NQDV$+="QSg5F8L[Crh^=Di&9f&t]2=?EV6-YI7bZaVa!NS`D1gXbnY41<CIF3!"hD/A+tfXAqpgbG8d
%j`\\qRi2%`FN<GOoQT_j]EV0Ud2eEhd11A:q]J]&R%0FhqIA9T\c&f#qOIPPHmDIV#FXL@jd#6>&g?i<MXN5tfnD]3O&U55_bAf\
%HO;RNTj)/s8R>ae_bAg*H3uIU`+"_E%PuKDF5ODn53B<+c7m_UlkF'kOl5r*`L5Fs-U*6P[QSnkRC:XkLRC>tCNeX0S01US9LHDi
%QWi![H?ufV50bsGf%MaWNRNkSH?h2og3,$grcj*a/:S,j:X-B>!3[B2<jTPJII&=XdhY7ofcS7@2)pDUB,Dt#M9-UhS4&0_Di.:!
%2$l^4BK]SKaE4tJ-br$fAeA1YEOR4N'ZDntEke]4^2G/bNuGTHj?e0VBb-am,\%]tBB.rRW:=IoNs!;V\"Y.a)!+ZW.,cGRQ<@q3
%T)%R3k3djqMEQ-_6l&*mphG7E9"*##;AC,BC&@ZT*Y?,%l1Wm==pd+2joQ-je:$[gi4FaT>qLLG4\d8l$kereLXV:6-?ogrS4`)d
%eZP'"pTj-6BcZlh,*6\(,(`GX@3P:80L!u$Q_12!1X(WoW\%"B%hLGdPj+dcgNNa7EpVY_J6'+;qn(Q#CWJ<,l"]%Q!c']@$h*DF
%L)S.!Tt#8KI]jNAT=P<pFU[3@qhD7U'qTBN+',lSjlt)S?<eJ/k>TQrloN#,@2:ZI8Yc/1$q7>)"W$X)FpqoIlcaE@dbMr;+#m6s
%R?YcI_C.RH4*AA._/dQGO84AKTtqt6Gm+A^M,Q7Q$_h@6oPH7F<)h`K]UnU/lR_599<d:De+-K.p%rmUC)I3NI)3.n`j;f$(+f76
%=rb8+=Njmj\^Ad">&S:K2pJP;pMKN)cF_3sc(?:L2V8n/Qk!uZ7g1@dM?c[tTWirD$,d,lU%;4'2>u#Rbq^@Mkpmi<*`"2S<#+@U
%mH@f6r9d[?Z#1C(5<hG`T(>!==o::FZ5fbsa5-,>T%PAW^NP-p)$i2nCV77\:^8k)3U[:hr8h]8(CEd:b\Z=Ye$lZHSKF(r*DPWQ
%Sgss\,+8q&K:%<PU+#)iG'knfE3U'0?+%Hf'lH)e@</(aQT>"oDV9@]j2>M$*K=j1o;?Cn9gO4,S"Ke^l$RLp(JfAOL+!4!*]SXs
%afloWbkla0\@oM:mAf"f`kVYO>B!U2OX8mC_H6L,P?D+2k7^9[pbIbh1V0j6gjko;$X<aiAW+Ic$FEiN@:^qjJ1Um3DQbq'R/8>,
%7EN+K/*acK0,5f@*G/[=Uc!'l4#R1DaK'5Eh_f?hQ[\.&Ma'VoT5?mkF*Ttd>BQp-4=E64Q9Bl.8GBP/q0=(ZaPckZQLr>?neA@+
%a35&YDQLX-Ql:<_,&C8?ZC6e''h"grdo,8B>7b5[s0n+g%E4"\bh_St-5kU"P>q_:GMGh]YR5m6gO2g962c)%1DBt0<.!])_rEpl
%k[dIb%hm"XpM3/^k`pSN>GN8U"O8u49%K4\L\L3/'S,1#B5>#M5]pFfXK>n6@,I>>2`L>MpXRCiYqZ(P!bO]pZEJ1c7OW;dS(b(<
%j+hgH++MP[KBL:d*MN5nrQT0gI6p+K')PR$ND,[a%S:Zg[sR&A-1j%0Zn<@o42C8XIq@-j9p7/Om('BG$CDf*C?Nna+1b]1/cdDK
%>Ad4E@[hVNEYPdF+fOLVS[9ugVffLD93\O(54c=XAZ"U6$_R-/mX'TY\(g2UD0/n#g29&jbBh]^m`TH`hn)rjH$d$F\+tKF#I*a1
%$SE-?m&JmfQF$lVn"3n-I#,M55$-j(\Gu)@VJSib55_iNF!$P!ms-re[tAcE]%`4UO(S-pSrW=-Q0k=fY$:I9H0^6@pN11e=7Eq1
%[_I&o6Mh\-gM-rqFPeg1Su_RE"\\@l\GYg]'AkjN7;MT[M\WGr`k-/!eIH&IpU-"UjAj.nEuk<h67Gj"\Q]15\(5k.:1aH&ZRq1b
%RgJZ`L2O$\;rE>a#)th!,/!C4EF&'`rhoe7''KPEQp*X7O(cKc[<=Lb0C6d#iJHKLR;KV3/sO4Zk!?*2TlO-)/B<j']qI'G\]l]s
%!%ocGTm;!k8R&\Kj=Zn4qhK#9qggS?BL6r^Qk+<_d.[utEW%tlEg\V-I4UhmAK`!Z2jIMN7j1YN+tMtJ]&B/[;OdlNc>?\ICa$fl
%(JKRK-n%?Z^se3)OFS__L!\OI'JTEN+QVmoP6#tb1mof:ihbaBo@bVW=c/3ijksGFl-Mg=!W=L-j9+$d,_28%kP3;j/?YHRp8k@5
%aQBL^/(nDEpe9i!Am"),U&Y3!O,@!)]=cE3iC;q]j/?Yr>T+1,`gg[/E"BeVYVOE)H`Zl(3K@Vs!$436EPb<ufft&o:AejLLXkLl
%b3gbu40mHmEJEOP29s4iq70mK0F"+XW*6iR;'?$nS:D\km$`1e.1K/Z^NQ!1_SVH8buVe`N;&)/,oEQ8]>:LD+&m568]^sSG>4I7
%\elmQLuF"/68Yc(V@^$(MK?<fbchjkH0UoW)65Eb8JT9uBRTtG"R-MeL,aTQZR8NjX_fIA%VHM,$<NtWFc_ErZbUXc<K-,i=hG(p
%=GQ)l&N6eU+4je-ikj&O!2__?5ZE)eeH@+^9Ip]jD>6$?-u&1NA@9cpJY#K<natYM<(6=jc#[WaQ_Y8@"B$O(#r%,7GoOJZRlkR6
%8KK5[\,9KW^IpH*PrRI?kYr@-@Q$T?YWE$QbW]it(tu!kF&UO6bsfR5Q&3KL:#d-\No4pEn99Ia,"5BBG!%4!m(4m^W6gu%G_>J#
%H9bE2Xr!;+q9cS29<P>_Y%%li#!bjqR[qn:obmtlfjm."=^9k8GD[lLi\'Jd_if`bh?'F=,:,'C1mMdq/a.g4p]<5&RQ/G=%=;uq
%r*6&l7%T[?bP"king0M[^?r5j(rG)R4+lTCRS6Eb\W54A0-]X5c&slD\Au$UYcL_,91+uR9FRD<G&<-1%km*V7MDf/cnmAH89i"U
%".bh@AZLkiK%uNkq4Q_N5gqQ8:TgM]I?QJSp>#=C$geYh9Y*]dO(M,(0==G#&LjoFpYgHu-]1N`(V[+E239K:c+gYdB-hI]@<:'9
%[)bs>L"q'@mQ^%L_nP%SX=S!0'b6*AGhjc7"7hFPm.+o1Lb@,i7W?uF06U=]n0WC]D564WKsq>V]$Y-^Q&9df_qC#AD`YLGFXFXu
%VQSjY.OB#==3a8BIf</A(f*kC^$eQ`e%<IhUktaC!'6K?CV.%9S01kl9C$%Iq\<8'fQ@jM?SXQ2bq@kRG2K`RM*_K^?e9/LM9[=2
%'oI[te@Uq72Rb8gb-"KZ2:Ji]I6+(P>5n1iATa!tfA72r/m:%aY:9+SSrn7H!H$22H:CQ^/eK<J(mg=&72&B^n1>qhFZj_sAQWP-
%qa6@"4/:$`.X\k(R^NWESP+\EbD!p)P#f38a]<DDon%Or)Ni3Qat%]5.aptaHE)F82%bjWV]_+^^0,RmV($&Zkn3AGDV-K,+]_Gb
%4AshX18H1?%%<p=obF?\$^YC'm9.pVq-hQ`5;j7kc,a:mV'rGu?<qV*j(42fI'734MM1#9SBVlDZsQhCTD$p3#U59\/0m-1IuGiK
%CY?Mp5QMH\loj[H"=Qb*ij)"k8M#hI8$gGgco$[MkI09dg]REH8m<kl=$1"`bX.6UK9,Qo`kPue929)W,rg@gFO9d*\[u_D010!e
%65bKtTrILsNp1$q\Cpj*673TXSBR;T!`q+XDg9E&B5YKral0$5</.*5@9rH--*Pf@JJO\&hC3g$"QIe>QGYB@79^(fYF1B)Os)GY
%/"jBtQ/G`</-Yh6FIF<h=)8^,)%Renl5PNK?iK:SD7ZD-fAXn)$:B!W,]F&_Eh"ljB5eLn[0;b5.5niPKkbm*E2'>s=$.>Ba<KO`
%.pE:"_)6+d5d+]nko;God$e7`ET*V\HlIpe2TH$=%`jD^LJVD)dBf'R&]3W9%chs$`oM]R*:Ioj02b:WTqUVI]B!l`L&tjCgQ8mD
%#XjSAQ3lXS<Z(')ULaJKUj0q'AW)`!#=?m=":$`8TLU4k[I_qU/cm*,>Y7bk69as0QeCUD3c_\(WcAo[n)k=qB5s)pU'(nI263EV
%4)AC"]ok*1$j6YlmKdSE)u'Qn'[t]L2VNmD!I9=??>:65R$UM*7`QfX7.J,,D[g:.cJ,\<BpRm$3E68)qlXXhV[9Bb7eBP8)VkT*
%Xtd=34^sKU)^NMB$Z$gd4&LNf.3</G?L5is-$tg]\[X8X7M)S\8CTLXid;JK*$.2B+_-k/ojAPf1eP]'q/ScY\:a=[3b-Lr,J\t?
%9YuUYgWfeDUH?X(A4"Wu]9DPGHg<E8n8\qO31EZ.Zt=po,L"4NekMJ2>8$J!:2*p\eF5F=jQSGI4r4TJpfU075[l1B*2SpsHjo5[
%g7r1mBuG*Yl,tEIZQMi!3,on/=9\?A#hZ[)<R#ng\Pt**KSqRU!/[C<plZ$TA.'G:npie^1-pW872g)%TSXXs#UN5]>1I9*C./-J
%,]8Do6i6ZtOuYqZ0KJA->:KA%/P3#'WJHeuGG714@/M3pa9OEsK,7kbXO&F%k@4A$nTUf=s"H\rd$/+"TiQ'\h=VEK%*qKBXAuPh
%1_\/nVG&WPikisE3E5fI2G,!1S7q1[23V&:ELCg2k#V&=&fD2*-$U.CEQFiQcX`+(E8B.lo,2JPr/`W[@!rpZ7d^m<;a>1<OKcaQ
%J%aXtEgh_riJ0sE%R;S`f`=ZJ%/!l0S!!"=BOQ0n]5&@J>LU/9XA<^\EGK#c:l^B>/I?BK@kdASk4A];M.eCU742R5>#Oe)]1iHY
%]ZK$_W4("o\emGt[A@k=U9$bH-oLL*;`0'HKF[VdCr)k0>+Ja?`oibq@JI'+)Ei5i4lW^.Y\O?&RB^P^2/a@mc/cD^+!QU^),4+W
%7;V7(ar2[Ho"2rlL%Z#X=a"3Y7N$I4ajD<qU`"B,A(]N9Nf@TXFN:2R6G7`i[[QPuf/=C4HS#G&Sb>M?,*K&ZQN?U:8nX@$E(`sK
%J,_2Y,l6"9q2;/bn4[*GE?P-GRj'.g*dt+rD%!=SPFaS4l$K)'AiQ2gcb;d=m3(!+P@rIJfpZNEb7D)&EE'#^g;T9<Z6/cubr@3H
%ULLU3I-'J,%@'1MWe`:jDk3C?N.==T&<!p>'o-OpX_O$!gY$\ZrnlOuinj"cLYs'`2*GYEZn=`IPFt?Z=YDWB[8*t*U1l#hM1e7:
%,m[F?%m\t<YQG@^M)\m6'mo1kmkrePHYi!FAlk5aQ.AmE7p4?P3+-,!i07,u0dd!F\E?kTRM\SpIM(X9r*Wu5>9!JpVAoVWYV2JO
%%MajlR[ZVdpMG'S?!r2Iq8VmBD*q]W1C>ELQjWr3D`1%AZ/L;5guDdiBn"XM,&,OVoVS/QcF%r0(`Lb2rEt<kg3di6d9UAQrn+7D
%K&`0TG;S!DM6ORNHaAG0:+W^hB@>\TOj0k2b5<@h?YqIZX:#\<B027gL!IRf[mC2XqNG#E(K6FUm1ZtiE!7uq<M2GmIuh);V=QaM
%AB(4cH]lIO)+@Z@\EY_+S<@!SGW8q'$M$$d4AjSr`D\<9"6:dh4^t]r1or=1.m`^GeF/i1FfJ4(be5tXA8]"p2L\;TX:JSLl#LsP
%2L.lW@,c".F]p_VQMhBBrNc>qGagI)RJ"RJ=U(CbbKYg8A1d#A8deH1<40@XikOD>mM):?K$4[--?/j?Sh.O&b3e\jZ[>7ImcC,2
%5s<fC*G.:^QA$R/7;+uF]GKiFgGmdU&Hops-]<seW'm,MShUuIU9aYGpnI.fTq'Y]:Soq0_nB8t*2g;LaQrI($gAcNBDgsQ0oeM_
%+"]uBaq(-iDKVIK7tAdDZm-"A#N$+H4&3jQY\$Di&Uh"Wp5IGU#P/hYZP2,GIVYSIr@'dP?O1iadI)u=cKM`q2&U]5j&XDd+K<GY
%?WUJZBqDf+->]`Gg?ke_n]:0K3*c:BBM.N;h]6P+lhLh.qB^U/DKX]\>g[#nDA4(Q?oK*dORZahglZ0W7?6lD/=(:qWMr.)jkY'>
%_ZW#PhJOat_=>F93eHSPC8(@k^.D)=;dTatgX?[WLu7U:,<^Rf*@6%b^lnsZ1[!M\=YO@X9L7$?h7;>b%',l,b)8nW_Mhk($\Z)T
%XC\b&XOR19L\XQsXL;6=VbM%ZrQMIdRQluiB(Fj$R_q"eUs=A"I0e$oE7lS]j>0)$hbJZs&n>GN%G_d@!RdZ\kD&k>acXIK@U`9+
%2#E&]"A,cNS>mg/-1@o'Cij_GRU2GsiA.$d^>+iB]7%Cc#[>ur@EOn,o\['Bk*c-/>g4KdkW\6n96AMQ83.eEmZF&^?hh]N]#T1D
%4)`IA8;at`I\]`p:Hrm$LI6P:A)6`@;RVGmgkji3L2\Dg4kO_LM*3,(jHGYOKdE>XTo<t2l"LNYgf\I49DVs/!blme7??YUq4q$Q
%R69A(RNol@_42_`c]Cr1,ec&-\h/+qCCU<phMP3<"or&,M('+Xcn$C$+fPQAT[6\b4+IPCE:p[BTqFqYo8+3F_'<OrG8P6[XEMK*
%cLBSJT:i160T-l]Z%I<\*93"S)/c59kb,3peYiX&L3UU$c<-k(B37tlV572>`CeIjf*OZ%,Fg\dAVWTj0ZsrnDTp99=$<32*e6BR
%1c-G4DJ>$:*9#Z^aLU?FK'de;5,6$6pG`\c8!/W1RSVo)N>B*XdZ,e<K@`F3ocqO0Lsd:Mf=).1FGA"XbgVTShoM`:JN!kb]28Hc
%[G!?`]6HI-n!Wh7;1?h&g^(*S8e;KV@C^baiPeuM8ke$M1='=_i3T!8\5@!R1.6)iC[IpSVE_QSe0JbnqeLEJY3021(nG\)8SRe%
%ffp<^0iVI>;Em(\6La@nd<Af+'Qp[&P(3W,C252f:=S6bSGFLrGkd>D.a=NWSSm2BP1"BM4F:$iqpm*A(:j]mdeS">Gd\M^q!H1s
%[BFd=CL`rRiLNJ$rC8.RSMQ"\k+.dmhWUNE4M96,c0<O@SI=6pn=;C!?"M3^Sh@EkYd5=0pEq3`(Ym'%p"45j?cn]`40ijA4,'uV
%D+_4K4^m7_oe0(cfbj>RXGn?FfCJRZ47(do#BGd[SLiJ[^*B\#+T@aWOt=&N*_@it#P4A.3cKgtg2#^\n)W,\>238f-[;E7D)MYM
%1Mc2G\Jm-2ZZf3L8uDES"u7iDrf@QDCl]k_8])4cWU-?Kfhe;b%WZ&HQ)s=Y'mY)[[p,ff_59`t=btRMj@BG[2)tM/V@)@@16nDN
%h+60[21%Z%mhG2Ef'YZ(iG[>1&(XXH45+M<0Htgu^:&:j51tn_/@=AgGLAn4C',)!fNaC]ceuf)pUt"W2TA@QD[>rY`>NUB>[j8s
%HGrO:'1]F@[b_%U<iEa&ctTS?.ehb]fQUs-$*q5V!&q?5irj6"pl=.#+H@K$]>5P4(iVi/mWd[s*Ou91%P]tqNt+Q<U6GmljToH*
%g7fZmaAW)+Vq@r013[(/;$Er`B8Bg.Rru_]$.-5LMZOn#nlXN.pf3p57jM3HT]2$?OKenDNkhs<N/e29JO_afeIGhF!nn-&3[3Gd
%%dFIb)dqq>U`6E#N4@d7X"uSN33=ueDeLalqO)Ca?sdP=5k)!&Dr:mVCZ8j'1;38eb!Q/lG1l#cCk]d[N]B04DO1=dmsh8ea]"DS
%b#@2gG;0ffOdpEih4;Ir,]DQmQL&VXhN8FkK\qnR3hV!nP0"i!7j^j4_KMfXLd+SFVc$`Z;`k\#%V@gYAI%Mj8?$m8-/R)I-J]5/
%I<R10ro$WI$+nl^15-ClQ-%?$D`'B8R:RXSZp(<2])Zo<4%]RV'80OHO_+(6Ff=Sn6G5+UB<'LtY@g2Q+L4N"p;#,5).#UHkF8<!
%3<FH?\ia7\hG3u$2lR.\L%A;&].9a01iPVkg]S(i%4Y3rgqgsU%ISIr+Bqn&N^:]8j6`/t$lmd@*.eO5*VrHW6gO1pdPRoVI/4l&
%Qi.de>TZ4]".FW\"rtO/i!LIgI/jfg8GIa8E:!@NB5iP"JU9ALkQaAi1$]('_NF3jhVs($+2A<*arfON8(8V/Nrs]X^d/s70?hLT
%,/ok`,n:1QdPRXoltoiCE'RF9JDe5MYgQolLmf_K]HH/uaEZCT!Mha@)\0fG(IB+O*0s6VHieP7olWJ>"nZ7!`ROQlBHS()X:mIe
%@ZHEd13AYY5,M[G[R=7;Ee'F8,*E&YjOGR^oZ9a(2FQg]?+HY.]>iq:>jY.N:OJB_+mDS;%57Zk+:tU>0HBA?U(ge=SVacWXa);T
%"RG,CiG#n5rk.iL-V0KJ?,\?n`:i_I;b2=,S15i<ha(1bl>f6on,0'C>jjN5M2/dnV#npXF]D=^_eVJse'HqD$5pkM''0:rgLFss
%ZMGH4"i*:LjPX@@RABq]_M;3CCkTX@0.<23RXeGd?$Ilo#p>2mq.P.Xr#S,D,8_-60WK63hLp@hi@?s50%\4[GQ5,0[oKR.Rr8`2
%(X/70f@"=GU]Pq[H8KjHd6<S7M*,o"!>KZ87@AS"m$Z`fI]Jh0n+Ug$^E8"='oj>@Id%laUg,Z!2[D.52I/jj8AMM<&9"`X2Oj@4
%,_R,KX\o^^G>kA.<o\.[glFsGCl@Ir1LmrYg/Ja1V?n(<S5F'J2pVq)EgrEmp$B0F'k?q*J>ahN.`^.A\HO'FjY+P-#0LTW$[i<8
%5j2NPjnG^_Z#'MGBhc`4kAks_58'pZB]=2&lZFiMn(&u[lDYMTJU2,DDF<eYhaP2@8tO@ES-P!tI?$1,rq9[Yk9%*cW@+$TXPWO`
%mq&Zjmdk,Bi7)l8R<')2FoKL=+"J7Zjr2Cl*V7[Vqinf)>=[@i]%8Fh<)K7#TQ(@(Z@>5p$*U@LC^ut^(4A3oMgkH.Y4U>o4B<OG
%>&lWhl*oj/^6eKFH7ru\7rChtII0(=djN'(ED8fPiV`HAT>1;S$H(H8r`kK"g0YP)5d.+3_kZ\X+Nj3;*LC>&kHHWB3le'7coWl*
%J2)u*1SAqkTL%TYQ"WGOW(;P1/1Au?f+&-F@(a?S%@X;q=G,Hl.+a!p;8EHRNMpB?jshk7J0><D2Wt,K$9.mk[S=%po2A)57seLi
%!M/8N%dG(aF[5,oZ3(:UY3gbrEHMNZNp8^!G?j)mh]:0jYQY_?H-gn.FWSmkY4R8$ENKJZGuX/3^#ODLl5`lPctiqE+#N%UeH[\s
%T^DnCa-@b=i_f)uh`aInQ\<_&&J^#H'cE6i3";k=Kd!lJe^%7j=%Pch*>K6C3:3Z2jWRAdl?.Z6duo#_,2tGU?5JGXD5l,u,2AKA
%#t:B(e>lIZV_RkU=G.Vl0t@QKVIG,hDG>g1,M\WEM+2<rE1A9)?Rm)SIUPo0icGT9Q&[j&_UlaOrkd@aWMY@%1,2c8R3PR7$!jVe
%AI2YC6#?q]+u+3H]@gZi&fU,8_LtB?W%k!k;3_Ho*()b#)XXKO"FA+r-8\q([0aBT6+mRb<`-gBoaYY1W+/MD6LJ)XG=$'jW'$bf
%%Vee\<fO+Tr.PgU;c*n0#A#@23@[^rjVX8[5ju3BL#+m::SCc''W=:[\3u#l*>PR#GXl<pFLstq.eN)#<!>>'`@B4r-s$G%/M("T
%c=+g%F:O40./OR@Xalr[(9W`((mV6hn$mUr]m*Af6KWDe^d=SZ&f,fZTSNb4a(6g_$3c,7o]Vs4"ZhFX/Bj*2a]W:e"U-L)q%H=-
%21H=J5^Qbe6K_BKf]"Pd!MAX_?q0.5(L"a3bmUYjW9T(_7s-KOa9X8&B\*Ks0C6=XWaFu/KDHB&Z\S[;Nq]1NL)q:5_9e#NeA8qp
%O"+S2Dd3Z;7mKl[".b'j(c(BOMAWWTA""7?XFmMikT&3nOHCDY`\;lbVN#"RI8Cs%#<SZ@U">;SAB9I^C1LG02l;b37u)1A1tkg'
%$kGbEZng\R7+F%foAS3BOJhSF0gk=_bmYV<;:UW_[N;"O;kFD3W')K,J\H,$NA!Nq(0M+=r_-Drm;ZhLoT"iFTQaLE6_0tR)]Hqn
%`.l8e.^FW^@@7QUTt&I(oo;U\ke1J8)n&LNEZ=3^(Yj9-rYm+AcoWkkJN"+_DJ77g_AfpQA'u<>=9QT%1g`QE%1IJdJ4#A-8oU_M
%<.mWPUG<hQ*>d_^+Wcp.d'KKV*&cP;3=\c-<00J\A!.hcRk[bMI</AR6[)=*Qik%>dN%Nl($Er%#N[sfV?@&`bXr15FQgP<OUca*
%QqW:<bc"?n=Z@"m%^RmA@N@XA[^oh0ld3A'$?k'@#:2HJJHeP)XER@H6_1!h*U4Z0mZ:Eb'^tf-1!lPnHK`Y1l?_*^+&qr1n"@+E
%3X=1um%04$Hi3S.rsSh`;7Q5YKmkNOU%XiRaJ84]+9@)NT88#j3@k8ac=%k-F:LooW,#?@"MNi9+St6!+:*;6,sfm>/dc($K<cVG
%o;F@!Xd#J8aJ3r]*!C\bnf[-8('m4hYXF;e.ju$>9/It/@cp-M-q*Y@PmYoh"iWh#kb)1:3l_@jco3KnU=2%N)PZ(cfarN#QuE<l
%LS[Af3@Z)EpC>?$BVpC`,3g/4&FgDf-6coC<_u7RQ:"26`/K_LP_`X-.OLl5MopmDAJ5ald4lK&'X8GbMMh2%`FMDJ)[1pabchFH
%MjSJt'Gp9OO3*=Dnq[X3fRsDS7VoqN+sYZ!-o7US0qf1R=%m?s[U`3Nj?G9SrD\J=#CfR*`%J-Q&rHGh[7Je-W^`^o*RuAh"!OO4
%&p/Ib'.cFj:pNJpK;'Y-`XBnS=Bm7&>[kAkdNo[R$At/uq%T)I;0439@%uLD#nq`1<5_0Jf9hMRKkl<--6?BP8XX8'Jmp'anO;P5
%'GCi]RTSa7Ukt(5:t.n>'pUXR*[N:PU@TW[D5+S$MOR]R1F-mJ@G?mZM)KKQi^>e\W5sf=!+I]29(bW,:@'A:8tBXuJmp*RFB%\H
%ZIoi+'6T:,SnP-6U*mBC6F%sWl_s<0Te1lE-\h7!MP"!#-7")8XUu:5&ND*eJ`=!N'1&lCAOm"o2b-[M73K=;'T1,]TGWP=SX:CS
%L+=a0imqL.&k098:_Z@MFANal&X+qX'XLMcdO8^,I1SoR[25#sGpQVjjRL6T;[hLre4u.F&5u@ZCEo^KU4Y%rTOQ9@TS?(ciVc_b
%79QOMaGO7%W6C,fd:,EmMC(cg<YQ4)MQNOq>])u=lCd'm`[iUMU-T0EXsi3HQ!I8UT^[iq4".e:aAPi^7H=>DIRR,dVuV`'3FWUP
%!bOhh=L<=*1+X3G%goRD"?7gK@_ID'//GjXag(WTM$^Ii(,./YU>AaE(;4umQ:97C'5"NI9Mh1s'2('"(@BD74H&V%TKnDU2Bdnm
%lPgOPYn7AdZtQnB67k7EU/ER8mR5#t/9)5cCN4=/%EJJ6"^<O=(QrShW)$6s7G7X<Cl:TD@_s^?*!N0C1g*]G(-O`/hdR^kTR_q)
%/Lo_RV%OJ^E@X*tj.c,r.cb(6XH8[)!Q0Lu/s\h`agl)370Qurj.u-V8hYqN$#70+1^2E9m+F,,(HV^dMD+66e9m*uZ(F\+=A;jf
%'F&tMPD);L<#>gf5Eggfqe+nBBFi8'=F`7U&>Sdn-kZ(83.LsD_F'rpa647JqD%1Q<00Dt\;&6!ZFD2>XSmd3N'c&\-(/./k>S&l
%[!sD[KD)P%%!MJ[E\l;G6#ai(i0`Sa%f_Ta1BsEK+?O('E_pub^#RNsT?b;\ZVs%hV:!ISFD2HI$S'V=\t[n8c\pi=.\H%UTKTGS
%o@NFGLtAHs5Pm8:n"98;]V)MPdR@2T&iqr!U`k&M#XTt<gcZSa/E>pEFG\V+B')@/-%VBHU>7TLak]ZU,sX<G?CjALINO"hRM%u?
%*Kb--(MoP;$9T.J[RNruBh:IX.eY3Qbn^DEBonPoT:FQV1c.Dn_VJ"/U#<*.9g;>nP-Kf&LIi@^2O.eio&i=:7NJ0U5Q9tuqmV(T
%^]3ui^]3X"ra5]chu:C"rtB8Lq($:Ce5lAuDu]M1rV(g=fDkM.hu<4ss6p!TkKcBmqLAM=^]+iBpqOK?+8G+#L&\Uc_P`22*Zp0)
%lRENe6<4b;4^1K*$=Gja=_p^7C$G-:VPtMB9`1c+)^#o/.l!7DC"bSdV:;DOZ)4.jVNk),qB=8oS9<2_VdX6(o,I^Xa5rlcR&RP0
%:!1.SI]9^WPAm_+8uD"4Nn"Ae,;]1F/lQBH0r`2(_9$#)4')=-jP/]6qOXgtPF1K?p3j+\';ZXo7:0+InRh9>Y<H"<Ob3C6VRUjY
%c0XJGe`uPqWi(h1>!BC82p(WUX8.;!<r->D^]48ao_CAQN\FVW]Fnkb>F?V'E.!&815jsFM"d>bOCXnT+%&C.np?#9Y!erUBjJTS
%H2%U*=MV9ol)NMlo'q]hrpFP?Ud#Yu&J=db:=FH<*ifIY*$!,iC)l;9f'h6ZdaZ44"LFTq6Nkuebp%Mn;D%:fLJulmdPPV_>k;`"
%9&^KJR,AeMR4AOm5uJtEiC$q&VojInJfE!q@'C;e`kD%4[M=pp*IeQ]HYf#FO`8P&>Wob<kh-P,cj(C8.O_W`O*i"Rhr?iU+'QJp
%RVc64Ts8&<@3MIq7X>N+W_1K@-JQunE24\$/\WK.5QMbnp#-VJajGA2!uGk:ag']_-\<I?p"1*bL@t"B&^b\!+lq[Fb'85=<>tIR
%/]8N8A)4?frX45Uiu:kE>+=pX`t>.P%`pC;:8##T<KOOY4o>$Zj&K7(O``-\.8.\tWR\*A/`@i=bR>6KO*CXYItVK%bBDaI[L[dP
%m8#YRXb69:aM6h3l_aW;dLVD*9@P[]9<#lUJ8s:Jell'<#QtF:@<A&@1Rk7K6IV<!d9?EY-;VrgQV3QB'"b0;rML,`1+u\sHM)*V
%>t)a=;ds4h<%c.e$]-+U1g;`[n06A\`h7OPE!MA6>n.9d!L0jPrQ=K&#)(a<n$jthW.uC0`n7L0EFtjO/]HhB&PcbW)CD5[c3Ka[
%fl;N_1Y\-&\UqA_Nt]h]]5WG.2+(1DY9tM,X:(RL]4`!T@p\mPYA?ECf2*6]'(2h)ZkS;1Y\2V<I8(lu;D]E0lQsLMqu4+U\rpd&
%bbY&Pe"j2eiH:Y6?n%Pp;I?fC&sBKD(KI^e(R)o0`cMD'.4daDJ(@-]Y=V`m!k;bkO,=9(-gK_,P#(nmqCH/2[4W$N1ARocRU1rp
%<Ot=/J0eL/8B!MZ*DF=Q'-NVnRm_nq#\*:m`)EA7:cNnhlskTr="A^T7r&]*0O%CBLplGT@gI9+=Z)73<K!t8b\e&PLmf8ufm;nB
%64Q7ho#(M=.AO6U8<7<9O,TNT_8gS6E^GkX2)bK/r="c3XqLu!M["Vg@>lK85T;.ZaLilU&2(t,;J(U03!]hg5ncOaljNJ%)Dprn
%@>g7KE*5iRnI>oBXHVc9JEp*FO]7rA<pJ]KVJc%/9o@_E'-6:QA(XZ-P\D=7+ldi/7E@QO3f9MhP5qePME>)9>0C9_'E5s,M6RGm
%-k`\XLK$.98=rW*eaCflE\&0iCjh/17apX.jJ%:k9oOG0ln!Ok<WZ:Jg=jma.q(q]>2A%\^_kN1Z5PaOQ#\VcOXG?#$9rn^*u@X\
%;_NFsTFSEJaW)`;*t4KAoVINM^j+u/D"FJ^)Z_.<]^I`Fep*__ipqI61hM%E(cctT)hA'"#jVj`EO2^FP.8-NWuZ@feS-gGLHV?"
%TFrf1g3!ZG5Z_MbFBc6_TnLRb@J2m-B4pq7Tq$??>(6#G00'bT\fF/q>FCYiYJr=`?k@=$:+uI,;6o[7[cf4^6u5b*HoQh6:;QW;
%MM[7Z)Ab@F1i&0@Tk"rPE;j",aT3V6P.T$cV2QHBd-=g,$Q1W=UB2s@WFJHNdJoRuCT[6o+(t9,U:6mT)$"AcQ_A`'fKBJne`QUr
%;0_`]Wm72@Fu<a7;m_U"\*N(.>;LJmZU]*<$23T5?la_RJ,[1MKhPPn/m%f5+#*(hRL7VoF.JFh]k6;'jUEpn!Q7o!gU@L86PUY2
%A)QI#Bi@>Z79;tC6Q/R.l#+>?a>T"]-<&<k5=UqeM,qRTeBcA66V_;Z1mtQ]`HA?,S8ckTe1.)LT9/r3`nn=Gr<'-'Cfpa<^,D:>
%OAJDN$jKShO@Y-2p<H_^X!!a^h*60h;T2-[Cn=dg6D=URGq>V%Ge!k16Mmtek^Y0%-;<tT)t6Q)ZE_\WHdD!a(CG\#[$dchOk=\s
%hp@E#A3L1**ha-i+q#UrQ!-g4M1l747<504+A@Y;"6Ndm4/29Ua3U]Ba3VSI$fgUmffNdIH%i`7P8[V&B^(kUTaSmLN7*lQT=%b+
%`nB^GcFbhLmkM4L6Mt3s_Ul&QD->oa7]tNcP^]I#5W?FBaa]p?-%Ablke<3/?\]mW>J:aJ7Y:SjP^;@cm)CZn8R,F/&+``B7?)IT
%(J']#dRCT]l>ZNCJe].E%H`Rr-pXMgoGHHn$QVGT[qu5`T\5\X6E>tROQ_^8hJtZD8j`"nNC\77Rs?ZT9_)FFjrp2\";r2$>_!`T
%3ZFZ@AmShH)=stXql<E4[9drKZ'6n#U'NVG>'CYbaN3aB8.8?,9uPS?W@WWACr,&*q<HT6)q'LUqflLm-tXX$j"W;0-p.r=#9)oD
%+*=6kBje0:^NQEL\r>#<A$iJB?<sEV/n\eK&3S6DX(,O@^@j1EEP-VZ%d:.bo5L1\RYP630'5eRCZ6s:.(.G6`F-NjGP$UBTp8W(
%#bN?u9qa2`h,bdU9_c*_<M=?dbW5ul*/6VO[oUXW#aab>#ZS?Y-.RLS.R\?L3jWrL&D/2Y:8Ld8WbRm8@Ei!]Su!_$8-e/?5bqNn
%b^>+qaC^XWYQU=8/JYG-:L2Y-iDh.^b*3-/R'@Nr4J5Nu63FfO6Hnds8=?a0"1`qmN_1\-^/&1s.AB637S`"B`(#DE5)AqqJC.Oo
%5[@4N%([r;a1uVNR6u*6M0tpf+AlbZE&Ml5Yg0:j,BjjnfZpPI:EODsV+S'EOU*$:#Ek\Vj#lGNEX?hRrAOcsO>14U%2KEn3rY)P
%/I$u`-ll\`O)NC+eV@L[8o!h3&^^WJ..RWsS:k5Sh:gid0!<B["O!^$LuR0mU\ora+GPVbP#6=IQkMNJrtm`l!%bt.1HDLI&P3B3
%4%pI>=*>ItZK_@W9t_=eg<LT`M\rZZ!a#i2.VE.D'`(qgX%Mo`&9uo3!]i/9][hVdZHrT+L"1-%=;]<bU6VuDS3P8O'`IA9jdLrh
%3-_)ll^#%bEI0D1JoDP\O>pO6=7qR1P"s;ZMA)MV!u8Y.`,u3dH%UZ;Cq&&VdYNrGJ(@`Aad/VFYgO4uMn>UGYLQu!J.L)oA%CK,
%N[d-u)>dRGo]+6PU"tVA4.:b45D)2JLpCf7+"`l;_[_Cj!TtQF;X5)b`N9NI>op&sS@c>iF`\>_)d.[A3Sq6R%N5T28'(*-]8@O>
%huN"`]@%?uFr\M9hg'poGY%PuAq]8a#;=mp>^9',-^J#D]*.@krq1(/V!(AJ%t_)<*q9)]^ON[W3N).sG#M#0!a4jZRRu5X-;b;n
%?j]po$i-se_3u[jKuMkJmL3nGUH*`r`+)9fOq#Ik[06[6ML9BDYU>HTfFA9jj\ui[@QKXZ@_#[9-n``o2oC/d@9nlkb,Vm\;$-aH
%Q'/We.[UIfdS94ako"5oU\q(`AnVk5R1&8;CmD/_:P<qh7DOp"h1Q1(p8(sS/C3AYRau_E/O,,KGdWllYr1(!R[!k#?8AG^b>gEd
%M'VgHIok8pUs<dK#\*?p_uqV*q-0#_P1l4UHYJNM.r.GGY`c"F'B@q#N9jSn]3rW1?8Y_';-M4/5?.$li[U05n^!E+SJ@)CBHAg,
%9I!5"[[2ul<K07O.2mk39uJhiUXq/'-BG.+hD_^*(JCc6_ruk/V9k+FG.t.((T@?ddZNS*<]q8B7]b->%qj)Gj/^SO/&2F5;46Z^
%]or@;Y.Q3FdpmrD9\*bi[hGGZX>29]g-U%s.TTAC[Y+`XQid6fdPIn+[[-9Ja(E3"/21?B8gk)MU%WKl:b]bo(_bD5N7(\.'oV->
%lo:\$*A%nbK%;Yr%:C^-We#fVn`+N\5;nc-KX[M^9lU%[q1_fJB02$!&Ws^K'[/e.&CHXNK(<soc8H83^+FV#YVunJi@sGEZLh5+
%XL-`rZH@)d%0]uq]G\LlLn\D%#K>^Nrdma)8KfhY6)qA$eNJ>TM',>)H%GOE'/(gZfENqEYCe:XiCb_3=V"JdRA**iLOL6a1T)$B
%$r@@GT$@00W":lFE>0i_>SZik@&e3!>WVZM`uc[sDJU;Q`4QKakYg:=k7tYV$.HCUnR2D'N0\?p@Ph\K2(!n29@OcZ;a\`#Wk9(u
%_kUeMAtM$t$0+:4>@EZ6<#sGL#00&Drp.3.['ndLUj%X7_FdR\AIn_jBmDq?K_scVP-%=`#Q2fX@hfr)7h%!K^.>]EoUbj*,0h<@
%%kEt94]c^qCtpJdX-q0+J+/&'=Z,ZiW5QkT(0tI2?t0Of!j'a.a>N2mNG:a:U`(X.2dsWKV?XJb6/rV"$`kO)G?AqhQFkcP3/>#U
%#F$^;'G$up-CTkp.ST$cLFG%TGV[M&NG,:BGo?g">.HUos+%4KnpQ0p,Lp'k4+ZsC]N#aG%MEP^a:#0/o[CNi=qetd`!8R8)si`!
%`V[N/;`60chb9#;DdY=Rj1i,!^hI&Pgm)u^:tVA++]`""o(55>btu=eQEiPQ#:[b2GT';gl6"@?q9i8-^oktK`P<l9Gt=8WBs$'"
%OF40)7Ms?+koA1\/k/o=YiP5.S&;3#4j6d9-RDB9plQIW(7fU[fs%L?YVON[*b&BA\G>&bi*N?#7ri.fp*A7MWm*$pQ)'eW7"s)m
%aL'l_Q/u45;dG@6Fk>TkMAj,nSiYcmD6%D6CYD%N@r8MXi;?l07kGbP:S7CYS"``4]\;It4BP/l;s%6J4HgpZZ7Jd7.qO=rIjsD`
%DC(ucpaTnhL3]KLcVt@FconG6F#li+Ubh[rA=f+D:(ZBD/^JeiOqLaEAj%qFBX5R1kG=PTnQbEU@"GS^.@KXm/u1O10m`$#d'T#[
%3YH)h]<7^E6T?6On#)\$32AHYXmZmGq/MZq7fk*F#=5PZ*T(JO?`Rpnn,W'9J?Z;c3YI<U@Y^]d_.cK]/0<Mh\Of2Bg6oiPF@Geh
%ki=SJ)*'LIr9hc"T1kd_HFD*%.kh$MNH^fCPb_B#Uhg_"KAOm.7\2h+:a8t?T&>AS:!8&:;iE9u;DO((jMId*#a?S(S9U"+=b7Re
%@/Ncea%K%6BIW=BFaqjJZUjmP/Ii?0@f!r?kd94Y=Vu>S.G'$2n%?A;7_Z4J!HL]m*Y_=)gP72rO/*+5?#L^uL!Wl0<OMo10I=cF
%$ts*a0fYY9Rg=Lo@=B1G\t9J&!r578Zq2I5JHj*mA%@GTMZNDsF9E&qi@kGP.*.b'F^,d9Ju2&<L,sKW#-GO]^c-Lp(NL?!j"Y]?
%k2lcR_&sO%!t;jme-KpNA8!/q9.ndZ>LNeMJ;&_Sr>Vj?m\"kD.T_uQGUI!;n4P:g\(#5PO!#=%j_1?),RqgK2CR8k2g!%$M9Oq,
%1,^ncGBk/c3@`"!5#iZ%4dCgGN0N+aN>n%Oenh0B^dtO^Fnci;`Sjb<oHPg.G`id'$#AO1HhGi]U3-hu;+"7g-,gUaXD,SOE-i'"
%[1INS(uq-6!//V.:tF8.\ZeA)E%,q^3nT?lGd3d@+CX1:.K[L-fJ/cnV&La\+>]C],a$kY1jfEnA5>d$>3K.LQJCT%Xo>p]@N3h7
%O*@R43mG??hN^*4Gu3Tn4Ndn8G-?.BR^U')o.^snROd*<92QOT6PDBFaGPULXUIkLY6*MSis\bL_OY6#X&$>Ho&\0\67t12=jhca
%!,eQ8?Y9#:II6kk&-*#[CpD_[:][YO_C=5iK#G?nhk#r8M9%:*)+=`Um\PhD:]iHY7I!Z.&.]XV"O#-n#)tm\b)Hc2:uE%."Q59H
%+Hj=hRURlkf58g!HEQaq5-]Qc(TV[Nde6Frs&*WJh69i#U6@aIg!ult4"eX5QfOQu:FL0uLA0]%a)OU.b7a_fl:mNU2\7*o;ldSP
%J,t2"%6%grJr:3V5EdWCNu+t4h5U:nV<1;[:[il3fK[0/7HRPE/or.bWA/&Wf&UIEdQWr6(F<,j9X)uW7>@9s4SNUl`l)_*Y&?74
%-X1I!=faI4a)n,TG\WI[G@t+g/?>Bq3=0S*a68OF&Vs,>\oWpuc4,!9!77,/3>O%dHNd1bp01uB+sFuEF<IT;eKu'#&0oJhGOts/
%9W@G9a?^:>Z6Uk7;OJ_DKQDCNKW-;QY0O8/8<nou?US,Jjmd\J#&%Fs%aI$DEZteS/)&I+PiY3IL_-3]7"h`B'K?.L-pbc'i_-#d
%(^pdS#RWPbge2u$<3]J]&Q4=h6l`EJ(08LL)?lB;cQb1le.JiEL!Njfc%r/#fSD_nN%Ee)36l9niOU9[ChIqF6[D)GcLM\Fdt5UK
%.R:M.`(US-HOpe);_f\%V"'rFZm8:o$;&gOJA;Y$ITMuFTdI`fS9g<U9Zi6Fg<7p73MWF<OL^CE.f$?JZg<6E<VQ6:L1aYs79O=8
%if^9MZ%_lgCBYMVi6H9qlDnO%\-A_JBGj.&H>$Fa@^>.b(c3b_f2JoB<U(jLZ\Z'R^pEI?,P4]^Pgq?.c58QmAn5o8O`Z%cd@X(;
%Hu+'HNltr(U+D\'h5EmZ#T"ZBMY,Y`J7i+<hb^>o.>i^?8/cSMi+IY,O5'en.7!1&;\0pf"L3-=Jcl_b3LPH,:,KY^4@J57m]6\D
%_J&A"3alO'*0/+[0XS_q1WaG#.@G3'CSY66]p/ru8-Q/4\Vs2"(-$LU)7rg8.NHDFigD(c,c&ho9dFBp:XYAiii<[cn$sqYN`%Tt
%h\(3'+&?T)EpSn8!deAp5?oL:Sf+pZ2B4KVT8>K]73taU)=(!9Q6j(0Gm'1JRBu/"54MPc>E6o7EoB_m6!<VP<M-jW4W6hj((9OR
%BLbo)(_t5CQ91LF)XJnK1&=o!JIs@i"cO2%Biqs$k6EIFQ*<C1NiYW"Fte%iEL(F(qM50rTel@N')[Q,P$<M\"V6B/$5besO==7R
%ZbtE?X5lbo8Wa6c<F&aNN7MNe#_"g$\YO[GAjudqTO!DR;c$T7<'8cncuEOsSiI=>0T/@,"6!*j!a=&oXI=hS\.nBR+X"^-b%'9M
%%%H.l4p;@UV:m!Pr2$I'YS9sN:t)%Erg;YBiF]A#:j5m(`B6h+n^(==a=7ssXtjV)d)ZI[3%&$ABO?'B'\3_11QRn9!h?sCii8N3
%a\904?Wi7RJ'nG++2@:UYXurFblibeF+,PaR)sI1!$7@oAj^;>j+A-0d8)/%)C]@)&OWe/JVC^%7?>2ha`)B3O5M*la'g*_K(flq
%*aqaXS3lcH;>hlL'93NQXrJ,ZklhhHCuEg^/F,+)$>km2]2;]*o>FuLWPrfl!2+0k"1g,%pZ@&(]"/._Df"($L#ACI#he7MdqU8Y
%lp;$ga2pfG@;Hdo5!`stA8T-%[U"t?B!05FD\mfJgn/"qaC#TA^!Upq0:!PqG9L]UatkLXEKcfRKD5!gL,=SP;^ST-f^a[r_X(Y^
%J^B!IDfqn(+:9h/]_YC]+mX"T'I/"b_bDY')7gF2_r[Md.mBYeN8aJX+<h\n,/DN%PDRYKGMpV#aJ3`B0]?H(Wc#^2_62[ac_25+
%L]m4g5%1&hL9k:Di1]$C^@$qe4,,SEUOP>K'EDAB64!'Cd&77@#J\>6WsF%aPj>8KI.N"+I"G];&7N:u@q66gc.dfE78TG,Ta0;;
%3KcB2PD_d7EI%\8M;.Di-n*)X_L"'k5ZWe($5c'So!</.n7,]Yr,`#T2\1.4')"?P3+l/=&2IB55Ie:#!&Ht;FDs.`3J.][SlfY/
%ECcF<"/_KR=TZ*?T&cRP_ZjElcBONFZeJ4bJW+as\C!R7Rq')C7NsYZ#mEg_,1h,``fW]W35meU*7;.:=uQ-qCE__=fbjAb^BT%&
%j4Nl@VP6hqHQqe"M2GqP$)ZQKc6j52p1Jn="\D`UE;7LloJ-oX5/Mkl4sTol>Y3rUrhh*md]O$EaD2F\J!:N&H.5mJPm7/XeuTd@
%H[OKIIhjV$<!IGbGARE`F4;m@q1I*mK9jc50iYA0AVVHV90H!>.sa=]QZo)lMD?d$52m'ihPDF8`^aLjYDp<hg_"@HinthoairY^
%?Zpj>C)_Y:^s*#6p"GC(`u'k8@6bX<]oYQ.<#!_2S0/bIWa&Q70rN)1eaX&A7:Lj7TabAJ--bB<L:H5,?E$-i@B!sOBQM"$&LPh"
%OP5Vg_Xe(ZbLeqV^')e_S@c:.cn7c$QTtradML7H0#.o%LB#GA1EjY==3S#Hnp=K1fKj&.0sKgo7?"Q<mg]XmqNA,=%3*7ueHlLE
%d%uTGZNGi;",J(H^f5;j-F.3K-`e\UC1a_g819WM_smMSN@%FkSENjmXEN\4KZZD(lPYLWX`#:Fn.2`b'dBtpA0%MiS4Dh@C3RKE
%@&slpqfVWZo4=34V3i2oK3TS!C=.pi]f=cW+gL0M04'L>kiXl'.0@EMDQpoVAbDl!W5>jBl8;+l8iT!TD5_T%^S*2&@gk@(UJGc4
%-E)g]?%]!YhQnCgoZ_tlJdYhM&l]Y;Wl@a56s2,.?7p0],`+^RJGcZ#_pJf]_`XW.BljAUXt&Y>,#3'^J7bF2#ONU"fVFp:hCD7B
%5>:%FhkS21(^]4$\mNdc+Db<-8k#,f@ZJbB,\F>h>uMpuMEt8N]FC\6d8WcJVMZ+EVPtJZ,.c>PJ]O&Y_26]F,nJIMfaNc=I4m!a
%YouhS)^E_ShkC[ZJ1rjCaGGY^GoX>Ca`E7=\?6tqf;f0AN8)KIDE@$<Yt&C]GQ8eZU.%%6QcSuj#in*'`db,lC\k#-RY2()5<K.@
%`nGh;A9NG%ZU98dp?q;*28bOT]g=H4_T2"cr-1rZiLL>tqEUdd\prAW34S_/d<'33UD5l=d[d4V8%K?X"R'^ma:pT.2talPUVNP3
%%;E'77tu;5E1cPs7;d$i5("uKl^VT%6>sEiVjK+'r,gG.WV--Nj>`;fduR0'G\_dm>,;6ur!6UAMQ&(6p2c\d0pUDgJc>&c$2bf7
%TnnkKZQIrdQWY'R5=YM[o>^^nhOO=**F"oYpXRT^4UeO.cI2dPGQO&#:(>94Wh:=FSJB?[IC%3A&Ao[lO`kEg&$(V'96m.EB(KOt
%e^i3aT?HeCp!&A\>@X7/qUc:uhFI:5Xo.fY#d3QplRNk"<J^SM`50r`5)14S<Qf$V<6bU4j4*u--AU4b/S]hb/;][]o#k]OA-U<b
%ShAQC-H`6<^M#<s"I-K.G]-J)2NI(@=nKW1LMT>^@BK.i%@"oWo9j^+qu(:%7*)j7@)b'`N.Z@6aNN_GdaU\YV2ip7`PfnfK`PA.
%W%01mL[%:Df::^9a[IS>d/9@CKF1?0O_-o^,ZMF%)VncJ@9)_'\7eV-8I'qd)VZ<i_Fr7*q->dAs5Ng+Lo8]"h@DJ^oD.4Jf1l&W
%J4m8nj!,_/8C`K:.,`;]MR#_\9OO;I+4U%ciqMpbE]"gcI'/`Glt40pkXuShc]uO[,r/]BkJ'M&-`^]>)3dGKr"1W_Mui^GTaFl9
%+3'EC.4A\h3.^;Eo'5EsKN!hI"Gn>Ke9qp\Vglk0COh"VXn$a61^7G0a['$f"iBP8*(-A>,FAcI$aTL$RTZ`P7%3)e6dT6u;`FkZ
%OOj4`GXcP@J#XB#f@(D6q#?Bk_]3#Z099@QRd[tq=N'GF$+R0?3_/N7%/t\\Q?HCdI+Muogk3RHR"'ITNHP0M@Zj0u,RCPN^e(b&
%A%@\s41/%S&UN!.mLYFY8;Q1KHP^(mBet7T_.R0HmV=5hKW)J70!jKBn6lb_a%M"IAQU.Td4D#Jf\%T^Wq>Kl#]*8jKW\Dq\K!1c
%s2de@dlMtj!\N!?e);?1''D3WiZEok)d5`]ltckr.YL]M>%!?[mY)%s9$[C401/Z1q>>Wg'!2!n9P&GmF:W!bR^Vp2clYuKnY7,2
%K*pJ"auPH8"cV7b)mGHc/*QHfRM!5'B5:0@]60bY)r+F!Q,kEZ+=j#R!<uG2fe+E*$_uhJno]"&]\3DV5ft+^@T]N1`5+G4AJlo9
%:""cQNMX)-0K\c89[Btts1T2@ikPNC9."98r?kuiaJt9(Q*FVFan7EU+abu_9L.W"#iPrsCa*IL&FFIfg/'MjP8ke(Z05@cghN.o
%9%3s7TPkKaFchr#ZHTq+aG`Z%1fF(*E+:LG<m=aeLUl'j;QbHnEet416^4i6Q5?d0VC:#mTKeN(/T#<>USPr3;EKVK@MN",Yt7R`
%9idKdc69FgmB_N9pU0'RB0hc@Y8;Nb!;7([ji\#'E$XDs9+P9'3#2A)kkQ1np&5!s=bqMWa+qOR-\c(@"p=^'Goj<SN++uXMMSW]
%%mO9SmQ2ae4G'WkF",16l8IP;\.;]"HRoR"j;j$m?T]GYQrO(AlO2cHaRq\J_[7UC1jlQO(8<Gt"RcMR1$uDlp::K]*KT[&3@_mY
%4n%c:RJ2!\@:XAhIfPtQcXW057Dpat<lR7/,98k;H8k.P'gA^Q^[E0OQLj\hrg1CWT0Bg8.6R+_PJI/RmW;%uHsfa"hsC:*:[Kek
%W/E2kb+UEprXURF`m"I67pVq`;'pG7Cl353)rpnSB21[&cJK8.T963J=Wg8AXq)$UXdb29OD=ag+1=ta3OTRCB2%Z,O)hLpApTPu
%>r(7Ypt/<sqZA(T*Z!jJQQ/V^Q!J\q+*lO(*S0\/i"#RQZ<_Lb6.0q9F-*h9C,AfIp4)E=q1R@*N?=PDebkH^*K<@.GBAi7]:Ua$
%0YF1V,KDlLK.QKV)W5o@j6hfN#iO)MUjuOu&.-!=5<o=3N^4laJ+2%bPU@O>EMdse$V.be,qL$HMq<kWq;S5W)J"e.k9suUAg5;7
%0,a='DnO(OarG=,kX"W])t4ts]ZKaLq;Wb;)e>&^&s%(SUN`(o?CdiRo'$#iPJ#U6Elk(>a<n)T)<I&PmkCO7U\!BY.?E=o<d@gN
%0j],f36j(Yf8ampUN`56?I+Z&bH#iK@32!"*:q`Ca>/h5ELqFn.T*'g/X@g:4F5'$k-[3:I.QP?B:RS-&`]B_La^>*03Roin,+8?
%8q0H(YM"e1dd%GTP1&ZMK!b16*%.W`#@#`Nn^dSlI@[oTB6/m@*aOEbp$*ITYLa/;)!od1`*ojU4N(^4XoTSj^$a';p:<4M>kV>j
%&N5"/%.W"d/OUHCAO(u0m<(of=R@uY!FC*^d<fJP[!q)EQdl^X\!ML]ij[NJ*b)WLf-&,Igq43A]t-[XmU[l$R-s&]Kt-RDe.CBJ
%"usPFO01dgHbFBSo3QWWK_8Y7,J<bkSHI+1(9@j^h^cVW@DB8P$Llqks7Kq-Hoi;l*;I+)67hnTA4Ch5h;o)"iW!n`nRiR3](JE9
%q&6CA9tm#q!MXrnN"B"g5<+;k$'RPVj';HE*G*\ih]SQ*B/0RJqNgZ0E9^ZZ(otA+MBQ;SII6@EqDLqXDLHU9ZKl9l7JZUn3<gAp
%D3/6IqathJ=SB-Z,!>bV"X0cAa#Ojpg.0Ibf_3_jO`)>D0ueWh>EEo5lQF!SY>['j]<=^oR.ou0,M`/5g`ZJX\d&!)n\R!bIe4%h
%nE[65Yje]+Lkf>9'4BhO`.YYqD,+GMj0u:QnF?CL)dqaY/J6t&f2`9ao';qYnFGV4%5[UNF-)mkO#)k^+mmlI+/8-mf,/MBcA2IC
%^Qrki]`0&n/,kdf+74&kJ+Scmqs2oiL4=VIPiH+HNjARemi]q@]\"pe^S._q>lX",B)BV-a8,_^43mV^hJphjoFA2+la8tJrp,8%
%1B6Ag$?Q6j3/t6DRqWi%s4:*b;ui#2+4UA<@2`)GctsEG!RRq^<<?"cQkk5/4/rKmep("%^okA<,(Mg;W!T+?$`X9lU(?MjkfH\5
%!"E(-)o*HmQo]ck<_sl',8O8b5jtpH!"R)[8q?@'W(t-p++K2H!.)\n!rbG8qD/]a[7=d2FK<B6"Oo@Y-(rkMM@'35Xm46>#1OVj
%)u/tKW]0G/7oXInR%oc*J0#V+*>$(;U-#%G>Y'.UF2Y7t&#a,/IGi;0W;_<tA0D*Xa.U,I6(eMnW=\i:G[6(i=nE4s"A1Y'clu9n
%4/>?=YD_TVI/+@S,l$rjDpTapkI<!m<^B]O5RTNL9RtDSD1XE*U?VlMUkh3coo(:5TPIZ)5k>pm.F9T#F:'ib+f,7r'eufl/Z>%?
%JOVZ"=7G<A>d<51O0E5Ip0U@u5dMEX/^RDuaosgH,ME=,=sE58J"4LURB1sWon]igQQK(="2.;tgcuMeOuN.@>KNM:+"0]"d6E`1
%&5kbiS1LIe@!Ua^$A*SYF:^9P+XI8NDb(7%>si?4ME1n4&/5h:-mDc,.&)Q+.k.3MTX]#5(I;c!LbaS!'-FRneGNVn5lq"A4p#%E
%Ul_7*GsikX4bG3jb,Bu8&o9Z48dQEkJ6%9-7fg"#9=DO:Q_9?^`<8i]75P\-25H\6jVQ<=n2/\]apIdcLj"B96:a7*q7MN4JlZb[
%5s[:?dSS:=KiAa#,(*Zd6%S6UP(KjmOHtJ2*>(.4?"5$@Kg3iur^:Ec62-JjK%<jcCdD]_88c8T"p>bAnN7X1obbn#pn5^$+DFZ9
%5u(QJPsN,Y7$llUO0CBl"oCJs1T3I:cCj#kI0R6;;2'`hYT!6ll%\Bp=2c*mA<"_jGQK-5i1Mfc8N:B&77A3'?\1$C)R$*$_`t_K
%i\R,1])mUW&%[+_=qC2PUM:>)rEeqYSodNn5p,^0k(@%H+k6fb0ZS8W5+U+dP'$,58I.,36D>%^nRJj9R_GFKKU,>')T(K?6#d/^
%StJ3!<^9V,iZHFNpPF@;QQKW>M(_(WeW<W!HPMAj5JfGo?[bD.,ej0^C.[WO+Z5*t<";%tCOWH8Tih\99#skhW(NG8)pjlF"$$NL
%&Y)\hl]MobHNDNN00c2:'C$GJT$Z5HUaNO;6fJc&4@J6X'Pe!];#Khgiof#0kGCDm.=Ba]f;Ht*MCMRRQkn2MOFnTRWN_1i8>kIj
%O2!u[676bPX5_<`^Ho!]bE'D,YN!`d^I>EepKugM$<\c]&<a=q1bg1dTq8I1=m/jm(:6o$-mEB!'O4&U6FL5lf"rG_f7be-m2(nn
%phXsJ+jS6.RMT=[6rbnSr:j7cildCenqH'@+mfY[%B3\_PS)<Xq!oZ2J>$D$=Td^-O,s^'c$_tbj7coHs87)j_as7rr1Ee7d)H'6
%(aB0fXsT\jn7]+0\KbJUq!`lofaoN*a06<p#\9C!Xm,*OnWXmCE.'l=''(2EOMXr3&HZcX<gJNK#EMVb-^VotqEteiA\](Sa[hAQ
%%$jJt)=LX#j_FWZ#t=,]KIg/BUl.la'j9q*L'l;j@o\,d[Ykl:ijPq]&>4SUQ'J<oY#3L:8ofJK$!<-*DLbNm6Ip^B3*<F^*sHo9
%&G'%n!]>T<MJU;VH_ISZ*\-btO&HaK7o2B(#`@iGGt<b5[Nom5<ZE8\9$ThD.A=$O;.q\W2;s+96D<[?N37_9MEstd&LA%[Pg!7u
%_mHq<Q5dqVhB-*uSG7fu$RnU":O#,K)lgl)nWaBkThfid*@nKc9U(fd!2as,.hE,,qF0\H7fFd$gQ5hMe_4>*KH0-M?j&C&`bKVK
%fk=m/59e"/.5i<H72OjtBSc\"Guc6[O#1\^EQ@/?`CQ]Q9*6HT8<I98pj;fl0e=jB``\8bB;g<:Y[<$6R]n,8!D>/tX)aHZ-!EG3
%NsXpf+;=m('He[j!*"#c_o<?#]a,7fC+sTn/SZERSc<9XT/FT]f0fpq$@$,^qc[`2ZN!6Re!-h^5ne69L/ELlElA@"^A*<9fF[4f
%iN:.I2<C>]JmZ@nDq"A58Ps$p=B.aX,c+IW$!(R3>D/6Y+IsG"3Q^!2MI"WgYISg0P.r1M_pt:a;WP\h9Y2OcYN0f:Zj?2)QP&]t
%!'QI%@.oY\DGZ/)8"FtUZkof/f9caE:sdE3FfkBHILK%mBot<D>h['-k]emIrW,)U.;GBdW"Et+9%ROU=n#kd;m@HGB"0@sRK@mk
%YQo'Lf`VN#<n3)9CDoC0d#A-;WW0&#M4IUJ<=Ja)SU_BWO%\H'Jl40sJdisk**1E`Z.pp1o5Li^%bF.8ib!d-Ut.G3_ZGW!kP0YK
%NQ!;BRo^_,^`>HJE%O'J2)_P#i0T(oP?>#;WE'(JS<r>F-Rq%44>HJZ&C(p(")M)@P3k5eF2D9Z`StS>#996RiqY%aUNe9$VICEg
%(h$f*l]tFTL^\p[W[LQ-%G2-U,8o?PXMN*DZ?RAAkO@Ae_#];,$Qj6W14mFQ`t3@3SnXeSai'BG>JW_6DF*CgPb]Y.DjaAg#L9ls
%CQWaYr3Jbj)$R2<&q[2-!!m47J;()/(4JQN5@2^Jk_]I]*9TG5Od[IFW95\$;W/KseuC@@NU&MD>F'a";P9nI_-RH")P\e?HUBH:
%E%G&C!G\FrfnXuSAOC07?eq$N1O?=J^iCjO.]b%!plCP\(^T2$!Ob[X1Q4>^;u.fsUInqp&PEmM)R66Q#,[@=lb)Kr1.n#*$[OXs
%J(2BRaC)Tb1OOX9aF_,WDutUfln\I:&FarE7cW)>oM'V.r:D3\&Fo3kKAb!!TEYkW?K?"+?6BJ'A6QGr1:I+-'C7)XeeeUHk*!0d
%?,R9F%!jt9f?m#LhB(6nD$Hpf\2W@HYTVl6Lad(\hnpQBW=72.4UbL,(:#"U0_hF*=SFreFW[Jbr>nF*&Z&h%CD^pnM4"2ZSj9cE
%EaQ_'D5=4Q?c03QiJM!['6@19I19!5kf33O4@(`jdX;SB4eba@f.\8+=S$eI:RXn$?c*_`hWoS!58kT6qpRFHc`5#C$s0DGQQiVA
%1n`e']S7d7:&Ve\-`%"CI1=*%+q+Bi%:ao@ZRIP<g`\nIY'+0i=9G&\fP\6VW92menDd"]_lisPL1_)s`-DfeQ_V!6%6si6A'oha
%_cU5%#*4*Jho-&np[A=$C``??>Xh/,gr#=XWdPEP2iu0:"N$)l0pl@JabK5YON!t2)0CgA(r0*IT3^7]dDp58AGl,g-=4gTmHc/h
%Xk&s89t[R?oXp%&)Ut?r@\E&cB7:LIGgF<)G*S[%?8#D!n)Enm8i,TDO1Q6o,i*o+0o2nDYKQCo7k\8>BD/s)B..M6`8JbL\@s]b
%9N"NqMie-"[SX_sOi^kq^5A>JX>TfZ]\(Xc]*J6h7UoRj`66mPIu#D&q`74/O=AQ:3_!,2Y1BIi@oX=d&9]-KpjXmmL!2[c<XDYV
%n3W`AqEE)N+lg=9QL),C6&t&..50aNFP4;[ACQItG2C9<',+TRh8^q@nlq[Z0fT\7Y]\aAB]J(3pT\DMepSY#(\AdI5/uJ#AlA+^
%AsRo$pG&PJ>7SjF@t>#Jq\]*\?LR3I&Ng.AqK7`g@.Cp;a(Wh9g3&@hE`n9t/a;]];'8Tif.i?mg$!'o*A<R_5@);HnQa[o*FmVL
%30Fu7`O[C9b]+^XE]s2O4SYE+6LL5rS/@g-04[2F(fZS511m]`Eo49\?1(OK?-','b>5kj<,D(4)3IcN;""d[$_@9[hoMmLA7j>p
%j@$kk1!VkK[;+^rAmD/'<u9OJ(`4.G1!B]hJIt@Ho+$^mQ&87AJJ".-;*sIPN0%qa'G$.%%,ul&]`TM;ls&(??t<9B54$&jBL]1G
%"@a0[[/*^/KKOkP%ZGr)N2EHW7W;I9k3./"A5OX">@=6`r(&:V%#f9L\VjK)"![l\j&hmg>$qL1$AB1(H=1:BE)2I"i#NXXj^bA4
%(hp?<(mSN;"?.>N:e2RR#=`sCnZoF@aNQ=`RR]j<)jM=_HA[ZcP.]SD&X:WY%ug!MIC@1,X6imkAjoPXs5JUVBoca:E(pcm2QJeA
%(j59KmNIuFH`J]pV7:^VH1?.1NH&kr*&r$8L=<<D;M/])I7lUKPb#ZNfpeJ7C3/Sd!8=e]F@>':6%EgE,PWoteXQH?6#R_fIMuY0
%VK/;2,Y)Xa"'"dtY^GI`eZlTBLif8KABgA/\^+&V+(,W6-g[SIjLENDHsA?(9ff4EO.p,Z7lgPL2*:]JBD9%Ln&qYM)oC/&g;'2O
%b_A'7iFC!aBX]e"?bV!ON9Z#3>G1D4hdRRS]9.?efo1)kIpId'#6:.cI>LBH(!,R7C1ZbFle7fOL;DSok`tRJXen_p^@qe+<o`ao
%hsmZ>*N:$U!;MlhF*(Upb?Qm5.9P8^iH2\a(o]->*#^2b`gt1[d!egr(=b6$[:&)UcE@bDWmVY4L/AjV-5<MFfg9)^2QDRCC1^Jr
%S`,:go/M!(FbZ40$;W>.E%DLE+usXI%rLF>gt9gILD<&Oc4atE1*QbuKtBsSV;W:h9"aOeEig%f3GG9!:EMf%^Wb?3QH.mQ\$8S(
%'muN4as:T9)s6LqR`U']bh0A+`N"(&\>BGtHo78g)B%dM=b/$39mQ<-FgL2ci$Y]C1.9kE?re5YH[?65=Yl3\q%ls_2BMV\Rp;&K
%QQMm8h2ViQ>)#%am`m4&rHSA0nW8CfEMhWB&V$RcqKAHtZo0:*rY8B&89So)bS\3[Fd0(!WEGGrD0HKYT'2!@dmq-V;;G5']j#!_
%%4^Pg=t1#lm:,WFFh;U57/>GTj4MOVjj-sk4BdbPcL(t]mj3Gn#TC-eN#'h`D[2_YAQ>[]m:LE:+AK('ED@Ea>OK's@kf0mmF:`a
%.%f7C5JIf]a,UXK!&#3f4,-#g.p,adA=si^D0HtOS"L8k^a^'oC_urde78'A0r!XY/H0ZFOp&CS8X>,ri)_edUN(5>q]$]`%#gla
%h`rV$O(l:E_a&lN)Gcb3,WWJ9,0[a+REo7tc/qQ/e=<29M2Sa#UW(7%3RgTi0L8n*qs\%EceHV$"r#KfVU3]EdnQ"5AD!4TLn/@^
%XDqZ_\P+a,2^;DP_a:5?encNG.bhB<-f@X=)m2%OC1+H(9L2%7:>!87?qeMC2C<[X=c&>_!i<.R:EmAIeA'7,[%si<K19Z7?<Z"P
%1iju2#fpoC"jtb=W9d-*qhb60"hp&DVG3VmUK[8'HB[mXd`lf:ke*hoA%^'2RN]3^`]cD<AK9Mi!Uidu4GV=L2fJkH0`,Ai.XQ?A
%hHuR4gNXnnEokWeh?ZUQmG'@d61[gY1MD-em1e9b3HksMn)9g*g\[L<]JZ=B"6H#l4uFmNQM/-mml]<Lrp3&,5,NKMD'*=NQ$/aD
%4.!Ad`gofXLZcs[SS'JtEPi;reePu*Wd\'Vp>>FTkF'$tCA[5P)7=lUm$&E,&Zb0N3OO:g.&g7.$Ya8(NbaPU2%gf'ji4[]#34N2
%[I]R:=Z*fan#Y6WDKf:O]Tm\ID-u.k=PNTIcE*RK!)mZ.0tJu8<Vs=#MZOUBSm4>dO.BR?I=`^to4u<^(_Co.<4]B)3gQOW`ZE*q
%D(.AMrD6G^'\d>(.E>J,o8?2K3XuO7VqJL%GN@FPMf0us[V9tug<>.2P&4fBN]Z!=)P]p6f`<oko+&t/N<TGWbdIs:@GUWg]$4#+
%R`NRZR<<%PZmXX(@s_kD[Rn23DJliMPhTX#n!';'!'B:S0#GoD*I`YsDE8+4*5\7eP;b7@b3e\#P]FsV>@T*@\in.-H-5ODNL4`:
%mQV.lgob61f'%=tm;Tsdb0>@BST8diDPu8"QZ&eWgb7G32tn;9b3a.$GLk#ed%,<#06O2K%TdhOh;$oDBfGdBGM;HRRWmK14R8P\
%1XCCqh;k+kjkSXDh`3W:nTW.C#Qlaq2Q][<ir8VHS)O`c-f'fMK-f=fQ<8@Z%I4AJTUg0dU)O9;UqKk9KIKPp@p=a7hs%K-6<4"9
%qlSWAr0^p94+DEYh]'J/97GY5-8Pei%:V@-#,.E3B@"3nA*S1U+&bG%lD6Bhh+/lr-);hS.+>9PfZ?(<l*Q:*RVA6d)pW!VeU_?o
%XY9u:D-Lj%R^PAg+\elf[kUUa%eJeTVWnrXX>d.NL1Ypi29?nnV?q6:dr!ZU!1OJAQEk=.GPd`B-C*.uZ^KG--qB3`c-,Krr<fn3
%f4gCd7+>q]4!\RqpDXdRI=Mca10<F&7@?B&Dci77*,co.3uNEqrhoe764dIRSIeKaTIX<k`[5<Ab%lbCQmNcXE7iTHBuX@[0bq&`
%W,Oh^U'7nq)+\O2OI"&Yc.'^nQB!4Emo"I[hSP;+PX#1?B-^Z"aeP\q-5nI=AJSNA/-:Fp"Z@&G2A/r_,sr]0fC!52P^OkDL^D5A
%3'8j]h/Et33(R1SUf,/a%ap=3rMIrj7CjF'@PR(c/W)&,+@\Wb_fQnO:H?c7;Ht_.VN(e:.7,mkb2Mtpa[0*2[_O.(c"1lm8eEXq
%]NJh*5b)JD@tb@BmC6)ofnqO<HoqliZb]M'qH0264"mSF/GHAFrK<e%#)N;bP/N%p"4<]7,<2PS^i8NTG$%[u*Cb[UXS?8O:k4dj
%+3;3AAU@Z89l+o]E;GaWesO/Y;i[ao3UEt^&TdiH<(DZBYnutTCYZZ-HbajMQi>pY<Dtn@H=dDQBWCfbp&6>6!8K4<IO+!ApZH[r
%`K*:b$/cL:#MHD`jZ4Ik'SP1mH$id;APX%5G3YYJbpO>p:u&LW*9kitf2W32Cm1/oo@8IK1aI8<qSEVMj6]8`XtY?k<ba#Q<MQ\8
%$u/o"g%Up_;kN>s[5A47LG:d/Rr+e?Q@sQ0gLYu\5C@k5A_`6(NA^=rqh?,a'2/#Nf-$J5eN1SDJ`e_3"a$=pKrV\Na2.q0-]joZ
%]5h'K6%rADFRD?:#"0E7U5f=/UJ0Y$B.)a6)s!`+\+4o_U9X1jTiQ*j$g$/4dCV#k0/=;AD_kQGrb\BD`":r3iG$QcShHXWfJVjF
%,uL$MP#o*gMZPOCUFB^_kaO6f"^uRuIE,>[p1`a(l9%k2#4U,C)ZuYo86)3BlC0j&T7QXUrfS1'C%M.O]j06OA\Ao5S$2Hrn(s!:
%E_ZR%S\V*!4YW-<j?6G/Z1QF18(;))K8SD4aiD$6*o,#b/uUot%11+:e+eoDr%F,%i>$3Y;j'G)?je;%R4okWi_guk6F%K*SLi57
%1A\6g_52@<km0NUnZR)$8f"jTYB=T#4oQJ7:QN!LKP5KdoLkFk8-W!c[MmsaLumj*8nu)5iI^Cb[7VqVSIiHN:Z1k0c3]dPi:Z$)
%i+"eK+cehV8E<a&%ZhunF=&KpNir7\W`_QFf+,7lgBVV'CTIMaZk_l^'p>\?Z[i"6FR/of[/nIL^\-0G$ZF(lS@:fQ_hf?=#2QIF
%:]a'NQ[R@+anjJ1%r?2Y]oUE'MLqCHoT43F5K'WdW]gsX9h^2_-YfA!1O4Jok!1hm5I)^[N-sc7;4r)%+ELaIasU_?FZ0)tb^;8;
%6BUo.n0I63_\BIN*!m9>X^Fjj!.R<C.#Tis_-DSf@S_;NDV6a<8_W[45=Gn\g$'f]d4.K2OUVXSm'Z2AY]'XdU_$Rc`6_371Nnbm
%<la$hr(9bt"8t`gNiiEa1].R6OD6iS]CGuB>,NuR1KM/-b)=7r6OcORJsG$[S42;AQQ2"_P\k[\3h62]n(]oMbAMe<BI3Lor]'g/
%q,!,r6FOOL[8F]7&mHl2"0)5Km\0/-BNP>Q3n_<cO-mrF`h<XgCqZ;[^t>fjh33XC(/'"&RLqf]nFa%%&BNnR_?Ij2FNCt)?W*g1
%H?Wis]Itt/60+&Z(CUiE(Y^G"]r56=l2u]u<C[O-W[,'l`eV:7_<Sf:as*[>i8<R^_!+*GTL.`-YupI?6580MMb:QSrMJU6NFX0P
%?g4@^f;#51:Bm6Z3X*,mi+BZ@kC.!@5TeOY;]S6G"e#26lRFqlLt]\-`1e@KqF-_UbTTaTUTMBh`X=C`L/?cV+*bFtVL;KSNSsf`
%0VOO*B:)2kH<(eN%)^?uDSOO`1?Ec@pN-$!2_V.YeB#O6]VT]m<B8_A^^cl;mBT&`e1g?D%3d$.kp"XI2q6JGNi3UHWF[:HZd2Js
%X^&"(nZ1+SN>&eP5*2bX!r$o2g/'gZ6WV&fgSr=!Mp)Z\8?ilqkC#XhK`N$_A,8)D/#2I_$lU%iJGUrc9?3Vb:CoF95Xe2!DR]Sf
%n!kWYJbL6+<c`4EPBU_dpM,0;hHsZ7o)?RUDqdf^l_iKc&(ic?Cf("G-CeR!>GCI5dde"9R\nJKP50"$@C\o<7nZ1WbrAbK5#:n3
%Z?(&0%qXq5I4S6f%$_b.nDYNF-YFN@BH29kI1"CG_"78&8`S3?"nmdF9eu(!IHXQT-I9D%Af@^aB0t`-;^7>0:\_KbB0`TZpAj"g
%HW/`9#,c,B`saU8906*X2nF/lU&_/U?VbLM`!N>g/Di\iDYB&;48@u\+-,BDqpmme$oWcmiV3GdUK?1f9O\Y$Aj;&[?iPJg[Y:pj
%Fk[MkfPbP8:XM'kp,$Znjd^0*2uQhm["$("WT<pLn`W$;.mM^l7p;AR\+]WY4[M2&^EKNe"flNJ,Ll/I1/`5I1c>!&/"fYVec>_Q
%a72pp`@?2:IC5V197'V6T@+`o:MdHg9iB9obHG)rom._Nq[:XakHJMYPj5/+.tjIdn#.2E%[`$Rld&e"MEt_RGKIRf."MZ2gN!!3
%[s%Q`lC'eaVOR)Q;oU#[-PedqFfX@PjqmLbnfK4K[kG&X3)n?IB]D6V&G%d\*5LnJaq$U>a+*LE@<tbR>d3;T*Vq:QipAfgQuRO1
%Y^+8#1LRiV%Q&d!L53%S,-qkXS,pgWM4_hLE'qhonsN@"J5pd28&aSp4Gqk^UL_(pj/i$"&&`qWn#pjs#:9(>(qQpUVIhs)Z(Ia%
%8Cac:idha12)+gp7TMK[i@C<+@DLu5?ZW0cH4%j^natba*c[80BNjOs'SnPh'os*+2biZL-e5[hrsUsYdgP(O,?\Oa)-WOILkma0
%eL_*t*8mhbJX&;(p1TOoJ`:4"J#0mfVH$+<k8ePp+.5a7@ree>f6E2-YmULLGAIeel`_HcqF>=Fk,/J.nf?Pd%N._]@6pB,TFoI^
%2_'(\7cFq5Lo,^a7,Bang4CKmN!,?3B,13;H!8!;hp^'.H28Q,a6t!]r@nL]f@tbC6F+WN*HBj4g)f&*+6MP>rUjfb)"rFQS1nHp
%R)Pa\bi6l@B%M@9fOu5:li($]f/Ou05"TB,I*^l6QLDrP&bWg_cG9<`3"!uQ2RTnSJA9^n&`qnc<2kEG[TB_s"`GIm\o7>F=->6V
%B9;Z2QAKbS0O4_>hcq5Ele$cH`lJb\.o_P.G>o-DCs922i"-$1%-eqn`Ct9nEX*aDe%3HWPW7ZE]dfD;lkjHTFtr("A$G5T[@eqo
%R5(:BDWd&tRG351K6M]B>u)WXrAk8gf!kUp*\6#QF[Qr:kssN+K9PcNj>hf5^sk'!43X[\BH@H(D]`TW[pt7;4Am@"KiCJ%_u^cl
%`I\75!,)oE3f_eV<L>6H(e0keBIdo?(19MXR-NM-+^k6b!#(;E2CT.Z@pJ\N/g0h<52]">9nH'\iJTG]$Ce=45U,c$Q8oYVL.="6
%!bi9Hl5UZr_BgN;;.MNc+"a%"2&H]:^c+Gk0sHW_BGT]DKoj9Mg@YY5/ND+8"Xc!H$Xj(,=0OX],h*tJ$]jOB\@J'nmKSSTLT69Z
%d/0s\:3?8]9`delTErak-8[pTVsCQ\Z(Db9_bDP&Vui#4M5MK6ap0PN$um[H_;U1dUQQLbOQpE0?*sK3[%[Q!OFDq<)fTo'J[2sj
%2i8/5#Z[Bd(0RI&R7[YfY,Ga"F$d*q(&`c0P:R_6RYbh=V9=H_LfH,iCQ'5r2b2@3\lkt#!H>?K^ed8<#bi-fp0NJ6Q'MLdK#ko'
%*"-\bMIVZHZTo(N(r5#e$3AtNXtO0X!7YXMj_.9ql*IEk?\Bt7]SOY^lP'uXeTVdp1(#!\_-61V_2qRfYp4cM8]c-MSq:l1?HdiJ
%<45=UD;T`uKZ^CW)E`2B5rGS/jm%i#)Z*$V?4Kh6/>;'s:f[7Tk:F=_GO`SDaKJW\2/&s@F=q<Kp!3-8nq"@rLr-V+5YTD#q$$o)
%.%`Td-]tOA]1bXk)/(=;S8VH$>_iIT*W>Ah\N@*2(k0bl0C3%l8hRjSkF9um\o!MH=!L)NZ%Z$5E>d47[onkH:Ut\D#]fP/jYhPb
%8k[8BV1>oK-EUL;UmB5'oNp@\(as+94]%L1O&ks[_E+AsXG"d+'(KM?htq9$%\7IX7A\o4ZtU[#aXE`=2MYQN<8.2M;1'G)hnFX/
%AOJp8o'F-@WoZ]h%-11O2(9j,<Sm/OC[0^8H'o>`@W=3Y&S!%imL9$?+,,uY]%o5KJ%T,hat!XSh4uLfUR%[;k,!^^)._:[[D.uf
%)CAD_7`EDW_+n!,!ah8]F+TS1WAr["VhoB$(VphIE!0]sgC'K>15Iu,[?%jI)QSAng*bI=5c^caA5SYLaGi)_5?bEiX"#ocT1sr&
%60fS'P.n]YZ>dDTeG=!YG`7F\60C?\%+j4^3mX&((k/'UDVm1kRs3%uqp$D&#@ZW*qkuc?E7Ea=BZXuUo&f&<g4];Mhs!i-6H".&
%AH&E:#_$.K6la+MgcL+>l/g\Z`#H0k&_r0a,m"obm,!5Zq$o_,m8=>V?"J9ZEO?X/JXhL=Ha0T,Je>Uj"]Ak4aS=$2pZBm,pXXc0
%&@^MuUA`oXrq=UGmA@S<I^*m!f@h`pRpUNEDA2DBdbBkiFY?Ckm%)PJ*\>VVVuY"JI4&Ns'k/!2YnqseD!Pp58J>J[rk!Xa\[\p4
%m4Y6B*iHq7D9p[A)o-Xd1i&>DX934c:;3f#M5T!C^Y/H!_Ne/n6enpW[NT=RA_lM.\Z*#7\b@04:>_#_Sha'eIJo@+;SeB:UTE8B
%5hNO74u^3(2YkDL\W+J>=+9[:c)YVF>-Vp;gN;O85gQRCbuEH6[..\KmTmQO2-[K=VH?<YX`",3G+WpX\FnW<4El[!82'%V^Tl&-
%^$T?h[cb?7:"I"3[o'cH\Qcf2@3G0O+(rU%T^?!PD]ac,j$h\#_5u;725SD$]p;-c"a,f6,mOHB2TA9#LKdtAdDc1hWWL!u`<ic9
%^)-tol!K_J(pb4^I59B2It`,SAYlSQ!1gY5/;b"4Xr<lJah%/l%[2U$bqQk'"4?Y\L0#<:k5<LX,rMT0@4F6%-:iMaW*c5R%PlXf
%W'/Gua]-EZ8Cn^T#W+R55g:Q%`IF'[?R!,Oqa&cB,CZ)@f@n7`Q#m^1p:c?^VNL>^:>PU8oEI+>'G0+6F$I"Xj8'88T>Ho\oD[B\
%b^-AT(d/fPjuln^#LD,FM;TU@!ICC4'MMO/4AQXEW\O?j0$uA#VXZ<up?n2"iIo^kIt5V7/JTla.%cD5_UdI#f&tW--s:q'IMc!(
%.6_EEc(:(sfcuCo$`\)km&B`=')hd\fJ5k>]H9dX#m>(ZoDMB,!sk>qXc5n)@d5srbO,VR(Ir36a8o(^FWWW(/t,o0WPM*k%AYG"
%L4HM8!9g"GR[`eP2%nG3ST)9#0h2Vh)Y:3+2'(]1i)kIG.p_%Z1]"`_@U!E.gcpTb!"0t:PP7)rj7;Rs:X0!rHXmYp)RYe&N9ngO
%PNEhTI+u>MpG_K!]t\o4s#iL-3H5Pi5#?XFeYZ9cVo=]Cc.[rXdL_"#p,m0;J,]$!TDs;[(js1(bJjN$m%[p@&,+2-&0pP:>DNsd
%d4`?DqregTKmiS$0uH3OKt(R-"s76."YK<2r3.=!O"eM(CcoKFqref)M$;.KKI7NLmLc<up'YiYni^>mMm^lXR4jl4&7CIYk63hT
%[5;6'NO:)2.W;CPmrddF8&*ZdA%BikB9-W5Qhb-:(;4@BA`F"*=e9diZcG=VKm7,M2aE$fp<bJ1--L`<2Ha?c0D!<Vj'H>^AZs]G
%AKT_pXKq3e.^(Bb^!81P@17+u55KucAbE^&q.2Dc0/Lgm&%p+@CCbc[AX;6I1=*$[^roEX-=lV&!.jC=I7?O"BFU*N55GFrB\D]o
%,2,Pr&/FT-?\jZ,r;q)JI*^CNC$kLuVPIe<!%BKa00i1R'bhdf<PR.bC%ZnXPLD_lL$36cr.kp65'dA\C*1,QP16f-"&80X2+1F@
%kSKtnIIrGZeNT"](gS^S`X$?%D]5@OIImo/f!<oN['b;%!-'Uf]h2SR:9Tl55.X2HCY::)@&q>]9OY!lJ"=NDqquT8><VCs,$TNP
%b>bpY#m+YGkS^/%jdWtZBZksPS^R5Z/OX?s6h,;&>BUAcgZgbJS_BBr:4V-N0#s=CD'/^_-b0+l'Cdm8>Fm1F1Z.KSH(Fhur?CU;
%I*^F?DfpH@b(-P[rA"U1h_DouX+%8Di9DY6SI&Aas6Eq"4;7j5\:!0!I(1pi,)j#mBEOd7*75TRY#]_%(RM%3N#D@J0i+Z'[XMc-
%jfoW]a/.<+A&r65(e=#SpkuH=dcHJYjRTO81$.u*+g,(]5r#fQG)c%RZ>5CRQi:QT1RDBWXLW`;(iM%E&i&NRY/:6`/jD24T)7^i
%im22N(k]!J2T2;iYmmr$njJB*kjj[j1$PuZN(]LdHAkRb(IX'TQhP-O;&;0"PZ(Y3,HSJkD1[4/[VNFp#i4p>NdQt.pIIih9"F7Z
%]<REe^Qs!9a@a0=]6beM?R=Q/DK>N/rmt*;*neY:a`idKjbrcCQD/bpJG2T3^.?(e,Um(GiO(dZKSK4l<PD)DlNp3koRA/%Y9tmE
%D<q.cAA!-7o%D+^P`YW1>J<_Olab2?8U2n3)5-(Sd[.-Lo,d_N=/^C-I@4FekOnaaIYjZJnsAH,K&.`%q%?-bOhZ:#V"[Dg^-pFs
%j=jpbl900TIm$g#Ohc?uXOhKM0@TU^%-C39]mSQ"PeEZGbV,.Q*al;jBmUk<k55/^ia.8-7AtPDf\*=d]f5NK<VkPSI.f%@mt!]M
%Oi!FjZk/'IDr2+cmu:Y#Q,n.OfNtBErG=(V6qMjMnnZKG4MPV=1&\se%W_NBCQ.Ws4bJ-skSe"0<G3u"q5Xp:JG#8VYn6@WHcDG&
%q6i$G?R7")BE.'<6i=^A%Xh^b[c[<(^m`*k=b,b;#C(dp>q[u7F7'*7^jK=9%9T%!#Tp9/;hu#&?%\Z_kSdt8ej1,2"odjFrVi,n
%@KRp)8f;Hi&^k'8I#'[_kA?#7=L/a:%T_0eH*C'>&:LcP.7>;[\Hu+=s7Tps([eT@R,P]S5@YOZ["^Pp^\eAB$pV<lG_R<r!_gLZ
%`rO`\UYdG8_ef:e2pBiS)2H!)#]L9[;h0#cnV/4DiQ(OVbeqZN"Ls5PLjGV?=EoC`q1f\[J";-mkg.j@L`aMP@NdoNj2"*af(VkV
%gg'q5@`F.0B-UFdcKfkr$k!:WM&@cPE"`2+=6F4,`GBsnY*]mo3ao9'Qe*[E\[c&p/S;HlD)#BR5[:BfH(DNKPOL>QEU8#LPhYu<
%D1h2p)WMCD0ou/J__Jbm30%iI"B^\F'C+X=B(JNi@np`slWD23K^G-i@sl=Eh[ni<UM#\[=Qa[Sop@+BN;$H5X9eDP'/VH3j2ZoZ
%foOHJGOQ^?*.?.`D"^n_"'O2KKE^%JN"I+ARR/_UA:caL>fcs82>J+]17LWfadfCK;6nK5&61L[F,2AMmR2^\R6>&5aVprdA[5np
%7%,+-5X4:.B'ZM!b)]:@?KEh)6HmT5DBWoZ8&#knQ.b1"^G9#c)4&hF3lgfd?\E!Y"!6B'Ie8OP/Me:<3nL[ChQO7;1XYqXh_J,5
%!QJ\_UL*+gk19c=Q^K#p^q7hA&'W3:pt*'Cq*bnhAU[R:Ip&Ng@:3+C1;q#QpC4>\o9$6J0`QnemUl[IC^j2ts8SmC\W.uXZ0\ZY
%6A5CEYqL-ur=:-[H<[37rr/a^Gq>lY9QSnm+M]&%N0BC/Gkb`c_*.3/Br6(OI@=b_U>I>5AhsZlZZQ!2P;VsQE6pI`(*&"PcBIo1
%T/3;R7VB0Q05Rm-I:77FL?#agSV\B^D.[GJg#(t9k1dVS4&bG&G:#r%_=4OgqL+Ces1SHiO?`>J^JFmRDfZIT$OcO['[U[iq]sMk
%XZ1!e"g@`M,&#kWI)coFgu`N27J!u.>g]Q2FKe1ADu>;BHGbiba3>GQZ&:DA)/p+%[#0uqT/W2ED?k7TS,)tDq:9bcdd"^<dRnR9
%?,Y/lm-::1<oKBt>Zuhu^J-B+!HSfGqf_1Mrb9Kf%+P%&\QNFE&FKo6[:)=J4OdUL4sk"r9a;KBi#iLfC@7auI+7M=O-*VrRP%?M
%/Sm'jp"t:&]VDO91.i?k[>58SPgq6+GEGq4WK4JkKtAtsC>0@bl=uq<GfsntZ%q)&%6a(/1i.R;f!K:!%+i\PJ(7S<=g$j\G^-CE
%d`6G]UqVWMRODtog\&0)nTW:U[m\m8LPH4@!-o@u2V3SB%\%D0&RnuCLP$5/6g#]5rqfq!*FC_JJ%dUK1XYlL1L&;bA'JVThrW*p
%MXL5,Zh:KIgtDVn0C7@YHMoaOp=%7)T`*K+oT!$XF;qthXj(GfEc%]%^<gX7f'!d`[\UZ4Z)q+*%`pV-K>1-ebp*0@7,)WLq3Th%
%*<WdH*Y.V=:H++e5O]$k2l.!2D@Z1)EcGG"J!3EE\A%NR;s[uSrp,\q8(:84K<"fHAZt.lQEFH2*Y-&)2Y9ji?OH(@]\h+[$`EK`
%`8,o+dbs_WT>gils8K/#9<BF_Dcs$Z;Sls,egIn35Jko+i,<iK)\GBs,:PCLJ"Ya9!jD0RF*dg?$#f#.l&G[n+4$&TkXSt`*JFh"
%N_F5f!:d=oSj@-)'KASGWGHIhFDBC/X:$A+9KJ+P1h>t?5JWk@PUeV3O%X,EW+'GQE3^8horCX`!PLn5[XhG^U@1?,nDpW8h:Q;@
%!2`-tJhRInfh"j2R%pnI;?t1Z&?j^G60n6^7i89]aZYBVIXfqClrSt%`#k&[-el5t0@@%*U4giGHmF;%W[R'JpIB*tKO?Kim4MZi
%jkDhKT<CukOE?N5KXV+V,TRLe"-pnH;P6/bpW"8j[/+Z)L+,LW7^C3UT7oiJ%tIY>NA/_e@M47-)S*)M]d"`TR<u1,M+39T,:c1P
%J[MhM+?cbe^.@\2[=o(#Zc\o4F<ltR6qmM^c6hL@e>H[HjY;G%=G"nR'mV@I5KL*\=mEFD_&_.>7KQi#&B%ahksC<'=d.6b15TH.
%H[_O^n9K!U>QR'57Ro7?EF,B7TbXinjXf+H%;?PO+6pBjU@HV/`Q:mc3pkl5QFn"i_\5#fOj:`Z(IC5l3WS(?aUhl;2Mg98fWR(K
%m:&A#3-A,h1_I0I,OWrqc^Lk#nHKQ?n;Yab[OU?Y9:QA$*>#3-jirN6@tHtMXK:G$Vc"n\_5>;OP!PuR**N\QeKY5h41l*'0rARq
%+@Z)h,a6sh0sSj]>6NGUEU6Qig?+NiL4(eU+h7gV(GW@!FQ")US>&]&TNX)Z]<%7E-c:OskH>138;]r:@7,VZo:eWL.7ts7`/9p3
%=^gAZhPDCbE<3`q,pb#T3S*Srca_5s3+bR'RQnP8;n:aV3\l`2qDegj3_pn/8gH2Z%3-6"E#VAbM71"3K+s9T(=X^HQS_YTi"5mr
%,4*XERC3PPn>&O4>>\K58LAu"@"4G.8L-2!kLE`l?s?K^""6!tK,)/I6]?"bPUf(`HW-6*bSF8UA%(mm"N:@QXK^+a_-II-,`SH-
%"B!@RVA9/nVM%d<2A2cT;%H/>(XAD:^o">XB%6NQc"]bR[ZFN\,YP*pKo.oi-6t@r$GYaa?+Qj>.srK;G,7ol<FeV;`$#G:$"*e(
%(DmCV/6"<R#Sc0ZkX5FkNR%%rX"hh.OeNC'lb+G\Nu)u(7jh]u^okITF\#F$"M.=(5b9hG\U3$Ig(k:MGhc_$b2=*N*X8*tQ)Nou
%ZQ_.>`abE48k:n:o?b4K)pf;90_T/NXNN#g(0=p1>s9Nf[sT<l@g)T=AmQ'7ct30;cE_467L2&*#P8B;0@bd]!1IFW0(<\0,0Lm'
%AE,CH_"=^6f\0T!c0>OgC7?Y\>sfda%g@Mq)d&0GPWmW.cm!lXKW4]#N=SUA'L\ZsOWVZAB/"de\`*WJ"c[0q<g5a4g'6G4UEp\=
%&]&FRGnQ@EJ-i?58nRDP[)P'jdRc-D6L?u%C=m=L9MZq@BUT2W%_X,R0;]?YW+GXdL'5\2Rd'`AhGYsiJ;UQpB'ZJ=Lt+$ghussX
%`aUH#,*Zb+_2a)Cf"0]#5R'L&q/ouFnU*de@teL!,_?>ZP.\4d'u;gd9T(q.=co89"d1`B)C/6%'rCKM(!nklgae)L5\lHtVR*9L
%_Oq%@+f&iF*d2F2I`e[<8Q1P3ACrk2@l!X2'pC0[,>Gddr1pk8_NA7";tE-FLtOcDP,E"s6I,nV."+:p/dt)jOJ.f<kC`Is?Td;`
%@e_YE`7:_J0km$IfekHtR]-q2%FsgeCrp,m0[KnF)@9!^9dN&8A"+GEC1,(a%8BrX/r-6gW61>7M@mKUe'(-MN<N)k!tBW&[SrN$
%:M:\a'm@=[.q/]sZ+l\O+^>(h+AcRmE.VW#D)PMBPZZ;QfN%J5H!&R,_K/D(^Lj1i.Ob#<WSFSd2taPlYXUG0$Ig><65',O`h$a#
%4s%[J*f(_8UO[`<1BA%\K%Ro47a3VK)WaE(.NMRX`h+V9(q!GnPf5mIgiD#\G]c5q^Cs!7oE/jT$p5jb'=@Oof'EI#0X9:b/^0o^
%6>;Z#aZ[OGQpgmIF'B<36kZDj=r[g+35i@>\<*G>getBSM"ti2%%!qn>Vqos0up0VC67a9@Nd2B7HV!mAP"!Vf*p7fe?310-";7]
%KDsQmEa^<j-BOP]3Nha-\g?CqkB,-l8I#fq.rTIUV#q6!7g`ZP)"4kj#QVQ\/@u&<0s-![F7J;H<M[4q4@/uc*<_3.ET(HNJhV"L
%:0>8-mfQ^O(BO5o^h]9uopEOm_Ekt=4uO%5-2_qcUg&I/U1Da53Il'$'@7P8*>SDc,+0,R_=nes1*QWa"1%74alfqF)jXlO(&gC!
%RPSFk&JL?AM4bR/)HG9jkQNtB&.ofXojlE@=No#R\I9^KkuDQi&5ke]fO-^%rmUII7Skm;VF_(78/UDRk9GZ+W@RrcA4n'_d,>NE
%i.:[XbnssRB_K;RN\enpJ;/m]"A&ke`#$QG5o3poYT`dmEjD>J;EG1-9<qPc!V@fa#7LZi6]$!m)^.I#%Qi]Cr39]A7Ta$T2>5@2
%f%c9O2"L7SKY'DUI^#`$'KZD$U?iC/oEAr!#7Z),MqUGE%e-_J\JNj5Jg:A]9pe=<6kEp_Q#j'>PHZ4#_(`%4!$7s3#J/EAKGacb
%SQ$aI*i$<8ZWPGuYmteh9))=e]NOWr<cc84<4Wt`5;1aQ8+"-f5SmDL%AI-]">HR@S3N\)9#JXQ,AO;Z+VN'p/gTJdb+,d>ocP`^
%g/l0#A(@<))%[.2P3U-jR$Ng`I7A15P*?B4;:?P/`EgpIk(r$]@15X>(P+]k(q($G(8sZMBPa0J#lZK_QkB>q.Yt(>gcW7cg5*j<
%Y#r=Qd]ai!]ZgJOKd:>f:C`4jYRG)08<rWq<YWc:-[=E%\9$[aik:54-AYR'Me`U>(qpgQapcjY?0E.UP3]5"VT3k-L'hkZZ&'C*
%;!"WdOMZi_)./E3T+N/?b0r5!]ef6D@PL<VYRmlR\7_"/H8m(QDd9C^"h'hnRMT]-aPAsKbk*`V60W\_O+pHoW)LdUeVnU,pf81*
%NgC!UIYKQhAW@e04mH9G\u"eTSUD(u4pPNUK3d^HN$9\#q1^pHB<-&0&2n$^9Lbc\hA/bP_kk7N6iiVT6k^0Z@VlG/j/>B.\&!W,
%9M`a4@W'$92l?Zt@adSR&5_G"=nN9M=A7e^C)5Y,$Q#NS(R;507%rj%>1K=61'bVa3<2M"pbKu=ZFS5H.$6&u;;D]dOF\EeMlF2?
%*E&+?_%amuo!r2a=7C?Oq%s_FL@"tXICJkP';Sa,<obgk8u$*`$;T9$PY>V[)WN;kXf)DRBU!$O5abL1esG<_8p`";lI0oFKdh]B
%'F".1]2kg*8B,#^N&E.D\aKO?CIYo.=AP%u1l+VjgRK`9S(Gp=cF+3YXLkoeK,=k._c2@:&lnuI^mssI@U"LMF5'S5cuQqs[0Up=
%'^ta,A#=+h)#d,phe:@^&L:e/#F[uHMM4QY(3tO3KRt[D7IHeJ<hu5kX$%!Q^!@V'Ujgl8$0^q.Ma"64Ldss6[*:Sh5X<dVe[0<f
%.BX3Gj")+M."H&lU)$J`'p9(k,.T?p(X0J@q4-8sf+=@fC\&N80Kqb6"&V]!gt%XjW<bOP/O&Y;Y>Z]j;Z[OH0toQR[H!0NPGPOF
%H0s=WAI9_f6*Nd##^sP__@Vrq;K2nNKbU+CXIls2<8d+_\l5pa)nh<_j$E""1X6.]9!i>Q;N5=0_$rIBC,!O4aJ7C)\e/eV,V?MJ
%%L)KEp;L`I94"[oZ)UOe4A&Oj899W4qZ]G7/gbl#XSPY.CKo;g&Wn2RMDu'q0mMS`U^:dl_IeJ<r3E[hm(4V%E.TM4ifoIhXPUMA
%9dH5[JtC)<MW.5\i3=+..pR&G'NNj9O:b8H71uLEIk]8L9;q_A`L/3Xen;&43ons>G7)nq<P9gVi,Q#0!qkk'F=4kfB&:`>WFP`&
%baObb(#2&R!Kf,4@PDBE:L$V+b.17$Eg_EC0Mo#;P+EIYDsT=SNX0Hk[KnO#;uI4p"t5-jhBUqSCa9[J)9;#^'_ONr/JJHKdrI'a
%j['+$%:bQ\N>lJ60,e>b9eY50)MZK):f_u[m`D4!fWpA!18KJAY\Q`ihN_4_KG?6+>o!niRIWe%Wpg<ZX-q3N@<g9!,n2J3(+MZc
%_D,LkDp.KUUq,aTJBSn684J"g$U[!0^4kq]U8>*^7lG:Djc)_B=BTC$Lss$Xe'J$Z'pPA@,?P`J;oEm0arcF/Ul43J?@##90%aCr
%UVDVfaaTAH(ms/K/qtq#IE9gi)id@^2V6&q3E[c3@BY)r=7Rfead#m6G0,lk==PL<"o3kLRZ)uI#E3s[#Vn]NCQG`L**mUf(`k*r
%^f)r4:_oD?P:BUVT>75F-&+sDehO^6jFf<'6.)dhg0Y'[(ZC*c5cl<Q:U;lX\m[q3`p1[NR*dg!;DH5%A&^u]N"!Lee2\l&Q2<QG
%V,B]::M"Z(NDqOjoL_"^,Bi1ENhsAY<lZ>sdTab2?<OLB?!F&i(u\OWm25.>lZOiUQ'o7=oH`pdLN!lNbDB%B0O;uDSM+53aiZ*%
%j)UEhR=CE,&sVM`SM[5>8lr%apf(<ao_;`bSBd2UTJ=!7ak;[oF0JAOb]`cKWm*R9N@G;">b7e8Hb?Yuk%3uAYTBRqaRh4H&+iui
%8hpWm*9#RSJ;tmHEe!K50BT<rRs_'?c(/1on,@<3DC3Hrjd9Cho]*`jD#<bn=%</l"0TT@M&EDmreW-B"Q2Zi";L&m[jakQn,s)/
%`!^X*iZ/gliC$*MK&K*m%-2Be.i/oZKOG"Nd,D'&blUlbrI/0.:>k:t[XpjS`c4Q[g>`ea.--&V$o`3Y<^N/&25I5Z'*tGfOPW6f
%'-e0^A\85rKR68tS?9$M6HC^O3'@SDZ/^BI4G%E$^,C\A4cgYA#K@5.3?^aUHdWX3]F[=U!4dVH-UtY^6mn4E@?++$PBi`La$rqR
%"^a=,dgP8Z@]TVu.2]-?liKkOB^LMSg+hE;^,f\0+gh(\*PR&/$6jP<&FZIKe]fFoK_9N-UP0]RbB[%==obmS`Ocolm?664C^U^#
%G%0\dCN;#kP=O;\c$jE^4t@k!9Va1YF"F;Uh`99=aoNNPm)g"_du=[1+nM#_prYUb&NK4&PaRF#jKHdt*%/dLXNi=2[Z/b$0KTK?
%P%qJ"HW"e&*aT/a@l1A7hD)1:>i3!+PnCY<qNWqN,U`8,#qZB2hnV!<bYoQ)i_!jPYHbF*l=ie4\asmpS$b;$=lJoQQ@i[]f&Hn8
%9^M;7Y(Z34WE*3spg#EAHebqX6#:Go3-jTFlRCGU0;%`+8KZ8uAZiL\\WY^f"hdgla&Q]J4N^Tf5KdlSq98DVR<1+:m7f(1AT#53
%*%+qcqf+XN9_5I/[(56*$uilQ"W'/TrIl^\;1Jg63,o!#'_2u7\8Vj(mU0^`':W*SL_I\9E"b=]Z-X45)R9nk-YdZ&2,87)iAjX=
%7[T6_Kk`5Ra9h):5dFkr4YMmg]>?oO(?L43%'ah>9afHk6;eWnjb0diO;T,f^*U]_^;=7of]Ik1(+/4_e-rd,6>lr"Pbl#-U0AJ-
%'?=<:TbHn,i'cd1BIP"P&XGd:7QT3>a5-j>$c$icR1&/!U7Hm&V(4#F`)Ks_#XqMqXNDV4_RcsQ-PCblZtN\l,GOPT;?B5T+[^UI
%\FGOb>N+[r**XTMK.^B%C15J4Ufnr/"]]'Z>=C-uC&@8O]t!(F4'al9T@/,X@TTT-Ge,DrIQZVRFJis<o\mYPP"7aDde>l&a;]>7
%q.]R5_[P1-5\A]q'/6Z(GJX\bgaU0X+<I6f:*<pf'J@LMRN/$[*DZ68@3U^6IAQ7jUWomS14bG3d;$mAa(`<X!QV`X0S0r=&CBA$
%9`2<1^2])n\+.p$Sp&T1b'7_rjNa>:m,XFC3=nj,`fq"O@9tB%K57@9gl>d5rQ5-]ki^5**JipM;E@Y&SU3DBe"*0f>jD6s1Kass
%\hdXtik"_j#7>f*cjjT0BA*iuG3@ng+[11`%FVp2><lN<!?SVOV$a?>$Pe'N'T;B/\.Xif(`Sh%8l,kN]M]c+nd2C&N)>kn:'3@X
%H=j!B%K*l%<[@\W6@-Vh!s"?L;MUg'*Hf3`VXeeZ&JRN!@oHrN(HUlt\*l/X:u62gOF&j0G\d!qZcX!HZ;7<hKqmnM4Ofq"(ArQb
%K//pE@-VsigYhFa17sPn87LF-[E^?"_8]j8p&h#G=o!]VhmrW:a1lZm#I_C?!/Bh^#;0Bf!#npG3'3?X'-fm662IfhJp[P*VrZdQ
%0q?Ah6T^gl"T]fJK`_=n(N.(s+jtpCS77<Y_)Pi.$`S,<0D8nf4C`q+0$1qa>XF()=?X_/1HB"k(E,`m-01>C.5HYfC?c&SZH?,L
%I;,nH/B#W:U"Yc3pp/7'-<,DP5W?QFZ%PTVS9u(*>jraaa15#1<j=Fs&u]/k4VqMieGh()dA[^5kg?@T\c>?'E7>\al/U8=$0p$D
%d\R<`V$\S;/O^q$:DK+u<Tu!!\fb+QVJ79^:>M2N>l?.u\hIKhMJGMq:8-9kO.CU$$Y=M(`YKEYPa2W[Q>amY]XCZ#[o:JYZ4>K4
%5'_s:TfeAfSE7n,#`^oGiknTH)mu[C8H7>XcBU^VnB[;33?Z_7N\MYj=XfiSi25lfZX]r`SH+Nh#J%F/6jMXrjcU)`G3>A*=EZ'h
%%]8sF?lA[HmSm9d&3s=8&4p+1#KU\K1[FN3r9b9R5m?^>gatQIS6K`r]`U](rf82E"^/8riLWn4Rk:>4!@8k4Aa:.+qDC?[^skH*
%Bo)(s,s+%>qoXa&]cG+X4$=/DQ!caGn1,#r!99BKe_V+Bgp4Ni6D*0"hh+h9/Fg`b>8l21mc-1XCnUQePnolR"g_H1+=MJ_g_oOo
%%"Y]e86RBfm)&&VK_`IVhjO.kr*T9o;]B*nqK17!gpqg52/"(toOiS!UN9Q^fj;:0_#OVhG1ANfUqnL3fQ`'J/7H>J[ZmnO.MfhY
%'OGSeKGA0f0tYdF.ca]U^6AKf<-rHN`Mj3T;&Z?W`8DX&j&DBsbf;/#\Zm<U?=ea[:/T2hRdAap)j556A.6)E,AHRMG^3=n]oC:<
%+^n,Kc:6$Jd[cAu3@-jJ!9]RJD5>IV(YX,*;ce&CIlQIk>k3U\_B:d)Go4*u+4d1U49dCCOW#P$;JqB+&6He'm5h0bkB+kC$kS[g
%XJX-2VaQQHg8d(4G%]F+d4uhFrA]L9#1lIK_:O\4K(Mpr-H2=fJn`b!QGBb(7!E._i()&'OBKMb_7M*UDIcqcbL:>7gF6Xe=LV5p
%FoZN_,461*[jpPnK\\,]]5W"e^"4?M_8698mr\A$8Hmu.H1cgZ?cdNB!N\pF=-B.uS^C.TRpT,7]tc@go064_2`T_p2f'&A.=kSl
%K3-/Tc&U;H$`E?#!ut'-^n%8cV#rfKJ*IDbcMuB;gu*]]YHUk,Vkda2%Gm'7YG)J3,WUZh4`6O"88qEg6,C(N[-;$mKVNX"'r7Ci
%JSF@(j"f<g>m/GBkhH,n8ggb=G,A.;:XGo(bDV"FT>F%&)%QXp,FG.jQE&CmO?jb&30rMKGL(T`KRq']qE_[WK`OcYZqupR[p:gT
%[NEQrUecLqMB0R?8=s$Lm#?:M7X=CU)Ro1e3YsqbdTnOY'FcPS#F77RP`X)N%lZJP@*WM7ec'%5DBoE!NXa7go,*(VZ`g!!829ZL
%=DtPH@aq:Y0`gjCR'jc4>EN1Tq`DU_-aNf^6`]&uW]Z7_Uq,Bto_B1#c5P`"s-Nq)4>a.h=ig,\2[*ci^]9A+Wie3L+RgJgH(;G+
%9`fK1mj[F:/3U#A=6h%WS8)[pZ.W%&9h[4hq3]QZX9HAijF5OcJ_%"&U_)Tji:c/RD1n5cY5MfOU7!i":nO5\Xg#k-gY4H1=`A0Q
%q)Tq^T9<rWTO._Fo!=W)lB=<kHoc-TZ-ph/2XNdN$X1@>F8%02Hh09HZrhQabq+0YQk>#0m(Mh3>n-'>el!;p:X:IHY!m0AFt`Rf
%[9j^l(fTl&^An/85QC]>c(\k3B5dTE^t%g_:dJ#-LC0LH=B+o1/fkb@eA\58VG8`Y1j-+'TW*iF7>'Z0<'e\dS1=5bYH02b3dF`4
%l9*9?)A<pr$Ms'u=$]J$^C".*)-5>Xr]\A[/T_NHMY=E8B*D##9IjfAi`a0X!D^'<1j/Aki4]4>isM7O3*4JT`O_f#\p.:17R#rL
%][Y':U8BR:(%p1t^Oi=H"r9q4LP#a^I4Qp_l/Z9hLH:i*d+$+TU(-O"A'r]iia\*+o.[K6d.VFa8.0`G=jYU;bCZ$TAepB/Mjm.0
%4mX`bYD]"V9@1Z)U6EI5dA!KjQ56S,%o8*aTSoegbf8Q'C6@?1@;D"Yki-AD;^Z(5R^tI_e6rl'Mn(G]hA079*p+5dWJeCMC$K5I
%_+U?s/UpLd)3urPL=ep!\r5929jQg4lAUYX7;e6Ci'g;T7Id)UkTG/e4.S2]^Id1pDE`Be!X#]g#6lcN9JC/FjFYclGh?ErV&hf;
%IAr,:#'ZO33+;;S-S#Uo3dG/\oID_VrSV=+(sU%gZbu"U>l696.NX<]1j*iWi9!NO9+4ubH",@g3gaAmWVa27[+`300j*po^)46N
%1WH)qT/-\RrN%``$I[0<K>rB&(jMZZmMNUicQ8jBG4N];eQrFt[J"X^TXC7X7ZG)D17DtpP7/elbpA#:]%LWdaZ_m+[.Q5t?s!1b
%AY]pNX>4JVkEV/NoeO^`[@:Ai*VZk_8;2EdA^oGU0S@AoNYr^=5*d)2QBu5RrH9p?TW+,j7]Y:e2P\i0^)<Kk%`TA\P*9t,bWcp0
%N1:A2mu.Zb0CoUr5WAFr)EZVbe8I#?N&bW*"rc0u/e/eJZ%n#;/Y,!\B^0*%q4HW2pCoK*8A$3*C@.dq;3/@X24@Vp<K4O9:9keF
%p=%PO_^=j)Cs;JCnCaJ6O3pEMol/X+>'@1)kbT>,)mscBgW3LiE8/GOEj=A4W]g8<13$S.2`gqD*&fp14Y/Otd9Jdm1+aM?2qn$Z
%XrHbS&)3).Ul4]]@Qk:A)iON:3,_JPH<>+RaOotOhIq.>bVsaUnD_0e'CRaSNJTgr2_mc`$okOO>oYiIT5_$mBJs*X3'(A/9K6eO
%ikghil!hQ@o)QPILSO8$@Dou'F)p9-SbN#_3/W="G]C+0*6^BS7!lF`b_UGHj4k-bDt;q%Mn9gH1e&OH*,RSM99'1f4Zk_c6p44(
%(7"H0jf#/:/]Ro%%_`qSof\6oQN(uEk#g'V_4"j\MMF,\E?#d9N^_24gc9\[M`k_7C4;d>7ge.mTVM%"ETh'F\la'=T(2=6=DGjl
%Un`IPMb?Q7?#2QO,Fn7XAk2.86aWV0bsf%8VB3#`bJnklG4*GlD\DKj&al=IO_*r'h=1XhhK&0(rn#35,=JYtQUd][-Spep`(k1k
%^"LTSZWb!9H-k3ccm*YBO/#4/mptYpSCl$6,A<p?WCNmr03=4=R9m<C@9B(J4Xtr$1A2!njl5V=9$YE0UCnCSDi^1!GaNhY+cCub
%kH5Kp:%fV;Y_0^R/tTWkHqaI+_oG$(%Mg,qMi5WrnD4X%+)C-!o$LFHfR*gcFRf1*WJf.o*HlH!gbk5/a6KG5l/M@J`7Mil@gHEP
%[u[2c/p8?(0/()$k1.ZE@mFcVa3P2Ss*^1Tc*38la0<0.VB7C&+4lRUB.)GpN`ZPDO6coaj,]XT3Ib(Xai?k;r,(",X7^H&r`GSm
%PPN8aPC;4NB$**dIoNl;jSuK".3AYR^"LF,ZjL)e/3mt;jT3e7H^TC@Akjs$X`#j3OD8C@HpD]XI>gF3l+ENOnrB6A5cW7SncJcL
%6C;tM6'=;YK6/qs8V;+W3GF-617[5L%T:?\e3S,T]];B8W6#ur+c3t<$Rn@(iYN6I^r8!Lp[R5[d\?`X1*j,_B1RBn`AI4)*5DNE
%^%78;87EAEO\M@$Le*`qTd!Ba?"?A'FNrZI7=.=J@Oj4al/O9l@kV?>934&bdCm/0efr@hPIJUu4AP%5[q#:/(@XC`,K[X+7Q-Am
%@O'W+5&)=3)(2uBhd=Uc4c5jRq_/!Dn,Ijrj=7NO!)F2c%`6LNc=7C&Us+be.T@Jep?6_4>Ij65i5+I"8E)`Z)En?RLh74,PR-]3
%='t7,DKnhr>!SL/W`"u"]#C.Y*l?X.8AFkcQKJa42E4WrCS$G!ZP8\A[)\t:aKqNa156iI=A@cKd%s+T^LU>j9]E/d%d7(PpAOb<
%m)O$6I$clbqmcdg\@qf@#(GM'S[?NHNBd*<LoZ/`ZT^Wop7<Sa+%i5a3LYL2nRIh2Ns72`VM^"!jVhFuK\Sk^L1okMd_&_Hol^8K
%h/m,qj6=Fg#e\.+l7hgrdKo^[U/j:Q&1&86<?R^jLR?b@bP+qr]u?ue`*Eoo@2tTQ#p<dbT7;2jO2-2)B18rq88>.&m!"Sm`DBU-
%=\lk)0c`<j5mTYDd7s#gqQ_3S8?_.e-#FB!LHn)/kga1.9kCFC6C_(\8Ek"GHCQOE=D`=r+t"4b.5k+8/[?[:gL(:+8j1?7D!XFg
%RX7g3jV!M#ND[m5+4S@J=bl2'Yl-oDYI08uOPscp6N&F?c;ducO"bpOd'3CW\Y(fu2CNffFMdu6FRA,5lM9rXDSW)R*]8MDkE@*A
%'FsX,>@m1lNA+1E4(ZE/5L'I()8W43YFUh32KRY\_]>!`HR:Pc]XM0u6'JLsR0qkTp$>E[!II-1E:<EuTEsItDN0a>Eo0TXl@?7<
%XQ-2Y<_?5\iLY/h>_TBS9k.1=[g1qKOl^7DKWlQk*3_gXZ.j:#?o>W';JlY+VtA\p2"Ob<GF+AF[;RQ;7h>&#f]r;SW2%p(Sh(*'
%b25ZO?)PV(46JTN1]fA=%iq-TSY2V+c_\_.G#+0Y4_M%3:R>D'#NaHH$45l";4pLcZj`Dca,"uj8<AS(qg2mPHgPI*PV`IDZ@5aM
%7=hFG]pVI4[9IejD3&F96/'0e*>J5hL-.7,\G%Dl4J&G(b8Bh2WU/5sa-]Xlb-l&8-oRiFh`<#o=KG(C<b\#c#XkaMhlH@:L'FHj
%2e0=mm]m)*(2^)=f8_&f?[FW,ori`_[;'&gWSdSgO.Ndg&W/s0I#m*QFmrBW0l`#*pO?'DEn\$BO_"q,[ALmLLa($QEY$'p6o'k?
%k/8&]#!Fu8SNnY3!V,F^q*3&ghiBm.2+ifF24+D(llWgU+u^IabWlfgZ:h6P^qAft6PKFFK`k"ZQrJ?nNo6G)#5Kk5.tPI4W1q?6
%D<m9na3IX^j&H/?nT2K`'Bie#XV1I.cQm\o@]i8E,:SWr8>PonpdToA0i0*Y]S7!b/R!hMOE.lbWC5P-0-\tF]XBDb3-]kU+rY("
%O['&h#S5CmluTSX:RE#np.-Uu#^W_Nol6`\OG#H"SeB;22@4Jl('1/87(kOS8C-!J7=l.M3#'ms`p3/_gnOicBBE$a>B<Z6A!lNB
%HVLlfC?EhQdKfRnWpOl^#j3D#'T.dI0\.YV.nD6Y<*HUOG_Tt:%I<RAHBcQCs-2qg81c/,!Lu\gnRo9V8^,0#@Z/?_.TLp$F@bg,
%HaU\dJO=pi.ndJ+Vtf*l-D0f5X$G%Fc=eNnl]he[Y-=U_)'!F>mB\Q_0J_-qUC<Dq=9.<EZ0fR;HY$1=3"r%#H"mQg]`]c"A?`;R
%+#=0e(Ouga\mL;e!@5`"nM&JpJm8I-!1?gh0M''BJFf8*X[P*a5t7Ae`<(_GHFtYqUdKYaZs!VC.%,3'7C8[dR]@kNp_4Ga[7b&R
%E@-\/ILpbfV=hchMMsPQ1-glQ/fJuKFd0[]b"*osmJ9:8MVol!Q\e-^gnOm"3K$)9U459q*pGIb,5;@Q%/Pe.LjIS>YKnsb1mW7^
%DT!sf38P[3aO7pV45GidAHsQ?fCqCVmN6#rI_bELpG;l0A7QQ1%1VXnSBCR/:sdFf?Ln<Y%)iL;'JY)d/)b;,ZOTiLj7(/@i;jc-
%6aKr`G]3^G8c/i1>LmF!3qgg9<oL';YU!ft+(st1+>e$gSONNk8ed"^Qe-+OT8*T7\S'n-R*U(qY)(R7[]6as-@@_g1SF%Sgo7Ol
%;.VhX%Vj>2q4>4'l84Ra=^%78K!He^idkC("JWpHPU>'5-PFjY[S&:4XYZ5kkqD\rq7sY39$p)ibF5f'e6rIcWZ#fCoVP$)*1b8\
%`0)0!r$i=:`_0Mcp@7_3;ZH)UlLd1cf]R#!q>3F.P\aJ^FK0am,"Q49:(ZN0mDqK2e1uNDZ]8rH?0ONe,I3Zu/"G'%*@=M?3Ff<D
%$FsNia"Ga\W36_H6siAV)nr[becM[1[C8lHY)kGZ)^"9bR,Wi[<XMkn,E_6!A[$]2jU`u<#@;IAo$A^3c=CpqhQdSH;>kU?CG*Y$
%_non<NL_aYkHM`D7o@:"N'7Yk9_1.P1#75.=bj:,n[UbDNi`WT&Fl%+.)j3nI;,\$5ZRdZ^fiXn\\__U;M6V>Kf&sB!&+a=$e`o)
%9I?pmctGc(-.BYXIQiUX!`,6IMO^0Qd.fb7^P+u$9;+Z]]$uhiUcN8VdYh`B!aVK*GG7f?0iFhLJMoU3X=D<l/ohul,X6mB*Y\0C
%9C"UX``0]rMenV]@VGIa0I&D@Ohqk.fX]_uZ)kP\'84fL\1ReE>^6SW%g0Og+_qY:)Im.$Q*a-Ag(X'Lr"_45?t=>7"L6TX#h71K
%AX*o#'3fAF'l?cg1S>:Qd<7/9$+hPQ]23MTFe'@<A;R]+1l2IL)%T(R"ij&=ekX1Mh'K14q?GA>#7rHpSOp.DZ%6&JBcD8+0N8P3
%UsXqkatj0`5p_6/\AfPWB=e_\Ymup]3)K$(WOj8L#_iR<;1pY+pJ"o\2@.#gSN$%M518V:5QTTb_(Z3rJIHlYN#!ONE3Pg_f&^s=
%3paL"aO=$$='L)*6ttJkUN*QIZ^^BCKVBgqRbGE/RC;+dfi7Pt,]-I?lHHVu9Z<@OKa>6g[?QH*<()n=+Fu:rJ1<3/T\#&f5B?..
%XXGbaFL\"ei[do.B[=\sf1Ldros+1KQ9:tN)l:8,#"2&@`3k52"l$^_BZd&)#]$]BSM^dH-22&m6VqOT2c<7(nE3+S:0@@F;_`X0
%'Fb:q?+.-T&r0DGhbmYbY_?Mi;5q#-#YeP?q#MJZ(a5\[ZlO\(DA!/da^7UEC5Hcm`Dg1dA8.1>G)e\O5&M"d]d(tZ=m#;aVL2%f
%r50\)3<XM96K*i]8-gA!gO_nB.o2](o<PfeZ,sdL1.8CkEYLuEH8!HbB;Hc(?C-XITu'=C)1Y92PjL1jo_^;S\e^Omq>%SB_-2j+
%6pZBubG.?88M@&]cR5[lANMp-cE&EinpQQ@`F%]cOMB?@Xb-d*BiCci,>uE=hAa-@4ICsj1H/)UPJbD4cCcY9$\AI6?6edCgN'*q
%Wh<3Cg=g^:<Bja2/?dn[UfB-L\[<pX/m+^gpD#te[ohm7Ou]Dnd.4'?.X)h5Q@*T#h[3S346NQt/X[3Xji(kc@2m+7bLad51Xi88
%@KMYBZJuc-*ahg:03YW:aL9c:KC;oqUn"2+Q09N-+]5D7gCb.uqB1fV*QMPr+BM`m%D?^lYej[#)Io%0-t3@#=MZMaECG7W9070$
%9oJdO=BKVG86d^@>>/a"R^dAQ\lMA%E^`G5jmU"8rO"#i-0^m(BDsI)WI8XlGi'Nm_rS6CD!W":bDaF&eR]-P5rsgL\&_obgM2;0
%,d8QWHUNc&Y<\i')Nq3d7NAZUB/j>AW[0\?/@%gC9i0#j6(/L?(U34+3)ocn&AN^M9j(o&"V+n6M$ka_JYO'`dEu\fT3*ZQ_Q0Dt
%N9ONp3DBH@R)/_!1t&EK<\aQo>@X^\/<*bX]npeSX:o"bo'f@hWY<[WF2HL-@O6Sr-E7_!WSF3i]!&i1<;koEDX;e-WL0o;3parQ
%TH;j]LhaI\Q[2?d.RI.B/017b$?JK/kj`X5`>m6nfD-N"=M#Va[(N!s<0+H3AH5Q7G&539-!5q4*\Z(I$Qs"hR*ia)M48LQ-N&.+
%W69o=I07@rgXoqGqrBK;9Hjt&4`tQg[Z,?77M\Btmp24reMI=(Qc6s"qlstN!Dj[lK>kuP<!=i\AZm^BO[K5F=C4JLR@1f_+33Z"
%qG93DD4^;h:M-0;as0'd4L1gb0cR.=&SqrF;>XsPf&hSHF.q1RJL?_ACaaAO#B46]f!mkfS*fojFW:(mhA\\)!S5)mh$&42:$]V4
%buQP3`67u'\?p7$.;/:sQ\f@>DkH4:`cdBfS8B)-bjFe5SOKcRZEmMrkB</U3I#9*4KZ<a$(_mCrPc+-Do_FMq<`b$NNq<hZ[ZkB
%Q;+^@8991S&W0"0pR!j0=DaBH/UJe':CgY$B=[,:bMVabd1+jT58n&;"-0ClUBXpK=`crG*`F1&`?>#Rhl^&bod/pu/>gfr!V0KX
%Nu1S9caY/E.ZL1f*X#1cP-P@p'bk8iAR$V!*LAcVL';P9a#R6QbgW`tk`,n=PKEqsH>c];OjU"9a'P@@@45;50jW0V*3HfP@`Pk$
%6%'!QcA?F9ZLi.^r>eNm#/VC&4-mgFc>@W4L[^=,El\$:rN`9?b5!=B1qp>&G11_U>?;TGm$AT5a#9!l[Y(6nW`tV6A,Y3q<=Z<*
%:)/'q+(e16VBHtLo+'e%gXP5rU:l]n];*6`pq+Gaa!UfX+Cf5kU6fQ#)1Ss2GC99iloPQ'9`$nVIXHYd=$N:n%_eE*@Bo_FV*D]7
%%d+oE`Ie*^Eb4\*_!u]77HgV6K_eWMTj9;#SWc%IekTNkO3CKAj)WuD>fcI*/86:hH?k+.>)AThBK;Hi:,)L03]DX#Cc\5TdCC:J
%48!YWg79HLI]p>Qa5nH$)(.K(\Qd3jL_Zl;^=p]0mEj`^Y3kuPACq1um$-0D7BkS$\(?GRahpE5C]9R)HP;ssSYZVT6lea-Xt"/A
%"&6P#94Y2UG`&"fVON=_PXcOe&j+`Tks3]S_beX@FLRF=4UC)mTmNV\_\8UbR3>b>P&;oE-*]][/Zf-!"]:bfVN-6l!hUM-(#G!C
%37YXVZEd%oA4mo$;$=Ul$9<;3.-gs(orL$1HJtZ8d?<lVCc(-%;.^@jR1P>VJPm[SGZ$54"Ve7_-W!Pq)_egE;ai7[r?eI@e3nN/
%jp:W`;H[.q@)W`dF9o?6Vq#sN0O>e',=&Fc56mG,3:B#_2:4OeK0k[/0['G(JY-."Farko2`D)aWIYXfX0DrbL<k+q`FF:T1JpM*
%8sL&6<glONNBM,$/qSpd?DeUp38*5t[LU6V;m4.AXru[?mStR-T",Z0BENl8%Ftji?\qWLS<Ze&?r.`E'i,/mR42oYOF;&NWDLjk
%Iss(QTgpW5gBYiT=F2[N)64?e$egW/R-*W5`4tI_+F?k\,uq9oe;Z?A*79N3ZjGo^%2>&s?M*&%`gbNn;DVdkRXaPJ@\m,X"4^kh
%k=S5D^oV'sDNG`JObSWh9Jjf\@=ucLg,M)M0ndl[bb!CLI]hC0JBd>+DRJOJEc+gG<1O$s%!,aN<3mqK>kH.,7d0sgs$fn\:BAnN
%)FkJNiH(;\bsba^(ihhi7?2Z=\nS"\B"G5/+BGo&C!r`idP=1Wo;H\2=DE*nC[6ug7.baF#(A1#KDa;,5J7iuH\tCp0VBQ(Y7]3\
%fh@Ws]8n^<-,#\(Y+h*Eo!qjI#L>J`YX<^TqScpYXSAs,Q8=qO;)c+kkqcm<rgQ=l<VH5_^sT-=9pc;r<!4`?A)8j]1eh.QbiRB`
%XOo2]i>g&]2UZ]3.;(G-T&WD<mR:K6V//%25#$/\j>\9W5Ob]'XHX]a9<7@gP7FOr"ZIV5^oO9d3"S6MbhAqQ+JB(NFDEsSTGS0c
%VdZ-)227fL!(@2c@:&Gb<du^&\@BNRF-0G'cWOJJi"8.g69drMNL`LU3lqE"SHg;LKI2^_mdq*fhK<=#B@8YcK&q2S("<D=NQOkr
%B+5!5`]?["*tJ(i;Xu,&JRB/[)H74`r1CHCVYqt0QIKr'/rF3*W;1R@SqH5E["T/bW5c[lhGkf-#!%f*JfaEL$j^#*IO5M(_5$+t
%VD`"tfsA*<2*`3)?-BJg$Qjb!;34J&.F-('n$4SAd0diC0VDTp>fXjk,c72L_#o]=n!tWWHHA$Nqa[=P3nHib3<3qHqLmR`kV$c9
%V1(3\*5L*uMd`dEXUim;Anh=Bs!)M%Qa3:3'unZDVH$`R0(]_*O'NSDFAeNe!p.:4.cXr3o2nh@RcoV]SX7Eh)u?BK8_9'#bd.R'
%fG:;91G2rPf5!lZ)S+QZSRu(GeX^qeY.[N2M[K)5bB4@];X.CpQB^`O"k^A;h\pd)lh!bZ;m#`cR"D[NgU#0]LicM73qOQ:/bIZD
%O\O"s^-"kf=0JC8c<><8MW`t[P`;;C>_b8[)qm3F\oAL-g#eVQ!3)5d/Y`>2(NN-7Bu)EgcsLW$=Rg"QR&r\i%c-k)Maip/a`jso
%kdH<Zr(g2OK#`+Fc7=',Iq<'iQ<q_D9ecXpb?Rmi`/`?5pMC^&:?$l\c`*sD.SZHcU.XmY<9pFe7ER%+\;WpLX?96IAhg:Q!J)[L
%!;E8VG^G9MXFS?hAd9Ce>GbL6TjYhBc/2uuPJK>OQCWuAc9u@)RqumYe;tGD,g#E@8t?C-=LNY'Cs&8[T@8m/dV+>o1A@28Me;D#
%047O,lC^?O"I!qQW0gM$#.%/Y`4P#Z5tf+VDTCl#6+JrJF8>BZm(If^oaQPNZ\,8.Q<RpmOY?aX^:,cq.p71_"#E-bSLZA28&$_E
%EA$QNMi<PJK]pGC10!PSBhOf-GtkL?;WZE8#g@RRf1M0hb7s6LV!&4;Oj'8.UMQ+:bf)`dW3KTCgBAOU&QO]r]B)$;HV^2<Bq):X
%IB2anJSN_AX%g_^GF4^Li;>FL6#EH,,HjmIQii]riRU<9?.[Gh$BhRO&C7Xal8Xj'6m3Yf<dbO%@jp+^&jjk0etWeU?u%8tLsegu
%iDMBTD)k895pG\*;&.p;;Y(SSN8$N,+AK8QO*t[eVG5/R[a#ZNl2/o<Fp;C1$RgSO6,hnJdOF?I94[j'Zbp=08]-@q#[%BXLH)X-
%3_AjrYn*^Sj>%;U'Cd'd(mR@,KRJG^A[cB-,5\1Vif;h!=nVirI7>9EiBU6qPe/IT.rH8E[q1>:gFJ\JZ#-_Las\p4YR.q8a^ldA
%14M"G\`DL;ieN(Pm$fOWR8_%*,\,tq2BBmlLY^N!717oL840"b.X=BC(gp=q_<<k*dZ(SNMqAe=J?#j+%jKsHXXb+dcXTcujiu5Y
%cOABeiB8:K'N7#mM.FUme8!W1Aa_t.ZfkN1gu-7i*:'#.cWI;[Am5j;,Dd4RnQk*AB#/>kX2bE,VK&50eL,3A\cD%:#s<"c.qDkm
%0uk#)bAets+]8<O*X5AR_*VGu;3:Y#84(#b1C4KQ+J6(tA,/=cfi;XSKX.g(2+QqXZQ(StBX!Ec\)<VGZ9LchP[U^TH9O<*-gr)m
%q1?$@!S$YsAidi"0@03\%Waqf>BrFd*S#7D2dIKl]aTqe]@Y5GOS>b9NqC$]i,NrUOD($tnj=q.^".3.`Cuf^FjXj=e+.m3&:'Y/
%Y<?uTs*M(TOPnu\(.u+2Y/MC'lR'+!7,$?;I96WIDNtg;:rf\B'GK`q;F682UiNFa$aHL/SYfN5WcWp^47ScA+\uA+<i%/DZutdC
%'5c!Ai^p#aa0KRtGVWQsp"is&FX!>8epVY1JCctp:0;>)6mmA*T3*Jd[Z@j1NSEXR$/=8@jb`Hn'D4`opUPXfL%kCjiemUU5LIN"
%h!ZZQD&&RSju+;Vb]=^@-THDi,:A:^7SES;U"4)7S=&Y[".eAPN2<K-658G8(=aA=7h3p!Ym4c==4/('[mXe3=N"aeBVgSP&8gL(
%;R;fj7T#K8LD@0qTb-pMfPH/;JDrVhcr5>O8QER<4sUhn:uf-lSu)%ZL22\aB4j9)`f1a@%jl*E;<k<V98KT,HS:Eqpc^"lpT=uA
%gj:^Y%4?Wg7"):WFFETnI1tVp.W:[Gs"o0EXfJjh-mcZoSWQ^t3-h:7gCttTp&;pF0W'BI=VYej:XcD]Va6#d;iWC:A:#-5n_#dQ
%)7NRm(Ugj!@5H7=J_Us_S7"*Dp#F<Vpi-msYZ-Om+*H/-2mfCpKH>bfW&AVWD#LPrhHXQ)U)t;sR!G9q#8'2\Fs%<G<U44)=&BiA
%j'HqdGB.[%Tp@-bX#(r#(7+(dZ[5h:k<TqX<J^\JF3du(X9a?(E"nH$DQS-K+@*tES>ba0OE0a]ja0^4h`GnN0+VOap4Ic=.u%'m
%^sP5e$(#Pli-V6LHM*H'cZN@cC0#cL>oeJ$j0[<ORmWCS!-@rHEq4XLh&h,<e:F^n&<Lq7je%:)7:bs?H<j7/mnG&uB>5^XK^L^p
%Qfm#QH^=eA+K@lbc?"O\E`IrFp3d]Q\?P28["I(u*Yq^,l<:(^60]D_(tR#!.hRr)1NP(M\R5lIHU4h0q1u-\pW),Oo*idbEuMWl
%JSgA3lXhD;684n:CC((M698js'Al6M?)[g,[_.,_jh>qFT$OR5iX'JMk;UGXKCicl/ko9X=U(5,&B\LKCE_FVae<&LT#_(p\*]&g
%M4ED>Mq_G(0@,2r16/a[KC5ZNdM.&Zd$I"jj>E^Yk-h=l`Z/1d#a-1j.[2n#j?,u0U5S-acVa@']euu6en[C+g:Cq>bW[4X.e!5d
%UDg<j\K8qgShN<SO71c,`%).GXduSpE8.=>mJeV;ESq!i0>Piu60&N1_4O\B7(q'ta.%AQW[Y_GG5q=8msk<3n,L+ugA=Q0-Lk.M
%18B9p9LG]CgV$!c\qea)7:t.cqT-b-D''dd0s8(nac%Y!77h*XNqc/eFErY*QL&ND"hs"IPMF2\->l9`BA(H0^0&Qp!Is&['=jj(
%\P/?cHF_5+rgiCe>/O,716&K(_+]'Y3'#3!&,98N]VM:j8C$XgEm^E5MX`#S1C@8,eX8VT7<W;?hFDde4m41Se&XNuca5mLUhBR^
%Ae49sSIJ?R1YoM+V*=e6f9O&27+5g0=j^PVo#6N!9DJrORZ9'T2k"p)P9!AW^&2PIc<c5^j3dO>Uog-4>qB]uR[lQTIp_HRVbkj%
%4AHMHC[@fndk*m]+uS3Vih]Pj[537e27</+WN#&e68dTZih]W'OF'RLlkUEcXdXS(-!"6Fk+bt`/&7\9C79&g^"U7#r$MV_\lZ[=
%Z">r`3(_].<kL8)qJ7P,RMM?QC/&QYA8>AE::`<2Z^5V?X6^kgRcIgIf3Y(6jW9S7-!it-r7#L#(a&RBVSl'@B(p=*$/"Uu.jkLi
%0'r.lYc5$kL<Wc(PDJU5J,TO"2Dt2kYq8-+ULVa_ne/7];K5R>8_Z6sfh>a5C"_(!q2!^?><Ah;0\Lnq2GKO%T$7[A-UF4Q:G5/+
%[\etY9aep3dq4pk3JlI39otR=c&;ZF=e!FS9@p&l?G\UCge6=4X^.`>G,^[h[S9B19AF-fKTE]=k,t&`9a?38^.fXB'"I2=p/8Dg
%am('iZR,%7ERQE/'"R8W:+A2<llpM7&p;X5WNhf::#0tj\nP[N8DVeH9C)<'d?aNCDiafJh](W_`](9tF2"W]PP+<Wr""&0oP,cF
%)]JUahp?@-qjUc9q;6#,SIBINmH9!uCG-&8>5NU'1h09-3*Rms/i_(AT++PRgrfr3`luI/B6qD7$&?NL<]G6WaU>$2nhS*sJ,-V5
%d+6MQV`/tuiO$nC$uotJk(qK!qcMk)f$>"BWmo!%Vb_JV`Tb?J[Q&'ij,;AS3uR(c2nYZ#d\9Lf38;nWhDcMs?KO4igrg_96$'?P
%BtCtTEEXed#!)'D08H(kLQb0P)EW6*o[R7p3IS?&925i9a!R^fp@?>)[?j`c?gZs>Zdq<@3>j8@?9)gS5I6k`41XI=H/rJ%P>:Z=
%bLpn&A!jS'pMnDKRsA0!esQ8Xk%%A9RH??Z?EQ;qp9W"XF*dZEUsQc5F*<3r3TmbESZHnpIlM`:[+&@)F(T1^\E@0C+Eom;4oa<l
%Lrh;gSpjI/VpLosRLVRI-)Z+DrW@I-[.Y0_)$8A\;(%$`Q_[Bd0eZ7l>'l+k%!1X.W\ZK8PH<(!\3@L8Vm2ku%ZS/dF_7"$8aFaW
%:KrU'qhaXcg.bkN+nLlKiNrLTFo#o%JXm^+.I>E$5DbrTE$pY$bH$,Za:;SEVm=4cFHbAa%d^$u6YeWSSWn_mdS?p8UipG<V7"d.
%3Jm.)-HJVmpKE#faR/=^qEf+uF3[Et-SViiiXX#@S)b'=rA8_3m3T>2><gZ/M@l@hG;=uEFEdRn0B!qQ5W@eqlr#M$*Er>Sn'Kc]
%I##.Jl8sumPPi]EqrmLuD(bo2>5Kc<j=N>_n:$K[I`m]u_p-AbLXpp'4Icn!L-2$g/ri%6%Xs^+RJ1$Z4Ll56VED9[EolNco<RKB
%R.Kn1fcfTjbgRa"jNQ(5k@Di$(3/p-)=YVeS0t0#jN`qjF0at#IsLk]1h9>c4Z.D'kina\ZKQ#@S32+2lt=bqiU5gUZZeLao[)=<
%Vh_tIB%3"fkN142X8T,GB^P!5>DAf/=\k$jgj68sSa:\&qX^?KlR<h;A_=WNWgdMEcEo5UHPT(lna*5Od`8^B?e`c3-[47e[\q\_
%^-/iH1[a5.rLA4Jm:Y7=60@:bZhT9=Gu#SG-hj26QX9AK=jLFR4a#Q'^aImkbJC*#HWg-F[?$)=*Hs:/.G3tJi`#3kbJs;.T%OKG
%`*8s".lhWIoi\P`PH7P[6XI>f<=!gUqt+bZAY1[U?V1,OQ9O"d+of6oIEE^^V=%R?qTn5N_N6kDqu/N_c<FU>)]^$,T8).EmAG['
%AbWO^:4>F^,Yj(YICGR':Q*B=nu(&6Sj+<^c$L?oK2VT&!"Hm6U]M6N`CgE6eil,[+]"V]J/U-q-(r)5I&)9ZXaHrK1iV=g@R,R\
%3N3&Z2]p:Kc9N<j%r7ihPE.ZLcpUXk5\ocJ%^^ZB@h1CiNf-+u]@tFNW3tjN&H)E/#kW`=o4.g^s8K]&8n3,t4<oa!C!/2S/3oc*
%ro`NhH+FG^eEW"sFnP\89qr&h&?sHS^53$`kADgZ&P0+g)u^\4b,,6joaD-6oCrmP,(WiES],=n3eFCD9fXPW8FkrO'u8[>6(p@#
%8Ns$P6<QAq<71DbD(sRWTQlL`AKj*c#X/f+$WKX!gUr!282ukLj'`K4fd50_k%C'3)8o0Fd?bQ&R]=:pR\f.YU5n:pdN><?H&9n6
%;R)7Mo`$$;kUN-9T?l^)R6LMeB0aIl;Bk7B&QOS3kfA%Q<'Un;o0D,d\@,52Sfu5X%36$A1E*!uoB!dhaJ]8e.nj7.caMk9VP<EF
%mTN-hB\pd^"V<=Wq5mSAON;GoW?oE.!M8_<c^tFsd+q0a+k@&qH`sE`%R(VL?*%!JGGJteC!@kReRreqKj-Oq<Au!BT2?EL:rfqP
%nW1A0&.q<!8^K8+Q*COt/7PGFqs)iE6(s-Jd5JW=,'*[&FgkcqLIL81(4/Y^>TLQN#Zd'(T]km+WaWY#'fV0&oAceT`#.uOO3.+Z
%A)U/]>cZ+!)N%hTo/,i807o`$<XrZ<juRZ4'$I`iMFr!5>DNqKe"=FZ!JVrV46uD;K8N\E5=JVoc<[:@#]nr<#Xoc$6c?k8VdfIE
%6\obV"I9lY-ilHga9f5D!&-r%`1d6_^FJ0Ojrtb9[q8#q0k3O)'1%F*bar!MkRk\iEe9IC$Y;\':TTbA/PBEkEIn?/U-4cAcp;g3
%do`#:N70P7$ukofpfYQ=LG^)\>jbOP(f7b:DLgoc[-%e+r`I!6>J!:>>*(&/0+T8pOpmlpj,Dd#XYf(=*4[aTa5&>1(_h_b?do*>
%)QW$dT8p50+t<sSeo3\DK70"dn`MZ,.)GN&ErWgKl.SXq-1S@Xi9,0Sh_;QPJXZbd=F7'7Lq4AU+S>Os'i_BA6\&sQl'F,Z^KQ<p
%BJ:[(i:A:<`KWOb2%GD5(4>+%8tsTV,hQU6CB2BmNgd=qoGrLDF!f^9MMIPL)>$ei3qpWN85($Nd2Etr>VnT+0c*se)70nqX!6=9
%i*:r4gukm.+/s9#e:m5pK;J!gBD6Je>EqVWE!efGC,B7O7kNt8$W)c;BIa.2>ehcCbaPD,5GCePgqk7C2LeFIJ:S;VR1-:M`j\<h
%NBtc^1NT$EZUH9"4>ifB-:oP98S0/V"R;%fXgorO>q%4WU)*Pj-;'`=>f6EK,V'7d>T5+f#?5#\4TPbQZB4Ap3WRcJM05'f==j`d
%`L$jKHCR^94K:XR8C-6N)Nf-=L2p1X+4;=R9[E8q.3`[1nP+YZS8hM4D\:.lS(c0?ns7ujf+t%c.g[Db>Z%:^+a-<]lb+Rc,a)ZR
%WWMJ3Yqr9b\5;j-,r=U&DLLcf<bScq@B,,NM,FRmDI@Uq*<I't-VfS):SI;Ee,NfC*p>=t*N:WBA;,d]ChZc5Nb&uKYrkAV;?hqH
%M?XS8/qpL"S)tKV4O7'K/18gtU!"k4Q1h7_AG.Sf@:bBjqOIP7#Ut[=K>S"lb;?b9)beeW5X+nt]uK5uWkKSW)\YZNY,@`^#c0>\
%mm-l7Pu3,hOZI!NX\Ie<aOp-kT%Wm(on+"=XVi@-F0D3J(+H1bd^959M<#69F[EFXl=8+kU/[CIP"n0MTomZ1N"XZ[7!TfOh2le_
%,R>%U[;)*BVn!Vq)qLQk.%e`6d,_b.cn:50%,#L9=)kSp"*A#4G$R6(kc)j`#Bk?%DAQ<P,3V==&gICCW6%:r]0:m;=>$J%oMcUS
%&H@`3BfnLV#o+@6cR;N]CCQCo'-/*)^F"#RWj/Jpc6B@dZR@&a)+?nm,ooFVOVUbgX(:?Iatu8DjM8.LJ,f^ZiF?%T3e`8E9FF+=
%gqRT"T&Y,7_13n-j2Qq7hBC"6;[d62TG+-"2e,;!84.i)gQoIZAU-^L6!IB%#27CaW)4d8fPJ\9^^=o3!a(aJ.FDYn?:C(#(:EOL
%/,CK)[J4hj.E_7'>t0-*q%78J00T],s/,CqF'&n?XB9`BLq(NFi5S]YZCPdid5pT'+*2gs['*8`a_JR8)8u4c;`%R*2&.ZY-Iqj^
%0[+N0Cq4-nJ#m5LQ)H!Z:TU*[?nE'pf)Z$cB1:3%[qfe+1qo-1A=8:5Og/AbS&cjWSnfA@d[.=T/`t=H=G[rJ8Br5C!SQ$J[&%"U
%AGGZ%-m^fB$W&km*Ofi?reJj#a,Tm77_JSF/Ua%KmAs$`/;0dPi*;/*5G#j^$4J%5&&o"jk`\82=->Y\<23".&P.SaHrQ=M-;)J0
%:jl!FAkYj.=,Ur2$>IA.I2"8%%!+ra><4aD-MJp+AKaSA38,Bu`"q>n"Xn*E-FD5LkJ`s^j#VT&We"iNM]]o`KF1)*KUk:mMZlus
%JLJ8h`X0##PU8fEH!O-DPeMell5$OJG!%Y`ZrJO_nj5B8S[GG6Od\a=BO=)l&uKCTW\V-qrC70tmqUU[W4AJUR1Z,T(.?X<L!nEo
%'+ZrP_h-+qp)-deM1rDp.tQkpcb'[l%%hoAL5_mJce,\#m[7A#el`!YaR[#<BY)ah\t5We]Co.(p0_Z_/Rm(@$21fok:mii?>\Y2
%R`W&T/O4RC/ZkY_jU-D(o0Id**6D=/CDtnn[id+L$TZJ>CBY0&.6V`2G*!In5F))T>0mD9#KqL759mCKT#N!,4e&=b;+O7aVJ$mZ
%-\l(m'?9PIdT/oC/EJfA/]_>Kp-MG-QM&\E=el*V[in>>8Bo";?o;)9e]71Kl:ADDN\rAdgJ[M0pl`LF49^CWJM`783Y8ut?n,=N
%Ff<)uL?LXFf+HP4e443```t7.#2");iu8>O.4N/*.iPqNfO\#Y=(;^hf_H*'S\7QR#:*bpQ:GeaX6kj&_B4R';71-X_W!7_84N0`
%.@J#6NAefQB.OK0(YS:.AiEp:Tu``J,Fk]aJ_B4Th[?IfR0JPmn#`h7o/4aY6$&o5)a7o_[Wut,pU6jB16B=P[=YnhA<hSUnS<X$
%lXg)1m*u(cp.h<X005b.cNO1ikZ!'m`6^T1C:0^@KoZ).=FSbK!E,t+6^FGjA5:lhm_fphjh;f[i4R]j$nj0?6KY?D=p7g>K7UX?
%pfcTdM`k0^Bo"qs>O%N*VQV)R"p%5$[=,u)qGYg-HnaQN#\+V%;UJTl-E(#8hHY:TOVF[Z*BK=SLIp@5bFu;KEQ\s5!`<md?BF/_
%CTEV3NI;sU+r>iMM@m!8`Y>/Y$/jeM2@uD3U`p"61seOK(7I.O+)a?o7KI9mYY3V1=N<W@KLfPi8d-&^`ZRZ'Wjf"t%mj7#$Q"he
%4^$,^/>O_0ktr:mbAr>gV4OAXcn"=_&SUklG0oOmCX`"YWqA+<s!UJc,FKkfLlhTi/7D"Yff"LGDSk7O<ck4kYs<p*qXN]p'a_1Q
%Lr!tcaSr0s?gk7+dRYk'Cj/'*`gm/Hc)cQ#9Thh&L;?L:F'ugmB11/Zf7`+hr3sZLh(tgl-+c%<_](e-@ZCh!+&LXA/uKa!1t[ch
%72-fZ+C?#K/`"pjn6HK;"r[n%fiNhArkjB2C>qT)6Rm(!*&I`ej3:ER@d8aqFDK0bJY*9qoH((\-/do)]!PsM3m_"Fo154(L)?S?
%bG%CP)%fBV$^,!L1LJYX98>:c:l:s,Q+ADl&;^!gpMI9jnEH4&16IuS-*B!?4kSqLSM1`,&E3HUZ*og7nVYO<>7<_2d3rJp_Q)Rr
%TM@jW'+?,1Jh'u8,)`pk,'.`gQiVpuLh2eC%EbpZr%:T_o=6;\.$I&Q3O63#pUOCd9H4Wt$OI]&hX.V-0US6CJ\'90,g([9%=-]r
%#aBg;Nf5:dhb+"jJKLoFZ:$6k*@\*8W7@n2^Gbj_,ta,e'UjPl*Pb>>nub5m,"TmZ:=Hd4*,*tJE^$9+)*EL*^++439*B71AXRVd
%B9nL.I3M!XOr=A/rUeDg)bFSi0aCW`12,j>mQKK"&/Sl'F@u[0&ZS/lToeZdkH8eAbL!e[-qGHCX-e2\oKG1hR.;=F`MOr]`((\E
%F(fhK?(QX(Ks`(3aqUE\-Vn>""0g-p0uH&HnF%i."D8Tj1dS%HZ17K!I)l;%L;fK;P!#4%"DkKST`N/hP[P1b)Y+*B#4Lm0?GiFh
%.gY(+2Jj:o[K*h]ij9gu.>FE4]J##6KoK1LU67Dj'.SB-r`kIq9JhuPd,Y\Y(oTO-Agta?+>CsEVrO0o`hBbf?m3pUj@X2/+f\A#
%r_6(+)j)l^B&7q&[nj%*b,leAoi#AT7*G+&LClc]%X2>P).`rPWQ)TLI[/]#V6A,4%)n1M$&Wt&F/qc\<GRKDHGCId[B$./E0T`U
%A1?8j,9i8!2OU-[d`mMSQEdH.]U$%60r7i!VhkCkCYOAEH1SR^3FJne3H%4L)@%rjM&>P5rrZc5R)m71'IMh-gu:m+=^0O0hRaAS
%FJo>BM[pS>:.?H7P3OQ"/5;1t>*\EA!,*j\]INM'@lSgNM_6G\gaO_hTRp'Y3jNm2JhFC0l0EPB3ac>B<7&2GJ:[5,/b5OL[mL:'
%?C,HI3gCbX,6)(;\(U4hQte?i)D`<N@U8bbaI!t\7NPT1Ku(Z[EAa%rUWAB%9Z\rV76m"Y<)dsX@i&jISP96.nN.WhQi&k<4s<P[
%,lp^@hq@u?J(8k"GQiGK0&>+k1';*lUiH>6dJBI:U!/c0iPdKQKL)D@89'/)7]&Md,\AKI7AM5pV''f"rYj^P>\i%D#d"O,(LU/)
%r_-WRK*Ph0AF;roI*ou--JV"T$XtsVI^%!FeB]:do]Bq+!Qe[H]Rit`*`n>J#%ihgJ')QG=9Fh5-co(n7d$e+h[ej<ccDS3&oGpc
%U5`STQ=7XO0cGkAU0L1Pm:hD%<gOk3pKi9PM643IW\g=9RYuGB1#lU>co!aan\pZ9]Rj`J*YVLsdTk*KM2,('f25^8e+,`sVP_\h
%<QUq6Hk6dhp9HOY_@OT<cb;5m/Ht"/;2eO'E!=+:MQ>lei/_ofPUXT6[)cT#dVmOD+X02?c'Te(/sroJPemd#+UmLFcp%lW6qHH,
%H;TSE.`'2Uo<k22kkdK:mn'Ve7G\<H_kj'EJ2NSu;gPa=l7D,.@!FQ1!(KDn+[fJt1)r+"0AD,nO!D6ioV6YKAW$_N4P&a$/Oe!6
%EnXq=(L)H0nL_S0J>YX>6b"4sl25etXVul-F-EogZ/6`H+nfCedFsS+HlE"eg`p"7OcN:J2tdi#rTM;"oiq>=jDG)G)Z)7N:[<L\
%Jp^c%!urRiqiR!?qU:LZ6sD;_nnIt3n;q>N7moPCrKp,5G+p2.fSbYU>;n;M"6RWnU9u'`M.P\d8#!71+fW06`(6W-+!h5Yi5\E`
%[3$h(A`gs(68uO(P%a4&9B&)),:7OKqCn*mK\`RuSc<$O,[.gBPA'=&:B&RCU%b5&-$R0TXg&OA.>,SIXi05kK.G@'&$JrJ0>J4&
%h%35I78Apj)S9FDC?u+-U9u(X#mKSt>=.lWiKe6G"^K1coKb*Pg3GuN3bc:395Ent?D=hLHAU3jn0Mli+8f"g]`:a6p-LHEOZ>^p
%B^CL_WjNLr.DssL`C+K#(t64Q#KO3k/jQ:[m=f*)3q7bVf+N5B19IepR#0CCBI:0p+.OckjFq68.e<ZtdF\oUKE?@M1j/52@@Cru
%"`!&(F[J%6fF-8pM;a/(WjNYI.5/jLfi/*u$/.4GdL"[8ekY-M>.^JtYi#E;:&,8_puZU#>Q@MVG!\1MQ?kieE_O/#::56H3RMh2
%PZ+]t?r$T8-_/XhqZ*2P\/3S-9>q"ur+gNS/_5!$4_RW&17WSb74c*-:UG:T5(>FZn"?>:qnSj?'6:rU[I(YX:b>!],kMn*oG/mU
%W/;BAM?C\U(0/H%M\jn[GnHgd(oOi.;FO'g:f>8OS7#5Pp;0Dk6%2'J>5KJ>^Dc0W85hs*S6/]lP$YMp9NWt)<&UfoEVbSZH3Zi<
%SAu"+<Ed9H7[8bgKqhg4`X,19WmV2FrP^@!Diq%l=uijfB^A6iU9u)HC@Ni&@eEg?oFAql\J*,c+I3\bWi1dkcDl8j(XW"C7d1<+
%<H9b@eRD<LXK0dh5.%A2h-Rb[hcWT2lpu3W"i;apk_6lg.6>;LHF4P!ql=.OLQ[qBEoCO4f^L"p'k2ArA^P!P>4ukSN].(R@R#fP
%XaNH<*NWQqX\Mn-Qkh9%E8"Y-m9>gW?qrnUXXk_NdT0tR(Mg'^TGMJBMc"d._NgbOL#L0VG62bqX#m#bL<=RgE<Z:0_/XtdYJ*Bg
%6LMkX$3]9Ul7.>K`TgV,dtcNQ4/%_ee+=`tGV*Un"S/:p+3LVpEe/N9HAqh5SS<@U<^a=pS>P7*$o*d(p*/5qk>[B^"U]W*r5JP7
%)FYr29-b/#n-s5S`c]H/-=fBoQ7rAr)K<N;_[+Z,:E_3'=E(BuZ>'u6rF\ij1$gH")YER554DNN;@BsZ6(;!2:(IUG#=:?H$DdgF
%rr:4?j2BnEYfpJ\9"[GnGm,t!&TEdt<+7^^:5+ilFl<pM$e3^(PfcaVeHg"rkbg&_1:"<PnA]<7qlA/^GjC^u4Q?e-f\!l<es-WU
%R1X;JP,mNpS[rO.n4KmLDp+7Ri`I'F.^2c"/h`W$>b\-5"`<bSiRrk!l4lsP+L"]T98u$\VkmE96Rq`!3^bS9U+40'7'[@*XY?2i
%Z]n4`Jp]kQE`j2*+<1R4@hi--0Z6JX5uc=;]6F\"UjOi>]4p-hj8PamcdtX==B@'#$D`;CTM1$9\/V8uqXS%MhiCV#@jk=39VH\;
%r%D@Q%cPc'!fs]TX&^)"@g?QF!es5Hb)C,*l/P&f`6F=.I?'AWGZi4IK-;UFl([C1YE&OdhO;N\Cn[.,0ZFFh5)(?eZc:;lH5(90
%g[\CN\><ksYL\bWN)%?o@*OE]7R_>?Cc`kt]<s+3cd?2r"ZAmT62;!TKdkY#Uih/h##l#*)5mF:7>@]!_N3R)!"7IVEKs\1oq$t5
%o/b^VKud0T%U1-i<mktZrsr"^$2:dP.Iq:MSE4mqSS*ZuV[\Br?=`=p!K)B'X!]e-7!5S1@VO/a5h,,(prES7LRl92/&6cSaeL+(
%Whlh&4DoLsBZ=dO(U3E)?K?LbNCb"&mHM)t^!Kf2O84/Gmd1mY#]2$XnWI>m.WYOS4k:U`NG:*q\FU0(Tdp9Xkm<5P55+^mF'Ss5
%&OM/HlZTW<D!826+Y%ad36nlgc!'`GU\Zqk'NMseO=\@oWD%,2VR"j'H%\QJ"-bBT=fS\ZqSI#9jJX6eZ$t-WO->Xj'`+ZelXT<G
%g,*,+6)=T%g?XmkW7>OqeE^eaF/a-3Y64"9*m^'kEj(Z6dLd:)#,#Hs=pgRgbg0mQUhJX05<1f241<XqJV+Z96[V8T\O`IY+DOJ!
%n%9i601@oL=VN(<K";:f[BIb0E#/[(\Lf:V]/,[LMgQXU>R=fhXWGQS68La-bZtK%jL*DR?X9Nl.h&c$n*4ndVAbW_&ET2d$^Jd/
%:qI,T*ZaN0fM]-g5Qpi>6BZ9lo:9Y4M!i&Pn#:oNnf1`qRSlVeV_ZS2mcFDsp2O+=%)@UfPV"1;!)lh?M/+^W8i?\3MmiInbn&T+
%KunX//E1(Z'525e_7KXJdUs9eguDF4KV1)d#Xi6mW7ae[Q4(!oENpAc(rgMP9K/*&GUSeeTL(,?2FZ>bOVqD[MuYao^YP]TYeR.t
%>$0D)6c+RK34A]=,aD<5a!U)4*Y7Lr36\u?e#&uBadO!n2a8>o7*-FIbX_cBA4l!<UrPEWQ:+tM0OLIU0t^>od9`8\WLrEe6bX'M
%U92>l6K'[J;tNG+Ce'BMS.f,F1M4[Cp4N7p@3u>45TNW.Z<L1\nO#g99`IWXHr&bDem_`fIcPd3"XG'@Y:.r1&dT/qa6.kW&66\U
%i:[]F`s`Mk1(SR5?2B*sS"$H%^l@<k,uL*_<CJ1)s3/_/&R-"Og$T*MPlqB<MPn>Z.(o#,??GT.<Zn2qI;KiYPTJ.'p'(*mUpi*]
%REa30B!!Y3-a=jf"VOW;0V5Z%0mEl1*K@.S&?]WNCh([9"4-'4U>/\UD7c.FPmpja#A#@X]i*Q>.G'H_)jk>dp0t8r1hfj26kPl)
%MNDABL(XpOS!2!9@.Ugd%o+-X'**G<fcGB]6_afJ7U"0s;6A/Hb%5EmV"cIDpW/))mKb"9K^M0aQ\\*q+XR)M_@PjA[H3[ME#<2f
%p>-"SAN:_',t1?8\i;fJTm/mYO^/e[@#Q?gKsMX+<'4V=k0OB[%,C@D+@RMWJ],>ar(XAcoS'5.H]X:e<<`OWM]6Mn=*CWSF5PEB
%\$qF-Q2C(Tmo/.(NVg4FY2qiGNXpFX5(tH$C=7u+)u-VAEtdLX",[8V9IGT<S1Y?_gX^,tRKbhiU0<2+VVGT>RCq>Qq/A_#(Ld[S
%>"1MHK:e&_VeX71A'G^qKf`c=L2@k^QA_'5_!8h`%786H.cetI`uA+[`uu+ol^=-+M_JM$iW-KrRWoOB?>r+i4!48K":(]o\:/RZ
%S\FCOU-<=HhJL132[5a0Socfl!h3e[IL?fiD5"iPWWjKH-shJ')%Zq)#"bPOFS?1dS)'qA([*>TJ9.?"@3[M+.7d+m^<r#3^11BJ
%cR4HVBeQ@X+UT`"(XR:Uo0L;SdsS.]-pX*A%sMui%k[^5Sh#?eHlZW)5CYEroRjA@WZ$1G]rRjb9&S0u8nYM,d2bJ+ZRs)G>$5>h
%k:is:@+@&.Te_^BfGKI#3[m?F1U97&UgoiVpC&-5mCPpr]k#q@%N^hbWVS@)rS**V;mH4Nno4$k$-cV[NPfi.8r"T5.<T&j-)egC
%dOLi?K!!6FZPWnHa-%[/ZFF.OeDtIiN(p6C/a>_YiRC_c)lMk/'gnfV.[AkXlE;nP=ZH\%.p;e^7NR=`dV&2.&#!G;8O]2e?mm1Q
%<Cf!EZiHo0-jp3B\adO>84U*Ylc`Ku*):?No`5>*Pq]7"Y6[#)fc4[l!cETU`EQ;-CI.5j@>b+l3gs2R"o$E\:^AWMB"k8OC'Ej3
%<gmmWEV\(-8c)c$*M<9_F!QcWA3R%(%R*3Gd;hS\De-M2pK"&M/$fAj.`b:L4IuQu5b$pt:lEQ&W'h,t?'Rk,88Hl[f"=u]];3>Z
%CLB0fp+TTt-$?P\1CPDYLFj3enC^l^^C)eI2PZtF@MSTKd%]jEOpkKsZWOkd_??adX"<R??0:hk*PU,d6j9EaD_9Z2o($R&i(*R(
%Yfgf"CBFPP>&.HpBXeNK=Tias19e\4Pb,rWdDK$k.lL^t`(Z=3KP^R`83dOaF[fBYI[>0I7Tr@KRXE\QEck0J_=4ZYdOq%@W0r7^
%;R+UY@QK[+J1;Om@+?h7S1p<`&0rpDbmZO)Pu'"XpJ!=.qaSR2UNCXtScqE4%;_k>g-;\&';jUWi`(#L-1'fWe\Sf6e3Qr8ZlQtt
%<Z\a+]K"KX4JtS>9r"=`1eiqi1D+Ep@gj-8:-e)m2lZ(R@'!+-SX;W'/TFINW#o$h'+'']Zk1nBJVXWd#spSQ&!IJk8?c]JcT.-A
%#ak%f`=NE/8h\AL,q$2spU`G#6$LO^^5&gX9NsE.j0NCZK1/eu+M`VP=FfI=;<WODiA\a,>$Qb0,;Q]^e;D<P&<EuN]3,r+6Blh8
%CH!3rI-?/sDWYTW<8.C*KPirk9tl$]B$JJB\6*5l/e249=a:=\_J:P@dCn>#Tsf*Mp>j5Dp580^idm3e;0-tL[li2<M.CE.V(IrL
%N&SYGrN7")is&]BD5,f#g:3u=hEq#>h5;5$p,.C1r2-E5f4CJbU)Inl6;i!A3eE5'&^"oT-%]Um@**\Rj!ZsC/&<7RW)!WEcBQ12
%NV;]A:l&bQ.WU[qjDjs+D?D)k`,^GSnnDfpM#t=$*?j]HhP"8\UXt(/f@S3nr3@+40tu9,GI^%sI\)oUR'&uF5s"?57&O]o9]GcN
%=cbEr,GhGM!P8[c&Ubo&)"o#n38m7o9E/NfJ1M4^5mW3`T$f47SHr,PF]HYu5o"3<Q6\:DN3^JRYS^`BlVbs!K>&c\D$-k.)<=Ls
%/[X^-;Hb1TLV0QspmI^01Gic?/tMdW8Gl6K&S#$i(1R[ZdS2sNc0XcMqMO%%iFXEBe=C"-4`@t'6VI&=,K(51,Gbi^^uu*\5Y7Uh
%AXA/7Q'NmdH9rc33_BD=:4rG?3Fi`M+6IS\<g*l)MSg-/$Zoql="m435sA^q=QhbEgD@Be;8IFY\t8])<@K.tN_VYH(PsY+SHXtW
%"e47ELpPPsXLR8tB_hB</^%^_QNSWs%M6T>!%G?.I"'n4MTH-$M6p(M,I8K(^9qA!?3qpC5A`2\hQ6f*>o4(Y3ga=Sd&O]u>pa#3
%"\H7d?QK?u_(+CfW_b/QD-"AZinDVI@9Z"i$J'mQim<qk9T<8*kT3hTWhb;$hk>CUo?(1_<6blq54K5b'pBbS/&KQ2]K;F'RPGH[
%n<+@?0L7eFiN-NR'/U8e(6*%a)m;4sjE<Cs2fH-S1W23Fkl.ep$.+YrPs$':/N@^t=/s#[i6Cd<nOAZ#WF5/9.:,oji[gjZ6,V\I
%%RdL2V=>)LnBDO+E0m;jb3N+)(6NK#[UZJ@lWF;-o.$`dM^)%*/8<Tg<'(bc%3Xtd*GPn@R9DeD<-Pe1@cG6!kG&a!jmciRgqm4J
%AGG)bQKUYmC).K6aCo<F7gYp8>j%I$[8BF2=%.%4H:=j6UiggeegO5b#jb%:$b<o\!O!4K`iBZr5+"/l`koUe:'lR:IBN]fqQ-Q_
%9c>LY)g.N;lr:o9_8*:;EBU0KU);cuUZApcC">q=mgHS+"uJpUc<P!AL)82p93`gejM=]fB9EBJPNb@dWLsI$gJ^6_b;892Z_t`,
%!Rfb0>8<1u1<MNQ'qn.N#lsupXnmo;f<dTYK'X-:mo]023CXGkSuSVk@^)M!o7u&^=j28l,KmY-[@.:f4A\VlerF9R/mJ2CfHp?C
%b#@r#YGYL9ekG0`HlUTL3SHj2L:Hdg6VE6oFN[V4\[qJ_i_C*/lm+'e*.p:SD9m8'2SPucQ6[@8h;c/a*uLWqPKF#tiR:Ar!IlV%
%I:X$4QW'TTpfh'r7a!hS@(J)YK)fdD;,9lbI[S,3]+\>,"o1X7j/92,;5:]hDRJFSV9W4p3J[sUGR<:_"ZcE"l/PFt>q$h.^0[]J
%G+r/6kgm;=?Spaa;,,=+Zk\<$6rB6#81V'SPJNq%HgLs!Pn'M(Jf:AE&e0Epq-dENBQU,9<P1dN-2<9@/+\ZM/)La#="30[@%j%+
%!+'aN"iUi\j\i3g[D?^*1WhWR8:UoAEY)rc_S@rH=]O["F=]sn4q"^=OGe?.7G@+LfM7h?bg>(og12=B9R0+d<'UT6/aHZK]0]F>
%Z"9in'H7[Zi^k4JKZZSL8';Oq.^p8bHui+*&%\g+"GRIQcPXQ;%XEW6YKELbp"?EGMZe-](sM>W&VHsr&<&uR#J#^_c%@G/p4-!A
%`NT`kb).L6K*!S0GZGK+)X"O-f/dG&P_Pe`C6gN?Lle5t9fB%Kla?QmnM>.,hBn&`0XlHg'2o2(ANcu.G3QuF_A5b3PR"M"&9g35
%`=@q@<T/%AR=,nf405(mW@JC@U@#27/RC5!m"Enrij><,*NO^EbFmHPTu>H5IBN35,(p,h8N"?"6^GG"fHjX][WP5'5:<I.JIRtb
%?cI>]lN#N.Q!6RPktd#G$m5lnM;).:>=pB4(%:4jM1-j<eHHpP%jFR"%'nb(<tX_)/BIZi)0KN/ZOs)ued.B?^qPWl#b]adLK'2b
%!lu\KI@A[u<d#PMh2XWC:7Ep].#NrK-<WaJ,4C`EM?F]CCn*$-*uGRA-O'RV3Ni^!2`(uCmNs$'2JlE%!uqiQHR.:b)M"7P5,k.F
%U"IG=N.raUR1)VJ&86AG5KaIiAL*j4+B^&mn$8UdV/@dmiGE3>TAEq<m1f'2>uo^/BN]LP(8Jh)N"\j#Au*R#^Y`0S$Y_uE%8EBq
%%Ih/23SHl8;j>g/='-r[Q&I:[4=_s_9n[I?9JNS_6($I>M1hTt9*'giYS)e?R\JFt'Nor4263H"c*/dm^5uB2;\TTN9rg/pQU1Rp
%1VPd:^l%FCRcm7k.]OaL$SolQW^O(F-\ET;qb-)/7!']IdsHCd&-^P)1@'3$RJFb+j$Q7h5@i8.Mp2eA)/3B4MQ6E%?AJCf;%K_N
%F-nhS),7AU(pm,t?BemOMGBFXV&PM:'u;6QQ'p32:HDaR/rYO_+#GtXru,,](rPO`>KMr#`!bN#boEVsZ`UZ&aMjKS[c*P`SC]5)
%G^TD2[T_Wfd\6)A7:/$-^$N4T^)qq7T,*fIqZi-p?.B4SR^.Nn@n`@jr!Dk.;b8=Y+N,C=U)9Y0D;"hoAD>^&S]F[FRne),IE8C>
%Sil/A.8hoJIT'd=.<06[an_eA^Ap>9<N,Q_@l+P#C/for$E0&Fn=QY06Ejus'"7DVpo[TZ<1]1D0nGAZVkQY5=>quLFp3kofJAX@
%>O^c#F?PjjXZL2q9V7u0bG%Y(fS-7\MZbXlKo$Z<!%P[JQNpYB5OIW1,![9XaS2WXUGN`\UM4?Yb5_hL;(<?UJb,$5,/I/]O([3B
%N-(>[l$,Q09$&3?8ALZTiMr6^!b&2lC]G^3<WGGRb"Y$&6Wr&$UCg'1raSf(O\7AaARRaAQGj5h(rDa[>#Vmcp"Rp"633qT[n3su
%rnD<Opjh,73^A:6M&j+B[au?SNH<l%#BT4!]*Xc0d\dA3.Vf#]8%C0=/M;r.ba#*p=XPoQBG'<:'Kq4g*s?/COf'\NV0Z<AQE1ub
%!)k6AMaZ)jW[G\5F>MJTM3#Abm&DHnJQZ[1jYQ4>L1>jGoO`d.ci[dA/AKbH?:!5Fn.SWqR>FM'.2f$=ff&Ai,$b6K-RgR(D?gBS
%8R$d[-3Daa"@@qDNinKT4dK.WT+?fK$*HO%9a.J\"al$Y8&,N[10SO20$<Do%[%-L+%:ssZ3A>,J^T--,pKW[j?+n;:#&MVVA3?=
%O+%/GA]h1YDP."A!`<2c:8e3n+^iRQ0gjB-7.9YeNBbIha_>%+*TJ6VbEMt?PX]\30b%=`bA!R!s.H#SXdpaqkd\7'#*%GM20uU<
%YQh6.V)A;LdpH@4[f5h9[.Y<gTXDDMk%X08Z9_u=R17mH$Z2Kds.IjGXe!Eh:K)bR%2uhdDU@$CEq?Ye>BBtX]Bf`]rIm1Dm4Z.=
%CObm!e,!qW%HRKi*40mUi2Eoe#Y0lfAN3KOIo(rRf'ZEU2"h^F=Bf,m%N;qeEmWHAP%/"h.a$-DqoWs+em4Z<`no,`/5CD/N`NTp
%4NB@UY<W>PSL$=1l7LGH>'-(p80e!=FjS]FWe8dB?`^#Td93WI,M?;*"'`QFZ@fUbU)gW7QgMkCEYe)9Z+kBN#,eqT8&h^@Hq/q"
%[t"^cr?XRF0Dn7$k1]UQGiVhL$[MAZD^g`-_7jA"pn@\-*kg93css2+,sCJ%^ShC>rFJ.lo:DG\of`ra.t5k!?1XgmH`MVBg0=:r
%QetsAUKuu^rV>b>H=%;l-I#U+U`jcE"\EW\/IXE1QdR"u]u<:aZ2X;:[!kprAFYr2,si7AMM,pQqTFP6Jpo9cP5ItP&B+!G+W(Rc
%EZqf=="koqf9.9p7,FX](h;F.+cC;e.3+NKC[$pi)W'HsREFCW+^+&:$A]gR=$i]rKsQR@hLrM"8.gibKg_)R/L?S3j")ND@rFAi
%?Mq4(a?&siUe"gg\#;j"I:Yj9O0=7+-N?tI,e:Co8>.MGH-s<!n"L;51;B%jBi@!LN"eqWQ5OD'Ijm4+pg'j2jSiU5[.]h*h(&(M
%30O2TacW=JhP)5`ftCrek3@@D4G*K:kn3"EiZn8BcLRb-kl8"jhj,D,RI_.:ai*_8+lU[a$BatU?V6I),4lTpamenf,KW"G>*/C-
%8H&N<U\9,4P53SP=sXWQZW]qmk,h_5<&lIpe8K!EP(qCh[3UCV=h"$]fmR)MA1GH!d"L!<P,=MnoG'7*[!.cmTrGZ.8Xe@;g@U<f
%GusO3,c7p1$&s@5:NAppF\c];XaJRk3bt@0hE.d1IPEQqMkX_eH-;or8Ttq>ao1dr7`hOu(.ZIeo9Mm\0V&AF^R1_(F]4HM/#UnN
%=$*f&ci:=t8gu#mrKLI`c3gT51\b^`e8J\/PtdUONp9](i*CVn19o[;/%'Pd=BW5l=_+A[hD-U,^<T%qNMX,6l5)8K[K=Y#cH[=Z
%i=`e'=R)*Z%L_=XYJa<U`ES7s3V$3\rG!-s/^gr<jXelt)#F]KoPS<@QA4$rXJM;K[p2T'f2]'J.oYM7*LGcG^.L"H#bAA.)Bj#V
%QOX(04dV12Dag!^dTb1sZdW./od^R2?*T_"`Z=/IkbkoJ99u$UjNEKl=4*@DJ_m[cfuDmcY@#Mu]6Z/br4EbQB^Mu0PI';O$Br*d
%XUG$XTDt]B9S;T2%Js/pl<VN!71"FXB^B)UqTHkmCN1,MWNipS9T`V!nJFaC?U"1aD#(]C1.Cr-F_1DHDe7V:rqn.OAJW4-<gTp"
%\?EV?4ni!Efi7`]b^MFamn1n/c#FMkWNiZ)bb.e8!]3?j]d7?<Za0p3j6/'^qpk&GWD8Z0=eCGgrX(NZ41mFc)C8aURMALVldUS'
%F&o=>_b6X0J1:aDNr\eL1ng5TR(=cM'F\,%E*n7t?a=s:e?MT'V'I>+]&>[O&S$Y'j0DG<kK#3U$)hH]PU>Fn6tAl2`u>)'9a#lp
%f*`IP)rB#eP/98a+$cqqL3k86l?RAsbdNSQ=FppF?TOQoe`&9A":_*GH?d#_bXi2PYVPgY14psm.BbjX'MP$-(_`KW9^$2"b+[?;
%<HbV1,%SE2nq,eQJGJe"VgF5`KqNB>^*EAe\UfFX%)-lGV%IE2rEEZ-?'5f[Vt!,W;?p)+,DBo2<J-+Y8<-!)0V?UcD2r6m)(8H^
%\DYN>E_Z)[7BV?C'NC0SjGKX,at%@<Y!DXSD:M)[PD)1%:/YSJ)8r_:nGC1"T'a*q0)CF.`Y*\Nr&/l5V!)V0+D&?X91O$YnTr;r
%"a&9UmT"J],,t&_NWLb_0$t-@%:5m0\AF]hO$T1oC<i^rKg9Wk"5_5@rao/q[!bqYJK)Sug!>q^oGrF@f\HU6#a#`#&[s2iF1P5r
%SkB@O5Vti88R3$2:o):I=_Xll*W&MJJufA(f0_@@3Mj6WYXEB6Bh=O$+Nd$I;=p6<WZqa>^oI>=:O3]WI]a+&Tg][!651dPKfBRS
%i!g:GTgW^P))M*FkGPr/kUiGCp8m4!6<b:lG'W\*&;\rLP+E(k5/[4:VUJGSce5BD@,T*n[i@^Y;OK!)\tL%g>D!"0r7^=u;8G&I
%;-heDGsY9?i_dj>%4O+Y:6dpnM%lt_1YD0$X[44$$GT71oPI;Bd,ts?.k^t*p\@l[N.G'L')ZP0_>ID>&Y>ND$Uuo3$:A"X]]U%d
%QskTrfImi%*cQ&jjgd"""@W?ZnlrK1b7S2b7HEb0@qjTH)p"Q@XbMBb&_l=1F@!&'K62q9FN;pjq#3:@=9pU);I@=C%>bGbPm\[m
%ZW[bMB+cLGaoQF?MN;10HC%D/aG'[Z>Qm9Xl]V_>P.tf\7aoKhdQd@rR<e\,eQ9o1o0Y+ha(d?X59RQ>d0pBZ!"Gr-$<fp<.M2'b
%&Ip`J-Z_sbK6_Nu]d9uOP&d!E%lT":olDh1$f/;!5c@,*$J^g`.eF6UJigI8oaS,],8+TkT,P</S1jA"LHq\(7<Q>=.'gb\CcoC0
%'1b"%#;nY%Zg:^8?$/gcYg\M))SPV>:YNE2bHW;6U;+!u&\BXb#%Xb3LCn3CUnN$og%kLQGE2`#X/\0S[+Q5)@V8_RiXl\3NrVS%
%S.F/]R7KL`/)on@"6`8HGHk+4d$RF)/;ZaY^KH>!lC7jE-p>;5OTtcd+17)gdVPFnN?<RJ,l(P]G,fKprK8<2`<h0?@2J`4,5;0q
%9Z*u(/Cs=m-+?Z(ZSQR_3CH>%HWZsS?:9Rbg-QJq'Kq*%3or4YKZ?'>aK3[^o=NV.(kFpb`<5reM#-R-og<5FQ._FW7s0D=?ecof
%'AW^k-7UUfYY8\"'ei$E>Y8T5KsG5)BdRQXMR5redO.)H%g-m?!(j\r@BEHi0?XXmMZ8tfj`0-L7&A-]/a5m!/u/Vn\b&mB$7Z=m
%#CQ;GN<,8`=![kOBA.io!VBJq[MP\EQn"6;Spd[B2<n5#-8K.;MN4uL(W(nhV?@-OJ5^Q'j&=Ug<(#/-[.Q=ec2;#Q9Z29dS^QhX
%aD8mgJ__/SHbOprYnk21@eKeXs'(-Q4C2V7AALP<L^&%,4G=HDG_0m'?P>5d;cB(f>Z&deI8$1@nGc8NBVJj;K=-\X?MGWC><g-B
%X%\<jRXG3K<X7[P;S_jYnS\e_%c*H/lc7^-^fe+`iXs?Bdjd=ph$[:']HO5\W@KPXeOP_QVOB8pT;k6'?lEX<QY?B^SK$ubBr>`1
%Jog4>q=sG'VY:.tOMdfp!ls0[W>:Dc\rCfV*^`b,K[5^V;SfWkc$Z/aPcGXkSOjU8B!2]M%b/kCqW5ani?iI</Y8HT,e3UEmIbq^
%5!pI3=$/qfdEpCC?8;c41kFYQJrSCk!V#ka+4;2rGNM92B$%]rUQ^%44a*l#JN\UO'(e2O]Rm9[p*q!8e<8)j?[M@Q@QgcFj"^1;
%`J*UT'#XjAmRdRh9C`Aj]")&YO+XnEF"imn0?]DVOVb5Tq-t]>Zdp,A%A-hZokTkhG^mQuK+%ZICLZMlbN5Y>$(VaOi<`15KD4-"
%f,iI61)W<V*Hq\XCru)N-WPY(DR,3/3*%U\/e?bUH3H%_LUXOrqlkSq=A[_769T/<nlW->e9*)M2B!*bUgu$b+:C8"l*97MYfp+.
%KaU3)UOGhkIP00R(oBIqKGn=u*_sU'M=*l_Hc;W71rD>lgpk%DY8D3fZ+$3qX$e#Ur1*P\J4D/3Uj^I\lKL#1`PD<<k#"R=r6?1S
%Db'KLS'U+N^-92h]1!TFN30Vq!R,IRH];X_)PDMsj@L;EJ1pCs'Skl1*k908)7e/Gd`\*>V&%i1k>mpk7NY[]aHR:/gcX^Fj86_E
%rqPf69V5]E'AigpoB-&Qg7!58"Lk9+,J43U-,B1\s*YDtc$M[+>S)C:\P.GWFNp<DTrrH!:Tt5t:N.+^miLu8_RYH7k1uXpY>:)K
%O!K%ThYi7c6%4ZHiRVd<$od(=@Mj`%>YL?%Mi;)<]OPH5hP4Sjq]6j.h7!Y-'ZN:*L:_A$1>I5;P=\ul,A!%q@V*(H*\G:c[s/eY
%]gp:cpGHQ[+hL.eA;K)^1Kt``aI-)j*Hn<,0@;RmVH`uBeA)fNL3p*Y2!MA+'M[R[*"=ja,ADWurdG"&oX%hY:"J\IA<RJ8K\:J=
%/^Ph3Fpk_V@?<\tE0/seE)P=i-la:UMo07=g`gb<HAF`eFKtnU&=kAf,tOr'Ddb]^I1Oj+0.Z8r^XK"6,'^]r(;nTN^-_@sKPtkC
%57Gt1GYah+'&Z.<nHn3-r!qfbdi<kSrbUWNTRWE)>Q!qIk]I$tj(nWKnG*J%.Xo#6#L1$]%M)0Z#8$mn"$Y[u$D-.;6cnf$6em$L
%*e&F_Irf'obY(^t/[1&5r<ZZGFPh_/J(QP!0h5.rQ`-\'j=TfpMJXp*n`-\LEI'f9Oohq,5tQ,dhdB$tDh6"pH't;o9$(u`9)p^h
%0M;F%n#3)D\%(OL7aG#L,;pg8\q*>?D(O<?"ecq"X$7a9<j^3*Ao8O\.RS%G&":DH,uF#2_,("7!Y[(F6*4R-ml[t9*4u]^&`>!1
%V9Qa?\?WB="W_-i?f[2`](](=d+&ki`JbDc>CdXu=[J5HTp87a^4\P`9U7XW*)Fi(p,\j.6h1XgOJlbr&6]Ag<*3^=o8HMMiC<T3
%:s\>1SO>u6hh<aF"-Z=qU'K]_^BR"=r_+J%U.PJLB!b?B^j=,(CCX_0g3/bk@1<Y89E?2Y(,l:17'm"^msl>Ta7T1#T51'9&_W6j
%UW?StA(XhE6\]7tW=]ku1VbX?8dHAoo!<da^(e27_1,^NKWYNVp[VptYCMMi#>D%J4[WB1ZG$j?HlLXj%g-^NliG^E"tW`dmW/dg
%L%Ej2i78%Th^dnRL]t^gR]@^,N>)4jRnGmF'j[o3jHS]=TGhgPMY\&a;T0Eh^34I""r%8dnQ9?:7QeK<UBrZc>dSPcj6mkQpqiW:
%+!(tq?)@4tpX0<D/sug"I692Tg.?NDFGdoKnI<P9J:YOBo<%i;KRRJ]c!H>n3!XhWp'KQ&m?tJnWBA4-D2pg\HFTF;m;/Hh&+G\J
%P9L>rrdb8-[7R*T#])C4b3P]dRaI:cn)<:7BcT*tS-F<:0YEiO9GK'@clm"9CR\1-KFYgiO5\=S1A&naS&c?MFR\)E%3E]!6ifT,
%Q'q(5()RddXk6sKOLCn/=B`T.C5WS\fTf_(FM<<oU)q^j6^9'#dH7iRpc8lO2=m/O/:7aZ"__kh2dhGH:@32-6<Xu.F0k_O?Ir(Y
%jhRBN$6;FjCHYk4Uo[YI+:e2+h7ep:rRI[*'d!FHd.Ds(O9.*PrPH70Z;TfW_GUols2B]UnN5#(=W0Ed(W0S>Uku2rfC6Q=dW;Fs
%g0N0".FiK'k$L/3q'+d-W9V,L-8PtG(L;b=@PLtl9='"_qm+fBM^^^=qmK[DDu;G=f=9;6LMHY=(6I9e3]]*^dIq%X8%:G,QCUL-
%()NIa\+PYfk3i9>ab1bsB&_"8[B?I_Gj(hUO7J\:9rJArj%a_uKT-Q"63E`(q1\^UH\MnI-a_<W6]HHQX9YdVXB]8H%kAOp(bMYJ
%epmk!)AMh?rXsTYUk9cT!_j4/^#T)H[6OeJ_l!Z_JAoZp=E+p]X^1Kjh]1>4C0t"Y3u90:jsXWb0Vq7\kjAk<N)rM8G9"&uE5'7T
%:`tepMYHX?g3\8hC=Mcg..o37o!KQt/5en)DH>O8p;LMd3clMNCninTE55S_N?0cHL]X=YIh@hDN#\!nR"s.kE$Z27na4\k!=#O0
%V[ks2Qk/$R%?XfANp>l1U,!"\I%qQJ@2n.V'76io[]q;]/eP-&2PZX:8(A(G!+Z3g$/0t"*SpeP25.;47`In+2;;pnXrjIsbn;e%
%:8#X&9nbG6h53,`]'h0Vbk;'P5Rh/h>T*=^g3D9ac.rb@WeoV6U%(-N%3:RW36&@Ora8G4)RVo"Y1YMJT*FrLRN`XUJ>&M#T"ieO
%*\MN=DQ%ql<6;11B]/X4$QGeJ7M5+YI;D;JJ3>H"-EL3?,SIu1C-+$83/o@*'(igq!$ie[P$]u!J`-.2%(hnK!GsjLgS3i0[PP<R
%CD$Q(h:pj[6PA))5WcX+$#FGWYk7u<R+'^A!k(2>'ll1L7eLSlIjc@?rJDla^'q+r=MF&M%$K+c%<n\H(Ypq^#*KoBAeV:7!mH?V
%H2i14<$,ol]4U?uO_o[/\^_[q'KKd@(kHV">;B+Iq\*6*9<PG3FC41*0o@gf*jb\&0hAigBOT+]fS3>;D"uts+X9X@S$QX[W'9$,
%NO&p7g/q&AVah4QJYCi&%3Eo,U8i3cP\$(32,QD&s&U#^V&!Dj`-T@f$7_/W5/d/9&"l78GFT"b&nm5kTKY>BE:4>q!B#=u"]ld;
%Xi]_M<VcRMOq,=I%tg2CAK*Mmfnll\g<`L2NO][Wqa+tOB&cn<rG?<^Lt]),VRBp*#]^:7J4Lukar,V3d/I@OMr#gT9rRAaVOFCs
%p$@JGW!:oX"8GYF9-qr-!hB#gBd'F8@IA)&dn8j@<dZ*Z#o35DXP@QY::K+koP^`opqp>61Ag!JLp2DA,l3l"k[rmQAt#?.#,nf]
%Opt)F%+jeN\q/U']r^.`&6d6m^<IY"C3Z.URGNBFKOotb;)!W&cf($eX66.i%?tsf\Imk(fY?Nu[-HPc*?^uMmX5]YhrWX=k2VsN
%arI,5)n?,nR'`P.SO:84JQE$4Q&6a,YpsjtV*+&%T,ft)]5b!2[]ATV8fhDeeS=5*k4:A)Q>J-CF.(1o%[L`2"P5TD]J!!]BnHqk
%CVq2q/;knn7EpC`)5ppDjREb^9t6\V/#E)]1,F_KnN_j]YZH+sY$tal'hEQeWu!qQ8Q):PJ6WN61N,Yq$bOXrnYR6eM$>@Mmn`%a
%1o?C3Z^c>\#IQ=?6=D^^TCI.0T"P0?\T".%'neO)P$\Q))F;2^=[3RBdSI-S[9>P"=lJk),`5]77Kcg'3t];MVke!,E'tE/@rp)7
%`hlW-Tms(Vk^p*Y]L&q!aI6/g<J>`AMQ2`S>90&q$ofXpifFsSZ_1,8&.QXn\ae`8Lqe?71js[9q_YTu5^pZ;pVbUf<hi6&)%X<5
%q_G6rk[bNDF)D(:Fes`sln;dhK+/\pp'iM]aV/@*O[49t--\7R#Ug`:,CPs(*'>p\4D:L*K[>W0L6o#[,5]ZbMOI1*eQu+'$rIkq
%5.)aoBfmp6LGkaE]W"(uTkZq6d*aIbeBipqR`PhSM14YmRhB]dR14lBNGAQgFoXKid""1d=1)->8jKP1WZ.B=D(g..M/p-fDR:'_
%OC&;_9+m+2g/*E_e;OX3<M.F`0GRE!0+-Q(AfQODl0f#75LgSUb:pn%Lt#TL6$_R$Fp06S-+!9LdkW0J;p5e8TKod$rQ&S-6Vp]%
%VW5l/5G4]"I-Ni/%HA'ep*8&\=eJ72aWG?.TO.g*#`ZN?Y5pQJO)[EMkb2:H!h!)<IP!Y(X:#t-;TXFU0u15PrRedN<U1O:+.TO[
%VK9YiU@YXp3j'6M[N/3p[Ed^7E0,'Yl4\U80Y*/QhmYn+;q+/uB;5JHiIMVWaptoHQs2E4H?+JF&H*X)A^aOkkd".<RYl8A:>_:G
%K>iVfD*5\_NAm1PIa1@%>&HaL].\Jh9>qdSFf_\g/:/)g#AXjDL"m6d`m%Ne9WAncDb7IAO8>%\4-pFoF"+RX6raI/\U$6KmB&*<
%\,>@)Ibsu%'PSld-^/:rmn`oM`cQWI?oJm8`Slpd%^-%'$EC9c]#4=W]pO*SSUk813II_?SIb+K$)q_Ibq`Mk$MfL;[bf$V-(ak>
%/lPH5[L#4'0PI9n9+_`?ajukGJRjdd>#qOt,j.YZ.7VW!jLgd0IP;nXd$`+Q[=\_i)8IOXNFH;A\l$^o:4"3W2sXZBG8^#]E$D4U
%l=aZthMOua,,Jgt>W:hs-q&Nlq@]+*L&[q+M$F3P:b*]ND,.:/.PuRXiT5Hom"7IRg(QZ-a/^*@c,l"I4GU6dH+<5"mK@\sCh\5b
%R&.scN88O^kSsk3c08VE>hQT!?hN=o['i+TA.H[AP!^$K`t6lF'PCEs"bNhqF?&pY)&sej*ct+ZfV^$#FBRY/`T(b6'V[!83W"@:
%>0iE\h[=rb\XKLIX]NR-N2>;'_.6KkA1#kt]C:<'4D8OVb[5_pcjZr:A!D9<S;p8!P6'Aa2kSD4]:d..don/Fe.$Cn55$gn?/5m!
%mbS"(_q*5f'&L\efZqZfSat8pk0:E+nP`hPUpP=H^)@7A2,5@iKja!JK&YWNq"A*03p\W=AA`d(DFGaYfYnhBDV7:s;hOI>Ci,nA
%a8qRqV<s>RPUW8q9M65>`.P=E3C&=<XBN)K.3/?3;[*`YaWuVn89sUG>esjMii*,4cWDq[#]4:n:]U2]UV_]e$J".a]GcH4*)C<_
%@S?Xs-9t+:*6gRE`A`lk&tAgAo7tW7A7Qh)#+-tfR"m6kYZ,D\8q42#W`cbu/@*a?/.7hbDRue)Ags"TjZ0:qVsmO0a>n.EX(t2)
%.t9Z,"C)0oQSpr3c[DJKAF$QcLBe##Cg-)mo<9<ELNFLif>nT!`MjgccmrA<)sMLP/c6]!4e:_8_X_7j9]M<%B]l`b*Ft3u1S>]t
%;:&MQ-\qQ^)X&C##CVrKG,%gjZMOjbFJtSBnJXG`!5k8q$eq@Bo%"JVbONbd9$.1(hI1&krkU<.8(&K7[o?i=^tE8HIpM1X.=Wfg
%N[l1gpMF3BSHBN>E.VMHq!)q0a]U7D^<j)i3n8B*5[["EGp>/o=IgN0bE//;YAqlqk3O1r\:]BS?<?X#VJns@>U#4t+ui[C09qJc
%B+^&A5*-CY=9Hgb71"U?n0e(deY6]D'SA(/_O.Q*0le3EkOFr*fI]0Cj/*1$@"D1'j!>*)ics.K((TK?NH`V1>Q%*DD2k2*o["3d
%VfpZDc/REF>Qq5ppgG$]2-#N@()g9'B&S]A&#H`;D5g!Y_$\2]5#XRQp-[$kd,'HlrYJYf!X\-o9&5RV?jZ=LWVb0>MG?41H-!sD
%M)<G6LcT2D7;u`]Pc2#'h&r7ba>R7WQNT*^+W,e4D*nEX*I:$2O`iM6NK2Aq3Sc*DS(nJH*0tk[6MiOr7WmJ\N@r<d=Kn#T-oh_7
%CBIT-.H5nk*NmG;^#Yj9Y76JZs0M4$_u11iL?D-a%kQ;>;gq^Eg45aLXm!\W@YW&V6Ok*6AXh^<h_RH>I-onMXfLLdIdQ$48+@TA
%FPO+Y/.osC)Gi<Hcl,=484nPNQll%FLYJ>k(/?R/,W7k5&oCg=iP`nd3mE:ZMd?:+L'LLP*Sk]W2F<,4h.+iD!@O64K2ofp!`hC6
%,94^cf>\m"<K0dWd)J*u377dO2Sa#.:(SOZW1SJQp+f_aS\@_mH64##Jiu0\6?8p1$_$+aj)-i=JZT(R#tH,B?Nf4g@c?gj$oXD9
%Dk@/(+n,4$E]Q1Zg@-rTQ\mLGHDE4H<PrGo]s<.S?EEtDoFE1lAmKJ$"BTqb9pjfjMd,cP'LN)dldfVZTL.=il"pF8O"3i7\r%g#
%mOnI3]CCR"XW/):/K`gp2QedTo.'cZYiVL!%M+"LV%kh#'[cXlma)kcp8TacCuDNkSS#1j%,H8?d\pneZ/<Z<eFY,Ta<fdp_-=Is
%<`1/$Y/?TQ+.)FX=*!D*[#DWSNfDA]hY&2&`\N,4>\tDdldsusr2+jX_#<5=QYLX%fA=Uf^g\7s,Tl43)2:IQZDJjpRI3&3nLsuj
%@^d[fQasEM$HZZD"7tPkHPq4l!)*70!f$K5#<Zq<AHLoC%pWM!hq5^U?h/d2Xga6sh"lR8/FaZ0GRj]V06l>rb7)Cm+1T-"^TiEh
%pl6GT)_W)Go@?\W@>I.PKH\(i$-t^%R)8I7:L%<AIqK-^I)-W=NH^=ih"cLWCuXob@>HR^_tpelk3tBe-^PJ::[DN6ehqpo2d\@s
%ch2Mq;^Hp+&OV#l,K@I.AeL__qrAAWreX>Xq)t>eWp?6RN4]*a:,+B7B,.'8piZEs1Q*Ekjqbkqgp;o7oCfaC4u8/BP5[Vb(cPd,
%N'FiZs%YM@Ns'!QoaM'BGM\IDET[c?=nc26OnJB+<+PeJ=(LBA4X2%/aq.pcPbCQ!H-3YiMQ*ZrDn*sdr[YGJ+,9D$M-8-Q%?264
%G=c>r6a*H4Z9;9"B&%](BE#fAIUY<1I)U/m_7jA>j46;pZT[r8m4?l_MXRWD\mdf%Bg+]lTd@FI6Hc.=,"$-0mc`$-pR2Yqci(=$
%dCSt9'TK_CC!hFY;kM^jP2Gi,EVDV+>,q"V1Te9-=jtf&\%Lri);#IAC:rg`Tj$%8Q;Xh4hib#03VTmq"UUO6l@1t6TD@(/ZYgZ4
%$4(N0fD*]cf!R[9L3G3SqMKQ8&D%rsq@>CRM38><*@Y32Gt#orXd?tB/Yjn3[N`L;Ejc2@L7XAdY6iqXfNX6An$iag[T<>A9j=:T
%*Dp&<oTlMZn%C#_CU`0J[IqeRKPfLm:Y@Y%kE<2(o5dLX`m+7rD#n"Qe8<14QfN#Y(AIH<]DIW(D-6cXKj4*-/W!\on1BW(8V:4k
%\*gu,E[*'D-Z`L2F@kYE%4_?JkZ0Zg9Bd3KI7<GPK<JtEMIWiGh&)PqC:=g<QfN&F+g1%b8lT%-]_/[N'Q8\W=!V\nr>!R])rcb=
%N>K='H7LFd7J9cjm#(4jf=`AUj2MUoDh0Q#Ui27g"moM4jGN_l>;)u5^.80or2g]S7K:pc\KZPcG50Z'E6CCOOMGl!,n4+g?4k#]
%*3Q6uQ;>7=K?Li2dD9D+Y6a(gENU_K\FfqQ>_(B7/KCA6*ALfC?;\TLJ%HkZ$Wjp4L\m&I"EF7u<toXC&iV(U@<,F+E@%WgLuQ#=
%MCL7Jief:)\^h_2\75"J_RRJ3/'9gmH:]#V5^c!=([,j+*#HD36QLAukCPfK.bb\d*++"^+P.OEU6+]l$PL"3X=G4"fFTu0EmZ$_
%W8rG[5sI'Iol2o1F%tX/b?X>jL1fq]Kth8hj$PK1k'ouf^/NAnCgE1M'iePed*99#HQp%tAT+O2.lR=_aQSM-Ds6EbcHmXaFn=QF
%Gj64D)lC4*/:YoEpK[%g>@$dH'jpps;%Enk>tY*Na=d.)6"Mu;qhE=tbfgfm>pf2ud/KXp\]1<k,6ofc#>*t5G+>r;QDm,gE);;$
%2oqna%P_.+_c%4/liGo5"*^H$IZq`h#lj8D_*L:*6C^pCdiOs`KH35e:3J'Koa,EEZ<91_J$S:67QKWG7O-WOCkp"6S<j@SOjN-I
%*cT8nR*rNX43/;5<0IRE/'a'jM1UCD1(5CfkDK51R>?VkE+:HgGNsJ,N4>Up>&orc$&;f&l\KfFLX'(oSr+BCeA7R08eX?NTNs`b
%bpspUM*O)dkj>nh3r)6)NCS)$a?nUIrNsJ4gZ\WP<JNXZ>-TFjT)+]hBBdCF!Ag1IMgr_?+(#?B[fn_g_AN[(TeH(M+OKQValU/b
%$5cu7RKgF.nhT\oOfK*-i;@,Vk*9`P3II8@l1(a%lkK;4A/8phXM_AjYr0D29kpJV`4`[",C&.c=.Cj0>kqddXp&V(`6L$8HWfrJ
%LUPdI:Aa>0YU=<!HU=Sk%9JICJftK!#0,%>4EG++jA]hI[LfKsB1q`lK_R],:&BdrC=XS.8afXf<JKqGG;$mbkDRlorJ?&@X,bog
%K+W?Gc;T*I7!f8'o<It24E$(B`:#`4-]6qIUQP2uGYAk!@sZKd1s)1a0JjX<ft89/UEL/[Q3Z'a!TVI:jf=3Mn<%gs"@GdnKLk%1
%'q#REn&<.<kCp@UPGL>jO1"%$aEj'"+57"T/\5hg'g(f;`g+(`pm&S^5S+I70),>R?jHG"UM8=\?J#2+aj8p[j5hYf(\7B0lAr4,
%:WcX?-Cc0`<71\MWN:$u,1W!F&>sDCrO$."\!fFW_piC(e#%aKV/nZ-372C)B!-a89fYRra5Y9rAcdk(pl^6f1kQ@"[J+,lc?6_"
%N3?nN-o=B,m^KIl]s2G.Z%_ZM(2n/ac&2o=T*T#s`C$r?lk]HCediA6[b^t$6\"GTdlD"2<_/57.O!i*/98UtB\8RSqLt+H.SRjP
%nM5hrG9._,aQ_N+h4b#=&A]6`Y3G^7/?5B7p2F8>=8E0bkd@/PM\@LY^aJ.6;NpNcnB-e<m\4&LNBAc#R4^lASWrpDT0o;;dK2J$
%q]m3GHFt@qaVu\qYJ>=Q*oqSEg&r2kUQo9*6Ce_?d(t5@*<bY;/40DOAp=SHN5mR]]WZ<*OTNR[25+P,QQEZ^B![_.#Ce6dK-uJo
%?5+qYSI%3+KkVRKfaf+f4i?6s887M^63Wf\cI9%d?6tA0=Mfg1(hjT\V]$3KeXtL(`d"?iTBNJtPGF@:-.]+uHrrKpYZ=W^Iq`FM
%%cG_)m%uX@'us[hEf;HooWI+Y,QGjC5!8CK9b2arA/FqrP!LTLb\!?/BeXN#Jga#,IGI:8V:h-,elO#G]#2YHMm-SOGVl3L<gWa4
%dGqXaE*gPL5L,n\%a"]<kooGi]\dLA2Lk>+-dU,fhG&>2CkJWK;Hj_Q"%ja.<ZH9geT_;*VP`S,*Zh2(bTK[j%P2PF4R;XY\5raW
%s62'D3u/6(FD$;]Y:CZnp_^BV[C7H[)VdZ^ADO2VdV>u+'=B:UM*)MnfZnba]Q"7'Dm'%i`u_U-fK458PW!U[qOgr?fJ2[tkaCTP
%,!u7Z#@t,bC(lAQB.(0u@+%M9TI$aC/AcmZ4u3<;q)k5gPn4@9'q82$STo<hjV_^a8,D2dN,U`u*rCd]"/FN>)9a9E>*K7Ha+/ia
%3dEopY,g8Z:HZ*A49@Ar&iT2cBOAIuR#6Dr?QO31*%ONRLp`Xq&1.t`KLH,1V\*h@_+um$R:k)N%Q5mm.iaWTi:&s&:4)1[HMF3+
%<:,;@Qj'[XC/m`SV^^e2;4f.?n2*Ek3!64c$587tG_nHOjBZV)ejSM>nV3SBoY5JUQV_r23]#cRiC:.VH9n2#2CcHu>"`q\!G3)<
%DeT]QqM(q\kiB!XmO1ur4JNt--dUmA@^gWuQiG1g.Pa.]Vu1*Ab64=HR8-1^&i6OMV062M9:C49+2WbX.ah;4+.$7j>55\c$3q,t
%o>SIoT2l8_GQmC@Zi(hm-fjgp=q3Y6T(&3[fF\_`+bZR+O(aM0(pZqN4rJ=>_/@CZA`aCDP9-1=CuEEdO]6FprA7>`ao(7,,^>6K
%kauXickFL]]l:[$qS6q?[4I4t!mJu+n^bLVZ5,P<33Cad-s@^OC.QFo^8Bop@Ht,Ok'qtV0'RJ\+B%A?MtKN"5fa-09ARDMVaPpY
%<"b.;IStOGf/RTR1eZ\Eqs,YJ`-tSr>t5U7W;k3i\8f(g@k/OjH5cTJVNfrPdFLi]pp4f^nG<nXk.Nfcc8klTp>h@Z1GqGCaUg<q
%<;<W;P@efpB](>n4Co0s*6L5"+aA!cQ>l9_o]SDTrR,e9C???-",TKKMpRrq$VU_E\]4rkaP\2_[nlX1pIQ2=pnqo]IBHC5)YmX1
%:[tp:1$o')0J6FiMZ`-j&#'oTJ?XHn'TY8)+cE0sa$9>A"@"]Le<^ZBqQX<]5Ja6<L[LkijG1TsXcC5Op14WQQr7,eh`oLG_[a"]
%!As+8)n9i;%*#/P[d<A`!o_Z'dJ_:Z'_5%*oQ7Y%0da(C6)_N,/3NjcFI]4Fm3qrP@S#8Q7_$\fSSE`ka1[q5E-9%7&0;];SRYpW
%$?&_?8N#-c;p>?-$EFMaWuaSjQd,X,5#0ue$KD!b[Im`b?Mn7,TXj87og[tld4-OMge&W+PK1#:I)h)QN2Ga!1cm:X;:n.-=FLS.
%9OobpaK`Kb#SZ<1=dEE5;tfe7Ab,3dAC"d&pK,"WXgoUuSQLfd6Jdqn3*)$L-H!k9Vg^:/I135OqU;n"b^NdF1u(5Bhr]!j&N91>
%bC#;XQ:F)cP&hY3n$:MKq_J0uqk@n^)l1HBS%J@4Ar5=Hb*Vp'HS:n,f=>VpO29WD.$mEu/ZJYCBb#3\l'o8-fe2XB6/0e09dOFs
%la#nR*r99VSZXlZCMK;L40XM>fm^*).J&7oWNuNriVVDQO2todANl?<5[l"+atJ.sViVDqWt8%B&[<m\=d\k<DM.:an\nI=qD'pF
%Mh^gq)48"_>CmZYaCV_2nSA/b>G1_/qsh/OLd!/$FSb=\Ve^8/LP1X^>^]8ufY_Wj2E2->12VYJ0,$9(CA0?'UI2>jOuKoD4aeR>
%[fh^d3PJ,Ei7>LcNm@%+8E8W5l,uI)DS8a*i)&bNaW-+$UiYm!mu)jZSo^1F_6'%q*?>uGQ.@r#joimc1@M1_4'MS4\YH.=9^cB*
%h'[GdpO.ohLN[#NH-UhcVKm8Gpj8_?o'96c1t@#[7n8GDVL,,-D\G=Eq`a+_g7QtSr$h"XZZME+d;pp<5<,\@1AUOV[f6)m'f'iS
%R2<_4\BYLk"lJKtE;+d(#TNFt56N!HRj!Au]?CjY.pcbCE8tN$8=&lt;hSBDE^^nAX)*nIs-nBJQGcM;#kqWeN3J$iZUWSm=*Z%G
%GaUQI*HI9(P1%+d*_G6rjc=NL<<`c=hW9hU6oS8EJ$$IM-C=@I=6V$#N5&.Bl'YU%-:Nkp8Z"]\bbs6[S<L_35&&`RnkZdg1'<53
%^!&e$f"3K_+,9AcE_7hH.Qo'gp$WPnZKtXA.d>r^,h9XNQLD@78FEcbMCi`:=88rA$l0n1Qc"t(rnB!T*sV:7E_GDmoG2>X9Q8tA
%b7p:\]h3>D@;%jd^/"3*B#!huGPNoJH'JCD&oa*<qpV;8O;a<aHBT=)+8RHMVPd`Ha977QUr`P2QTes*KXP1KcEuPKZY.^NQh`Gm
%I%N]gHG%FprB'`B9WcDt>pe06T.\T.1<$^/2FZB0.CMI"d`9S$@"leZRrJ#Cm$g,4g\dP2b.A(PSB0G)gn.(2;ef(uS)bRW]LpL!
%+`ij?;\4#8UAIkooHA:R-iJJ]:A8%)mt;]fjR7Wlh.?*Te+,"?I!!5m0/>b.L`MN"$S5TkCt<)0=Z`eh^'[PW:3L6EZc&0rI40T5
%EGWO_\*6NaZP+$aX?<C=ZC;Gg;\Z,Qm1nfNjC6'F\HI"[B<t3q0G'u_<"NW/<IKPI*SYR+;+"Fn!Tq2A;B/[9SK",JXJQ8_0WhQ&
%c'a9K_0#p04TU$KhMCgVUF9oN31`A'6qeVk1@umqFc4bY>U=XVR#0/)D]KN<29>fknr0L1#8;D=="gVs/>?J&>%L\VGeSYAjaTh8
%*KNZKbk1iK+85TUlVdl0k!Nh$5$,!U7hZ(G(7bqeoSL0;Y46"Z`hpjI)/5_[Fg._FpL7&$<e$Mu8>jb7H^:f+Vm&']WrYukFHYdQ
%'ONUimWW6g:p$kY77]:%%G;Z$9NTbSTf2bcKWVYTXnOSWq\_(2.<Mq%_1g7T!6ETYrWc.nVS8Hj#Qp:Q,"[[#OC$*iHA03:4H,o;
%01@(k%nZSdPU[?L#@j4N[!)]KU#$>EeD0ucdO\#'^'(X'YcieO8,M.W2[2>!fsos%O>eV^qnUha+sd9:H4P'`n*c9MBMD!+Zg%+!
%l4UZH_2eKDG\NTic,8hQ1A!_!U>S9=`d;N`_V^kUWY$QOeWkYIU+,C=d@.ENEFD32-!RI41i/"^CYBkld+OqIRYtOV4e>/82!pBX
%/i\CVpJsnOJ96:sFp[Ogn-lLciYGhO>-4%_o'rKBW@+=!VIkYAhN7S$fD2=8bG=gEl-MmQ"%0K8p$*bMjVHH%pTL\%I6(^,jZ.Bd
%[B<Z@671r)/VfG%%RnW2'>pfs[CVYncg2unb>8MQBs6f*XSkeHK[8b[%O,q+1`uhMB$2:-+5&tK'u!2D9%N=5Q[Yn&W=hlgpYC+s
%[cgMHK`@ibANcD:Y77,<5+&og8!t';p@cq23iAmV6KAB582`P.:p,ku8"<hq3'>XbY2,6.[$cWSMZ2c$Kb]#T?@EAs]S'ILkPe?s
%aMT>[OY,RC:#j]iG)"RC7*VWCn.^Vum`jR&XN8>QL7ON\cj\3K@UgO:#)OAtSIm*@UX]lbFYfcG(S[%7l0#6)!C"AHCfhua9W$P@
%"iY+:3GX,`q_8%*_Clg7EKOZa(U7;?.[b]\&^G_ZKc6^e:V^'66VpFF[8;=>`fIse7.$ib/)@*;ct<RZMbi_?CLR:Ds.spRm(Jm-
%1(^Z2.,N0%!g[Eus$4dlhm5uJ'^'f&81s<e*7Y/R&462j;>9#LTPS:7DV>oI46o5%)Y?Lm+^@6uctkkY4Ek\W*b03@XhEZB-j,6D
%fOn0#aT34XI?]4!E>5GbI7p5e"r]#j<Xj=a01BV;6k4Q@;^E($5*RVpa&Q=R^.n<Tge=LjXe4'_8B5eNn[WQ(D;rG@\[mBW-i;'>
%1??+SH_ZjBEOf[Q'1l50eC:(DqECG<%.;IlXlVH40,JXbL%FK7lb[tNl?V"Tgb6`CSDs>^n)J3tJ/FWd%.WQ\kR`9gAWVi"Fs!$0
%05N;2d).LZKSen47#T7&?bJF321shQ^pHG'98(0mcmJhENQ;Rt';>93ka1Epo-CBs6?kCFHoRK%NXF]r7e0BERMD.LQWV#5<'CD*
%N9h."8)eDQf.=;(c_Q)1D;Z,'CA"-2UfP(&UXKaWQoQs,:Z2TM>_B&WVPe-Hh#A6r2eaEu%Olm2gPkf,P6N,L.T&#egYDZ$mt\Lg
%.!?f#d*YgpfLM`T`#0WI"]=L'$P(8Nnmu3I'%m_-(a_No8-Lk9$5c0JrmQLVKFT,hNg_1GS9r(ap0gVsV*o'"@LL5`VPi!Y!u`Bd
%&Q!(Enhcc'LBg9<fC8_s`]T#Q02jh[E(9JK3;b@BH87N>;A?1`1nni,Zm@spL@<a)/.a,\Q+`ncA0+Xt?<n@:[KED*pt>p!Q$bR=
%biNsj"%0:lp'=Bn@]JERGH742Q?;oX084_3,Yq$@QROE36r]Nf`Q*'$HP6;(ZKP#P2e#-T%;DJ^1e!Nu<ZE$O$%cO76Mfhf64.R?
%dGEC6iOJTZQ'h8+c6#J2kU=Ei7lQT.&pY9Hmg(@ng\ii<L%OrX^e]9(*?(%]ni4XN<4>]0%l>K:l,u:R#?);1P:n%YK>p&q4GY/O
%Z];6QMAFKkJ>QqDmd@fNXjFqqY1..]g\QO@Dn2JJ'tnI9()rQ\Og9J.f"S852Thr;i<B=3o71XJ1V.`Ak[sI0?FCf!UkSNJ0@A*`
%S9l'(OF:L3-@ZRqKlLi0pAWY/\]+W1jQYQ%b>[d"S#q>*L^s5E92iZUE^cQ<%=BH[9&$A,SHY3m>j+\j>?69!kY[^\$atYa*Wm=E
%$l_=;TeTRq9@Me;9*q4OQC<kpA\/ue7KsHcBmVQQn.fth0ePEj,AHAs"<@m8YZ44%jO7)]3aRQE1<YccQH;%H?ih'IZa?N^jIiYP
%8+ouq,*>*o%'tL2%-hNnTA5]JbX%\o!hE@#hM/R:3CJqYg&HtkJ2W&C2V?E=lT^D!pFu)aPa%UT8,lD6^X.MAl>%&e[O#Z&^o+E<
%894s_8XAS,CB)qgr4ERMDeUrhch1%g(>N6t'D#Src\jI$<3-D.\Z.DUlrV2O0]="a;hQc._<NhCPVDrt`6m+AO2/3(\6KP+UJ4O!
%g9n6Of%fjMRK.e?U?`-a032@E^ri9:2b<6KKQDE`g`rU(3?F-D+sdF+)/4Edd3:_8Ag3DqRb8Ap%WVOWMQ+Nb[5^Sa^WTmA(a^0P
%N?,4(p6$6qU.tOmEi3nc(P:,?MBkb!1@3Rh\qS6.a^`UlE8W-[<AY^W5Z+o;Hm!h]2_q1"HZ?V3qTOrAKn=I'K-WSr?PKULf]kk6
%-m?kH8]7Sir2EdL,T6BLp.QN;!o`e3"4tgc=rfts:aBe<AiaDcV!@7pj_jgu?S4as<p);>Z1f'^\Y-AF9KAhA%mWMe6^T7@7j*E2
%hb7;K_nWW-9a0CN1eZ>"8SD_@mjdq7o?)P@^_OTuQB`W?D6D7*YUmZ3Y9qE.7#'8YTo\8]2Y:fIK=!Fj>"LVO4>DQ2RbX7Nnqc9?
%R*c]:JNP"*,%"8B\pfkL($taF1jI]IkOT\r)BN*]NVtSn&pi?*$k^oZa4S2lBf77U6V>b"2//]:82E2>MqOsQO;Vq/@Efgu@AT!*
%h?,qtVABiR?2:oC!7G<GmY-?,^elZG$H/EYG82[Z@FC#kKsmSb6l@oV=SV@g8)8M]4(Ls?`#dZHMWVp(fkq'Ud^iGJ'%+Zs2(H%U
%&S2#+419BAs1Y=4g&eU$1!O/G",U1J?Ip`,_O;IrUXDC50/U.2:GKR2a(?bW6l\5[<A?,N2t%28?,?0.4er66kG:]=Elgr8\&(R!
%OJJp_/#.("IOo'"L`UZrLt"O?$i!,johZ'W]J!$74H0Q.OJViKE9i,;JIAprRdX*m*lTQh(Y"`t4@C\lVN:%&8$e;an^D';4$*6X
%VoItmN`"rua]R4fP#c<UPHN_tK+2jBe7N7i+O>DV?ZH]m;1\qkS8CKBBc)BGVB%E%NE3c*i)Y.MeUY1?kAn0fJGJ=;0_`QbS;>s>
%DfU9e%E3TcXPAcXD8PgXn>RsZOF)[?*ou"l"llN.o;$T@Ho2_.GA0h.^2UW33$j4\s5bDu.)QNNPq,E+F(f`_]8?91QrdR2B`tO`
%b#WBZ(#q;UHP$h.54K2H<[ht>D@Ib#GGO=Xo*=CQ]5J/+#k\)?#EM!]V+6<FjK%<pT56q_o'#lY1Vc+XIu#SK2%(?;,='D'OVLFV
%<i/\p_uW`V@7;0\`e83oGOPZ2B/3ma3=rUH<eN<#:qNqIWs3Bd%B(Y9;c[kV?OPH>;GifU:-a<U*NS]D7S?6F`tS<$heAdV:>sbP
%=b-8YR2[f;a[DH\[#ib57pq5Bj]^4V_;[nP77]MijUfMWGX.3F;$4<0*]RZqn;Q.0(39^41=SY?08m]&8W&5WM2hH_6B:ksejPJ*
%koP:(A,e)ObsqC=8.\q&0\X#.0r33[i!Xp7fD[Uo-IeC>,a;/d#=gk>g>=Q/B"Sl'UOS(2P^7`E6<[\b`=Wt,]^`C+)]RaZTKD=9
%*&*K#f`;kj-*U7CEsZ[XBj\A8WjSQZRWY^EKmIHa,%\-cZ+Z)4Lh>t$iGU1-EGc1OEr%]O4U\lKfk(WQg\YtVJU?!$bj]1b)mm+t
%^k*YpU0',2MaCQkk12X&p"]CX_4rZ@CuM<si@V9VX2X"pbt<J3a$.;J`RSeQ>c?^m.q?VO?^19$N43t;aKeK)l6cZ3@O`-m]hHSc
%Z^9K.(=Zcc2F>,1e2g?BmnfLZnTNSS^%)6eAO$R34+(sY<nj@6>*hAnSciq6he$NT+:2;ndgu&q,VH&*V]UH]C`T?(J"\ZZ)iA]U
%(hJ?61d]sbLS^)0174Dt1/p+DA]s&UKZ;H+'",okdt:`)EcKkr!m,@qQ%$5>VeGs2V\Dm/+F,>7VT[e:_df</hViYJ89:j"#o7O7
%7SSZMLh`J1.r`"`,a]%D!P4n+H$8:(jeIFC"tZR4%7+X8=p#/"$Yg7IH6EpDkcQXHKEjQ./i6m9-g3*gRpV8BL,P)4U,g$beTGM9
%CejeFnO\TW07a*k4V&&I/7QE<4KTTc"hB-"R6CP"-mfI:W(?:+PXUkBG_VsNTbX=Dr`j7#2*BmAY_BUHW1_;hBB8L.(;SoiZUp;%
%&XIDI'Rq(AD\-LA6S6A@-0KU.;MuI0[![*Ta,2H/Sci#R(mJN,q`'1-(5hVj%u%Am.<G7Ek&I`J^8(lq.rIgb$7'>>c"S#3d!9];
%L$\\SKU,\Q?<DNn;[jJV=1q,mnVHdd)"C>b^QTD;0/`O_V]MR>,g67(^)njZ,+n<Oe095IPsX?._&N(kcU'aEV&uIQTHtL?mRY/D
%l0B0sa'SIM*#QpTBb'8F;sTOk.GEG$.5_\$=A]PcSP*m2;Wer%Gf:l3]oiiaZ6fPDJqP.K_]c?r!u\7bCc&tHfl,Ci)$\Q(UM8ID
%P]ps4"7nVHJ:iK0[VuNB:b)e%Gj$6i,S)KgaQ:ub#K"$:Sg0r+)>fc\V>XAe_H"4O$IcBa@/JQTOddY8%b88_>Z:1j1]r4&&Nm42
%_8E1afJrG9=:B.4X:J]Q)"L&dZD=qYJF:>?3?2r!OeRPuF+Q/',`]$K]#>M.%%\Q\ZOfp:Sf=Vcal+%JN-BAST"Y@;\q-3>+ct[O
%SkA#iOF-J.km!<Xh2ODB&p-(D'DY8Pc>+U)H]$hc8`>H49`hc`Ws)&ZD`K/Q2+0YHFA-FJ_La$Jq'qFr3<u#W9]r.@+PKI8q>#$[
%F?9-Dau'LghB\QM\jpiaqlrl;WTR1jmZ+ter,Rs]=E5jH+@I]@RN"C53EXkVCk>qn\s^es81d>VpDCf4'I8dQ"%X]p??om[FT@a+
%S:U:>Z]t1\+TM<8r_9$;hJ-nIanNg"[u>7\qhaq3SN4Ej^9.D3Nq][D'N`Ls<6O'<^X][PSc,[ZU3HUG)DbYS^t"n<Q33/aX*YUA
%9)_$E^a4J?Ju_6-OpeGL7@.h0FYC>eK<*tZ4!Pa9:RlCFY?Bh!.<WfAf-&m)_p@R0)9*T.2g2^=ft-7"X(^sb+c`%q3TB5q4B^[p
%C?^^*DM@G$9Q@ID]&ef:s4t!":L3iYS"CSY1)@?hEES!"f!sT$OuKPH8ajlCaksVg)OF\%q#B2`kp*<8S\]3#j][5Ee8k5>\L!U&
%g%Y,Zlc=$80XiZ/QPB$UQ.pdrT$'*!EmN"E>dD]K7^r;:CM%P-5Z`g@/I,R8m?]Br5F#Q),,_J7jt/`%:=_!_*I$C>e>3mt8a7e]
%^87gP!8S:<s3uJ['7X<TV/@1;qUJ4K]9^J`Md=<pQTTFccn1Ge$MKY+Y.\l!B%NgHq!8?MDAhi1X@l=#`qu(PY".C?g9mJhRI)X8
%r%GVJ$>4;1m91pIr:Uqnq-^]_U4)47>>r1-QFg>j?1Qe$Aa,NFY!s\G>^,H.9=DIC8sapL3LI:7GMR\fGulP?bBhd%?1Qipo-O"a
%>k1PU]DB=uZ/<e@\`CM01U&A6]NUZYEo7*:h6Go"j'M<7e\Um<$*Q6qQX"c`nKf,\S`4P_nCIX;OqFncX-]?$h0dD'f8F#,icXiE
%1L>94ET=H#0%odG<pYhgDnG:t+g8Lr3V*%39:!4Wa'5.Jp@Kq8hQY$ZY.Vm6f^a@B/RRAKoTCrtNT9Fdo9eH_f)3_^pflT;?MpBT
%D`d6E4)\="N]jT5GfcR:]mIko\#,CV*."`O3u5N$I*&/81:^uE^DOPsjjNJ.0A6!7T.]s3f%g1d;(l#9Q;__b9\co<jge^glFjn!
%%C9@aasFN'cMAj!?MN8,^Kr)+-,X%Jhf8!?;jT%^NV4C=h?*1>VS.#m[p8g<[Vsgl(Am"ZmBoRS)##[Tqh&rCq)dp!@&,=0]g4Z&
%b^3bhGMIPQ*5?(B$SK*Qh]%H$ahZMAhfA4?<Sk%NFnZU]?R'a;`7NhS>^T22>d<gaE4k;m>IsBcOfntl\"%j-+)Y6W9"3^Kns'9k
%A`i%@CMpjmr0EnWDS;D7Htu,s_pB43l^"=G?iPQ#daq.Lo(7)!/Q6$TG;$N'](qYoY8=t8leCj;A*iOD9?t8cqNeO-4b9e]qq@<Z
%b^C]h^2`mArgga+7pY][m2I\rr-G,2%f_%WpOC'>Ip!S;c/[E-^1?fh?Fo1flfLhu^L$f'cYj`rNmTM^H-,=&3k8hpCWLC=rE:VY
%bl/ClpUAq,S$#D-^MU,8IfForpH?E$&&.-"s/GJ`#O9'OT3LmdJ,T+k5l]H\QN[@-hqJbD;'p4>!0$Pp<sJ/d21_Zs:;bO.o1.J]
%'oRPuf5uhD+c7_<P)D:I'\d9#1t0AX:<"sB$R0GjY(m#n-H>'=FUb$.-b]?]e&_+:KT't/*Ur"R*?6,(Ue3G%(nOA1lh:mha+Xh#
%.XdjPLJoF(Sf2,pm>_);!m[V-?hP)GP+$eecVf#:3l/$!V3-X=%7@/e(qW%0"<UijUb/.K16fM,1mp!P<>L+MKIHgScOp28ju"(X
%h5u<bFK.F(Tos**HYYNp*Z2NrURY_^pltPoe"8>Hp5(a2$L_3[mbm/=l_agHDASlSWYgo+$2B1(p`aSpa0WtHb[Ak"T>d=qD57T+
%(UlO<''5]phNl`!T'hOXCUQM0=KHA(E5lbXFGJ_tQYQWBf"fQpg;94ZJNd2P4E-T],YuS%]ijmB<$mmr(rsFlb$aQg>VMGf@-/O+
%[A\ZGLb$?#J;A3r'HnGhD8!1_35E=_6q.6,.sR')4]0]67iBr,=Q7)Cbm')[1GS2EiX&ME"MbZj.'C/e'Q!(VP5lsFM^APO4T27'
%WPl:h9gdGXr0.dEAtI#CC(s)5LPTSe6JVj$$.I7PN>U.$*^eJ'1bTSt!CrM$A<#Lj<LVDb_ILud7cFSC;Oe4B2bYV#Eb9B[60KB-
%Xs$ia3t&ct8K)ZfP\2*ofgIg'H>`<sqY?ASSQ4`"Rf'5e[SYs`4C"085c@3R61d,p5HL=hr,i5P&pQm17'WEDc=BON;*LZS\`nQU
%D:&>X*Yo&Z)9K,&cJ0eMio5Lp^9c^#ZJg+gLA;6F\$@FXI$#BW3de6YM8Xr*,l0<A]1"5X._>HnU\`@Ed1"H]YTr3hZ+?j-lSrjH
%UA7`AU@MhBA",eSOPZMa?,3P9p'Z14I-#Ht#SdJNYkUh+Z:MdSg"dCj%i$,8!(?4*c@]T4^V*'/!$L1ckJ6YB_F^c1_Os^GPO=p'
%NFs&9N7-\Bcbke\@tnAV:?=LJ<&i0Tcdc%rYRpngLpc`O3#--1X/AS2]L)7hGcIOm_f*M63ED.T&X#DRZh@5h`&!Vm?](_A'</(^
%(?3fqXPBr;*%6W7.`#BD-:lrcjdn#U#P:'W&g63C50c%X>V&p12<3$HdO=BD&!XmI9^Oc<&]`eI_<O"Q*'9'S%`.ku"0Xmj_#Y]3
%@SiVjN:\Sb.-SB_<I78F<4`r;@PDN7Tr3_r'\,&@*C1V8JX%G/L?ruE?UOeD]hBX?!+0436A/d!0tU7hFVV#QYFS#_`>"QbH$"-]
%'ooRko-)?/5t=mS$Qp`8XaM'^&0%Y1_^TcM=5rH5B&iF^V'aX3K9J!8mHOORTV9`%WniS3CI,gITiAu3XI;s=ld$]272QfVkb?"+
%VTC3K?)`96:77OO!?kl_LWF`hjKhcHOY&7-.g.5!"@RQklLD/F:Qm].(k2B2Ec`:#4ZQCc<M_XuHGeu.UaN?A).*qdAfC&hnS9D?
%mt'`72e,kARXPGo$Tt_0%5Ke+)!Q0$#eo#/fX*r?e%%?H*?l'OlWC3\C1%VH4aX_m0E)'XcX'TG7o8nNX,i^;]/J`X9%+U.F\cSN
%A_`/Znl+/7f.3$fiPdq7*ScPrm6*9jQ\/E#lXkc+Q^$((be,Y!*9aeS\_h\lZSoAl655SpqaK_$XE=NW>Wl)B$ZfW8B)Vcue*j9=
%LZ\J$'^F+J=p6nE]B]VpY<c-73g:`<@4h"L8O=?:gKiMiG(>#*e@?,jB$!b+(Yp#A;miI?#;:I\q(>[nWu``rfn?;DGsE^uL[g00
%ACB&;Ko%5*H)+WP-%bcG\K:HZ/oi'eDX1]\@O"&2S,%[nN$fTg1,`s$RLa0P=[htY(TRpPM<VCm&-XTO2&eaP$d-3#[e9FJL(h51
%dgiQhDPhne^;_,u'@sUNC;bmXd/?@V8"^kFC7:jX[QrJ4Ls*KR\h8^("Ar'<pKZ2Z^rSJ!@CT7$FC>LDN[5MKMOq<t[-5!i"M<d:
%nY$A:jR$qXU-L/O$$"3p'%-YIb]Or'BpNr\.l=:gVXB1.S/iP=h!QX;8SFL%['?n\0tk04OG<K$_af`pLj66hl+%Mj_C;Z02hW*0
%jdJOn2+0MGpfO4AHTO?<Hu.o/`YB5%U+;7gcURt$+Vn$L*b`>E<LdeP"q;8nemlj$o5!!qLC8T1HrG:KTSBd$872*J`>Hg*"ol71
%./h2rWq!qO@N)!ph-/h4+:Zc8fCNA[@p2IY=V2`F^/,')Tcl%ITr'&hj;V;ma!+4f<"o?B?^PXri6!K\[b)>T4DGj+KF:W`[D%C4
%&`pGIeK\[\BPt8'7+P;-br*F)km5*K/^Lb5ou%5j]q>H'l0<i%Q$1f@Y:UKbr4ERBQM][i>bA7:";A6&oWne`?p*LID&mVQXqsc4
%?;CPGq[7QZ>D[H@oH113k]dB78-N)//DMK\+.03t@BPH6$YOjN[j2e[j'8ki@,a&o-R;+mK/(?+-BmBE#(O.;SoCQ3IVA!BKa&oq
%5A-Y<q-9Xm[WM6O'#psL34Wl-]:]K+]t$-QV@<GY0SIc@-Bk6/"5-TGENT\/Ma#EE+fL4:dI,&^+[Dq]ZDVn9ndjZ6f;/HY]UEoO
%<t,]CjRdre3C/?ta>"hmD/7L&'7^ak`EKChe#EMXW4D5Ec%i6C+/7EiC=^aNNu1/CUu\:cHO73E[b'5Q!18;F*a:Ed):n)1BT-Dc
%jpe]oA#C^@\Bn!9!46XNl70Vl#>d/YqHLci*<]_j/#!/M7k:`udTK'_NFciV&I:ML?[b6Z)XEBZ-SlAn>.US)Oco#e'hdiocpk=a
%DDh*G_a"l_+=V:D2/p[GZ3SS_<q<:s5T)di\sNes.\r<l"96lkOZ=V"%T:Y"kXQeBnmT*Pkp![*M6iYK;Q+/8#_P@PfQ9fFBig:n
%)r0#Aeu`sF"PMK@LXf`T]mX#I.7lmXU7$)7Y0OTTP0s$PXb'K]&(c?Hp'g[*XNl^VVm#JujJLqIjbp)68K"VsZ_2Q?i#B+;KBf,?
%O2g,[5r>@dm.\Y&6ImL""5=;c@\\Np3aNBJ^0I=3]V=ko6]RMG3#0_]4]_6V8E1u'U+s^8ni\"r/q$"Z+]0ZsGjVEac_0,682&5)
%C(@5"$4sZ5\3cEq25f%h>S\P/@D2VILa(-Gh[VG2fq!!SX=4VJ.[L)D;*aH:mANDEFEb1Xcs'd4(?Y>e3A+\tmdP`o3eS773.`I,
%1`\+#^fX$!mYXVu5Ke!e/Lp"jm\lAI.:5@NH@081a0B=!7-rf@d895]c"&lArG.0hW(N+ikZ7lk8J_\M#AWJa&\td-i>b7^_4gP+
%Nt"=8d!UZ]dFI<7arKb]&j8qr!q2b=6j(c9L,;f_0K>n@^lS16L4u:#%hT]GH4Q/=mAQ++gH1b+@cq.VAr9SC[L"In'a+!^TEa8o
%MV''ZQBL*u4[ufo\nqEI,@A9;gIM@WW2+#:MF.`\YdYa>6,3RDo$G?[#R/reR&@]\%")4[^Lj5]*#;pF)\u"e,&G4Or.Nm:Y`^oe
%JsHQ@^5.Cr&Cd*7W=IWI3cGl1L3>8]&L@+1!C9\+/['CrU;!db(HJq"CJ/fL5cE^5*N;(@m?!XI@s9a\[iF"tjKA`Kl$N#QUY3-o
%oOiE<`fJKBK5qmlG(=e*$p-(MTmUY,2AWgb<hNl:YDY[0U6LY>QAn2527:9CF7F*HF0/?X53oJ>%4!MYCL1C`Lr\?`jQ\moY^m4O
%>oV%>=Wt;`*JO&V%G7!&E3T&EgjtG)9+U6BhZYbgQ/U/f=Ls$"iRLgj4WM92Tr'^J^9lQ[ad:.+1d/UR`XTO5*@blsM)*\i)oOs@
%nj`L^FmkQFl1]Yf%SfBqP75WDlqE)%'h_Vu[V$sFQBBn#O(HIWNo[Qm4.3C5j%d-9'=q*uVld?Hc8^cg1-OLhK;NuAK\XB3eBrO6
%"a6>Kq$eZN50=6(ldsEcaU:CCe&lPKhTF,qR9(':G-9&:T6)@/j<RlKHmR[oS,-:p3qKkuOiKOhZQnE6(G6->]dYO(2m8H%H$HiO
%8i#Zuo,EsP[-K4-R<HaDn3S_7RD5&sWq7[L*p1jRRacWe\EBo?C,1:+0!]%oc"j1$IACKdO'?m7mkR/S>hRuso\YoL/hS&;QrkeJ
%"pK11q8tUBr*Vi;V&<lEVe#u]4_NI<OlBEkZ4d#"$hs/QaI"I^b%GI[_3,hjZZGUCWcXpIoo-O]4;7Pud=Mmf')s#q*UEcepC8+X
%&JuR:"-4Q8<eAA[7UIQN(6CH#k8V[^"4r/6iSgn@',L(@'J+:D)(^\sTpN*I>#Yqcp/^B/8k6,lT-:en5/u1aj:?Qm8,PSXW$Fb9
%PTADP'*f/??Qs@p&VhpKM@isH95pQ\kX<2Z6/-X"LE[X-UVCZZ4XqJmOt%C(kD:N`Z$ZVfbp51=jE"QICIAo&fcO%mehOG([":Ed
%ONSfQh3qO70,L>m[i7;(@+ZVp+o0oiB\F,)rFc1%R-R(bZ7K$bR7d!(mE)<Xf$Zed5rP&j-]jW3p"$B./$S0uC*@_t'c&bXC5>q"
%4IDR5?X0_d%<8iCpGQHLF48+ZoT6mo'mF:a,0*+/YH=0m!6]F_gXnp&n]"9u+ER[a?dNXVO/FE"YXZ#G<ur69>gbfo?!!s>@8[8e
%^_R>Wg<<ro*^_dlm$9U]\1I1Y:ot`($S$>C&!7$eg.Y!^6nCQ>NW^/l>9Q,QT<aj@"phZOa^U.cQUM=[TQn)?OmFJa8Ath'egDgt
%%Oa>Q,W!fuL(^bc$abuZ"?,9I7a`QU$&2XfGm2jPLrRJ3fSI)B"3#hD\l"ae'qH0O8]".$B=/M8d+lUq+LH"mG%#"G)^)W?3rJ&,
%%gr6l?k5t3W%J9RjleDPm!UhKV(176h,/J41SQ:uK'"5;*CLAjFYud+W4m?i1,oW(CMthBjrU:P"I9E>'p-7o&n<+2Guj-[BV[)%
%YN7M-4lVs\*B%$#[`1cbkkHShW?D.MqgM.ikdq*)k\LLB(i"BF"^`^n0[.Ru_iF2=^\p!aeoi/f&4J;cEA&2BW74eaY%#$uF7LDi
%dt4-S'd&\*h*=%]Yn3=]Ln;N+Bb5@C)"PK$6(jD%PJG5`j<Lm>d!W;21>NI<)1$F,W"c!/4dai/%WSOp8ON1eFqm#(gg6_icQ(0G
%GV.H\+5@s9Ld2o%l_fN;B'GdWq10[/Sg]Ju=?P)gZO2e8Vh.18K<Q&aYY^$>aoip>BNRYgn7clYN'3fb_8qVMIdB`#RsdHL;J\/1
%DQ/qg[t@#GN[XsKA`[OhEIFnGQN?+ea"\tR.E:q@;qa.+@u,WuetQj@Qju$X%.0EB'0a9OI#<K$oQ[M@ndp+\0C&eOMWH(2=Y[tS
%l<8Sn6(lb[J!r#gOuS[\n^U=SB=)i`H,<#8[rZ?qd7M"6/U%eP-gL3ZH]>_AjUrZ)'%5K45B\]B.LRtINsk^)oi2k@7a'23Y<3RB
%_0_S5jBnQ16$:E\(%aj)<stk9]#r0I!7^>kcAARgVapqBNcF9uLfTi/d$&u,;t>1RodO9CfCl(d+gRPOf?Sn7RnDcP2%JkLC,kiK
%&Crl*/o&'<3ZDCB#DL^?02<aelZ,YQ&e0_]g@Wd'-)VhYdhCQE%FGlaPSNRmeuqN#!+74uU+XC5TOo@d!p40=])Z5kkKQ'ZND[\t
%\m+_R"KEX.R_6ZUXM3ZE*^[Y*5SgmnhHcO%6rm@'k>5K5%7l]&bBsq5)D(/0[tWLkU;h$(^Hq"6oi0ZX6HWe#4WNl&6m9SHl;p9O
%RNB"H]!X^b*DRM@9uVGNk48#K8lmBWGPgkVdn?u+LsD\L/aCgg0<t_1jgG5ar+Jo==DDDWF@hT\WBH`,^?Z:SYR%Emr*3M(N*r55
%IH$k;diuE^cEj+k^$t@HUJX):?(g!ikDQD"otD!jV.RG$?$ditH?q.9WJKah-T42hIdKs_$*[9#`..o`U>1Mo*hITjp4t[Am1^^9
%.O@P`$$n_^R'h/Dgh].;R0k"S9!nGn]%:[niQpQJ!Bg*RJdkJ)nk<+A1)QefOZZuI,sSK$)OBm"i!ScHBqBVBk1CEFG$6ZP&drc9
%h,Oc`>KI$F4.8KL@UgK+M!)/oQ4REqr6YdVZ8a93j8a_qjUI&@,l]q*'EC'X(T+FJs$4c\aB5iDb]P5a]o9FQjeYY`%<PuPe]WoE
%'Gi?:D+8@,:p\>=[3jPK+3NM6k=R-8KuMKUP+e<Jrur4iA[ATeYVb?<C]t"Vc$NJDfTn#BjN&cQ$Q<\h-_XqMHl&1tH5-/A$eIiL
%8=>hS?TX9\)ta,HGL![3f"(e4ajYJ%BZonoT;0OU"=$b@>;(Yb):(["J;%K%h1q_Md/4(sMQMnhBBPCP]g^G_<7b?Oi1>h+kPhls
%+Qu4ij\o@bCemN1gM.Ht@&/sdS1E$THH=pL1tUe&<DOj/bPP\OEqkg3VjdgB+/R_I@=[ProhGl-N'5^lEU:?J"76urq:d$c.7#HN
%S+0qf0[*5$SU6NgH!>UFlliYL+c>)g<cbk#m7F4$,mQ'WO=iU'C!K`@<S!V0+`]QE3^hX:gTpg#PFGi*++\,RD#!*bOR<p[=TXO$
%.Ec[o+0]1?B0m3!_J^6FU0a/_PH5?o!PqVI8pNfsJAlN<:(W]SY*1t!qWgE2[hm&#fBAr[b$AMDLN^7P?3h45k;;!(jL>=5"0h_m
%[Vl1L@=+9`q'C)fjaN@pH+:"[e5DrS=`.sh5o/-D:l!9\[5*=pN!?NAA($anf63k,9s4$U[GgGX5Djko*mGP2%jM,Lgj*[/bJVX=
%&NdDa+SeS0I6RXG`s[8(B_iHE0Vtd9AR5=<Z[EV(mhgbKgr*Ho`A1tgLAF("61bGXqGU:G8Bd_nh3_0l$U_o.45@]rYfY[\bP:nX
%JsR4fOiC*K@YK(=OZKi/6'BHO4Ku[lZEmun<bTV!2&J55#%`6F)Ll;:WlKf7dH]=SMYGJ!:K>['Nfi`%'OE;Ok!pEMpA([L/mi+o
%UN[fi*TaKpI74:!\_-,^R^\p3LC.Wqo=Mhp[0d[]E@_kl)eFu9VW*pC+CVCbA4T;UCP=[mC2SVe(5Up%GqXBZB3of$`c5hljKFR:
%fG68>W4hUe6]]s+AVDjmE,=kM7\'n%0IpdlVsq*F/ZBCVHjTmYH=rp_Tt-1UQ>gtWD<\C!8o"cc>Dd@XFA"]54RZ7D$hmlJG(YE?
%-#XLfeD1LL>WR<WP04DQjO,SKEo_8Aph<laH3snBrP=CC^f5L";Rd4<b+:&9.I^>,mf[@L39CCm*_(7!*It=emJ&`(@CO@^-o+h7
%$4[jki9ZcdWp,6F^tg:JH;.((N^Gj9m_cpr1cuk_LgfH-E**7GkBOKo#/SpQr7!A%lGqj-D*\,?V%2G@IBFeX+NLRTH%a(f3t`$D
%oot*5["LMo8,hN;*034;H'h)W`8/cbCZ>?YCPLs?D3&LlqnXVe[#I/kH;9BR>CC%5%fcDs(Te'H:<C3FSU-IN^CkrUC;HYIb@;P9
%"LDBKO`nY].r*p,#r6p)0'NXIQt@'0lA0F^W;_a_Jt^1hiZ(kbHQ&s5MlGn!YuQ_]>X.ojHDfF(MQ"Kj/Olcu*oCEfAnQ6uKZ/CF
%/il;;"%3Q;f)ZL*8X^j%eimV7S`dBrU&NP`plAT,HTkU&meMT!/j;LR!VG"6]o'+4>`&dH?>kj=T4^U[=ge8fb)5RnVW.XWCu.po
%^h1%tR)3(Uo@Mk@h>"NN"6B2^)K>G!T*F)!hl-X#htCg3Hf'!^d$S,4CX>K)FDSa`T6`EZ(Z2e^8:9$u60!%@\O#h5gUdK1hfj"+
%GMi.5d%`6U37rRbp2KNOI+-&#j8IiT6#ZDPa[,LP?4In4gMRM2qmN+!m_.rMJ30r]3p>_<Xq(0`]=ndSep!Z*E;-9e%ZnGLGEDI&
%^B8Afn*i%"^?tH@>HbY$i9'o#&%MMJdfXL%me*6Bn%([?h@KQ++TBm\61Wd%&+f5hT^)^J^@1rL]C.gGi9pL!&%MMJqnmp^pOCQi
%!B4A0JABF%H9aapW=+C?Q[Kuqo6htlgjRob!r(PqK>?=;r?17YpDkDro6jC?gjS&p!dB.Z$R,=MB*]/XonL8qfA.Tlo5/s_gjS''
%!dA#GLmU.$#@/NmpN<)6gjIp,!]PVo'`n,cD@mN=oo%21QQ7=;II;DNkiTYK)PR%GqaSfAY<,84hWs#1\G<jc"Rc9=56CBd*@)cA
%mieC:DnAR(6SJ=-kiU&`'"IbOQ\:+a[[REf^@*F(n%S3<JU9WSP^r[!<sa_%qb$'@D`^U*OD]D<BS(-695%2[p6X/*]Bq;Gn%S0D
%TeX=L1@_Y4N]n,b%c06@k\6Bs-M4!uh'Otu\,@X1^UG42UcL,T:.T))G+Gl3^?[jhMu'UJ`/@>MH;Bq)J*T:lcb/U/T`Mmp5U!1V
%f7O/!hKPZT[rKlP_ORCE:)*EW]3Z1po3F;4ja;OC7fiF@NYHMU07-UTk52:q\GNun"n'+m9VJ-AZ8[JT^?n[hB^D``Kd+U]%M`W`
%HM4:fr)8ph`Q!+M.MS.TG,c)pE8.Dp=N#Ws$K3+or@.rcgifb1piG&n6E&@Mf8:7%3r;q`3.(+!+o-!D$=S4(h(&ILhY+.g^%WNu
%E;+bk$f$0d`<%u*p9>1]I+QL"7)b3n('<4I]31O!VOrQ[^$KF+Pf%?6$`,p;]3=.T]=o''mbDuo:hJt#[fu36m;B2WBA`Pi=>oZN
%_hI0<4YCjJD3kWWV5lcr](`Y^Ka-eIf*-'+m<50KoPM>N,f&k1?G*)gO.I.[iP0NKOSH-MKr+8l4'u*as/u*M#3iGjKl4WkJ"[Id
%l[U/@b$>MdnTo)b@(aj-N]n<>iOj<M0\4N\08tC/>gMGHYP0@][Qs<8A8"Fc)eE]`hmUZ],Oj886[Y!iFrC:dX+hM?/@R2eS:5S1
%1da4Z[a!0#h_i]@*kuK]+V)M=o*h+r\+U[pb'+:O`)=-^TqM]u2UTmrGAT/j6J%2R1q]0W1uo@c2q'Gkp8sm?o29HEC7#Z_fht1]
%h_s"=kPqiiL8'^?`Z!j)gpYcF;rkX&L'"mZp)9+O2V:hsH.cXoOmlqG%>EV^D)MM4gc!m%h:JbeFRsjc%?Wp4g20B.f5Lg_cumM@
%@8OF-2h[(E[bVMGG2%8Z&AlWA)oD"!Rr9-Yq::!^%#qk'*("U_>B#CkES6#_#T@o(3-=b/,7`OXfnokjIqltH./gh"LLC#6L)`aU
%gpZ8T?/i:ALD!(CD)l_0D.='hpgn4N@h$+/k>3)^]fh-?ppNJD;,T#NF=>U^gSDaX[?k_k/>I[IW5H+FQ`W<5ah2H@U##V&Y!Y4l
%pP'\lMjH"WoUWHc4"S9rfsX7lh_smVB$t8V%aE@;o+(/eg\)X@48:4Ee.-qGiSdSEC>torI+uZYBFB$D4EU0p.hAcTgL_ML0]0>1
%GVO_=6P#ftD_4,Z?#Q3YR&Rf8l_0e$)gfYthmW6?@s-P]6UQ7QhS\0imgVJAd_<3c=R#1Q-6JP<^2*<`+8r@iLHb=8eVE.IX(EH`
%ot&u"9B^LTR?7?[jbMo@9g9>#?FKf/55MSTLP"gGefRL;?T%ipn8R([irui8R@DMS5a5*ZCBC4[T\D@I_M,-2JZ/5*Xqcc.XP7>0
%#/]3("*)9JHUA>p=*n]hU9*iq;\8&60AD'a+22M!@Yrpaef[;AYF:(\!.EH?j97!i%79\Amk$luXP5'F8dAV/#uQ]MAYTe_0lC3L
%kjI2;+aW\%Fs/MAVAEV9F3>-:DjuJ`!rK!7M"5e7NC/rC^24mbm-8HZ&3]p!I>F'>QOQ?ia51$VBU?@j&^g5U[Loe2lV/T9itbn.
%'%-@,2&#f;).iFW$/``%+9+]\&[iJ^W9AL@<e@P4htf:-"_cPM1r,r@B\I6?8q@S*-q>#sJ-/"qLm1rp>6EC^P`0EUn[*'EPuS#E
%K27qR8o(c('pOH.0GT<@:n08MFD?CWBn`1tQf\R.UoIXHgj#RdWJE^l$eha`@1W43b`rNEI[7-f8I29:H9Bt0&C))FO0:%9U"VL(
%>2kQk^i"N,InYsBr*KJ2^#']ZF_R4$4R"B3.It>.Z:l^$%hc!#_Mf2of,2flHJlk<*Bl__;#M'U15S%3IXlBJ30T^@:bIr`O7CPH
%5=:JIJ-IL1.=-a(mfl!(j.b_YAn2hd0X0&f)<:8n4GAR<*kRJ5.mGK,\MOVbe6Ehj%F1<3$O5\?Oj2g.TWnU3'"p`!"iIBlY>lmD
%6S_K';9e,-oqCH'Wcl<b.t!t,>#UhC6BR#M!q@gE4G2tY(oj<QrWDeXGoO9)V7XVSeM:JQKuW2"^rIEqG!A.h*$6[8-48VOg+)N[
%:?)deG#o1ZO@T'Gd(J227C&ecOCctc!oIaK$\AO8:KA?C!uEgsol*D:W?J>[<]o1,,m^C0Q%Q8&ACEh.J"dYle!U-10WRGQ;$q\L
%$)?=Hb?Q\VAgc'OMR)C]2QVUI_+fIsN&R5i<Jp`U`QA7?51pSS7_1kn"=o=hi4e3iP*MCYS=P$"M_tn=Te%"a@Z9MCG9lkh'd^Z&
%7qMSQ3Ll)_O\5u#Pn7D^C@E=8._W\&BOs?6IXs4'=&cB#7mp/og[PH4$6U<1=lDT1f:f.1j]0Wd&S(?2W5kh\$X-"ZL42=JCf2p0
%pIQhTMP_BB.:Gk59q6?<rC/qN7R9$0\pVZuL$f]C>\,%J5.qpdYopK7?:N8kMQC.Rh#IUW!`7lsXSRlWpUTDJR.o][NpaH;13)u.
%_a-6sLOsj?b5$iUB1AO12fAH6;tKVn?MF1.5+Q]%X+<CjQ149@'hAt*-JAe1)5>If[=`#:Gk.Ps14eRdKAhB[pO12bY05aWa)Yi^
%$(n,L6[.\W]E\C%lIRI>FJFcaO#KESo!k9GMhp^5pRCF<!==8PeG*FS.0cGNR,1D'0:d4;Np0]Bf"tj*E8Par`YboA#f?/^_fG;.
%Vs,<Pnh:0$bJ^`,,7($:fLgq("J*kd?.i3T;A,"-Fr0eca,=KkNj?"K!2l(!Nl10cAt6:N#q"bEh'`!6)m^ANgO"IP4!7<`6c,V0
%QMdA2>\.8;9;c=5H8_EBW[Q%R+L3$BG*Cj!Jd:LG2V]ao=SO7\0RW'%eFi<G8Hb,KStSi6%L=Jq+k_FKJ@*2aI-nStFX;Q,4%'4d
%BD&&VX8qZrO,P39dWP0u6^4L+n,<*>FF8&+:krXS\7r[W`o/WZVO]i["q*Zb":^Y$'Ji?D^k\K+EdO>u/qdhB*AN[uBp#Og6O2e%
%MbFD>\UI?=,VH*/$c`B]=Nego^(O[?0XK=C,T.8Y[8K<MN-T7E/a.l(-2lI4I7AmNLgf\1WC0oBYF>e8DSRjX7(1o,3::r4'm=/t
%W^0+5I:]NX3BMH*g>*Wc@cbJ[3ZoX^1-^0N#pfBekVKA95R<aHgU2l[%Z(9d]7)?F7%QE%Sl/oeP(YmZ;pdn`*oRu0,sp7jE%,Kr
%'@(PII7^u4I0$8`0C(Y9'&s6N9at6sCM##:#ZsF(F?Ut`WQC-(#$)4-V=V*R#>8IIr3g0H8;9EMr+V-]VEm'O?Jb&bKnCI8lfRkF
%Cl'J@kZ?$E6rn>.iahF#):MU.2:nQ2Y5M7cmgl1p*fTRpXJ_"n[kXSrR#VC<Hgnn_/;^BZl#FdgU;,'W]Vl,%=H3P6=n=^KfP0b%
%SCZh\5"[`a=$cuF4W+TaLg/'[iG4DJC%@+>a#24dYU1_VUFmr&M-1l8/#89t=^Dq\YX%eac<=\NDgCm<+H&-JbQ%/AiMF,P\:2^D
%an<U6DOrND:?d*'jgVBgUjMDRE'=p*K(C^'n<9K`ID_F)GBs_sEkL_]*6CQ$a(.dZgDItqe(KfH=;ED6d-><J1frnF(7CnTEuc_5
%Bs5][O\.T6F_@i(\aihKj87kqNm<XF@FX"N#kpI4=rVP%@r(\=YjL6*MXL&/#s830?,7pDO/5Z4&dfu'Tm%>m53(!a.kY*WbTkd0
%Wp:A``^;9U</CI.'PGR0"jK]VY/jdm=FehW^6c:b&NVdqYW0A.hJZX_45>&GE*raQ+R/1l&)>UG!Y'o^g6dOrYFiZtKNu$H45^Q,
%KEi!-(sE(8EPm*q.W0YDIVE\re`og^9e4tc)jV-IHZ,S'i>0)C6\bnd5Y:*RR*Zs'GpN5XiDT;O@QO$0qDQ[hpG8HM4qNUi%ld7C
%;Z/XqZgCNl@-")TDHB)I)V'G]28`oqI-"B!i-6ciU5a135-ut#[uf&:Rrfa'3Ut4GgX=.?JF*6eB<bnM95_aj8O.KKqn+6XmuUDB
%7-JDOBi\m]=j8SGDWLh78^(jXJUAd/_@R,@LP*QQ)qk1+@/@Y)?!9.j]L!W*,fV/d>%eloPioO%H'")nV`oBn:Hj*4'e<UM2-kj1
%WC1Z^]!\TXNiKuG70sRHN4VoFBG`*@3i$\@n4l#afJGge#ZLRB7u/5p:N5A-,T;KM.N?bLW%%C4C"KF3^m10$N`rMQ/sQIoprUWG
%4kdB^%iY^u7W=%Uq<H1S39V4uVf*7GMpjlB[`=1V*>%k5E5]93LZ-#k^<Os(k\r=#$/ND<p?5eD=]=u07QWaO]-cgUlQs45>c1jl
%hbpKR)-Q;Y"I,k5K.-A,oVC9Q!!;F%^R,Lg6-Y`U5=#>8J?RQZ5p[$,n.\`7NcOWf[^*[oPefU=Y1d`)Sb/UO[*05(XT;6HO$iJ2
%jrjAabDM_l8HK\6ets7MJ7g.^1/uZ=Ep:+@#Y_0Y'c(6:'>MeJbnQ*]YrC`j@HDr2R%5GnTR%OilZguWBHsQ]RQ!hX68]!7]'T2Z
%R[XX)jK^PI*T_K5?UHH317d<%bcXG$[+E.1`Dn@0"-7Me,UZC%Q=+J1RNpOI<E/+U]g-i/QQ#X/OQ:/[d%A>fGt4,Z0ouGG%G$;<
%pgD:=<?Q>(,oc4,HVZQPO)ub&KC@>jT`D%POlI!9q)bgN"YZ4_6$7Ef".[D>BZa9TnOji%P;La^A-(o.#:mLJZ4Zb\?tEi9]Zm/4
%(-lBVi1O(qinQR?7Q*Otbp#E_:ojih^o)]c@<la(,*adt-VJ%4qaZD(p9a8305+d;flS>f7R7p@ja5M#PqL3a46WFOZCtD0'g!+4
%2p&FencCUN#8m*Qr[X'mYre.W^++q8V(Z/:kVds'UN\!/=SAD&KuY,*B&q6a"MSU*M`dfpHWEpZNn@V2(&hsJc<8;WPkS%?WGC>;
%3-:bq!rJJ(n/+8J^"l/M557Pp\t9&s"ek!SYRf^6hT6E'hsgQs[7;W[j=cW:0$3=nd//p);3ug?ae/;sQVaFt$.RLfpeg]0qSYMq
%i<*E%]WneQ2T]'oekF2-@@a<]<Kbe'L5$.ILDagi)r\IbOa(S>lF+G%1-Z',O'IZ5PgQG)+j\r'jbC]HX/`kk4,";1$1KK4dK:;*
%``kgST?b(s-%1$ecY4b]4g9H&9ju.91;m?Z7FD7TX)Cq8NHA\4i;ZduMU3E0YmB?E,CtSB_>.0#'""BiN`iEXoXlXk;6JiY!5t;F
%<'sW>\XnZ^:%'Ku0bsHS'L$qIUY1MN1#FIEn:2Z5n0n$XZG!.m81!GuSX1MO&G#Wq.+QH4oneL&"m,W><@`aV00dA9lD,j*4qN(C
%1U2o@ppNufA-bHapArec67\-q]c/cYoP`[tBaM':&T%b#20+%/14"E*7DpICEbmX%\PMjGL&D:AilU_5b0_mgQZH`fTK^#8o`1ip
%[Ce,tb)6/3emcLU@qXr.?6P0#^+O4!ITSVJ\bN)\=oD7/5:W-7eCSPj5X+:N[iqiu,3.@26k*7Ih6g/qijlN+3s`Gr_#?h<heRO<
%'>g(3ThQ)j2]jLtSG+J^*^ZY`qKOke"jLloh-,?5pd;$1;'FP;IoXrD$[pga]T?;:%ZQP;+slqa_bfQ0[_mQeO=rVtNAcOY3mt&T
%.VO(fGoC?%'NbtH>rE/>^KJs$q?fo31IBs6O(G[saN70B>^74:Wd%-b0j?NZ]CO,V_Ro&BImc-QW6GhY0Ir,%a'm12Oieid6%e(/
%hPW]P0=+8j/4YP'4,TgT-2$4mAH8hYNTG.7qc-hCYDsK9Y.SI$rAT6-FenEaARn`^G]a/:PG>R4pkrh^;8i\sT+[Nn]$2>"-\TKe
%2@gOck&4!JQ=+XbNfot>GX^?5r2GW/cs8d1>a\"Oo]hmi?Y^0fcJ4&q=_BZE-]cefZ+[`#)'FL5P/EYa=5lCb>Y7tY(!jV)j2n>o
%55\@Wd*QMc+81*e[J:GKb5Da/k00]WL?7A"U/3Y37-UpH/+^E7n/@BS=GmtW+E![30q9u>fFHSfiMVi`]TE5AO*lU,R<c\tKJ((:
%UIS*$iTN`=HRaVT'ZUAXg#00;Qd;\95%67R.T'WVLMWrp!VDE;&fcQ#/c&,[O4urEH@`"Cg*=`66.IjpdSs0=TNI4^+p;=[HU/<t
%rX#&GPT^oZZaI\i*Y)0'&ZmFbbE_\*O<3X-[9Yp^Il%g97iR3h'!t*[3'p#:W28YrhSA*LIA7Eg2A59U>bHX@n1MEbE1gT84Ye#`
%_$=&VO^JKU8^ciV#H0D32*C7+?SHlL)[]ZR;F?acV,010^QeT#N%aK73\H?HBjM7=@7ZiJJqHS';([>%1@_ZGVE+dQ_UnZ!rpm%r
%_j\sFG#$V,ALOmbrYjJm.N`C<3)&7L5N#AX")tS?X^),TI19Q(:Hb'aV8',undm*J?Vi3W)pH?'KB@h\>gSFtmD`lbjo?lO[,VVs
%n.KR@&[Hp!ho*LpMe.(G!c?u>hd1G4L3DqYUA\$+.s!_C=O:f^fXgPg6]WXl8c@c0(?Y3-D,APqA4<+.3BD"%q@jPD4P+[9,0Qa0
%!-A^'@q4(#m_qJN[dZ_%!J,Ab^+e0,ooEN!Ph)6S7l4o=&Mn4EZGhuE[$<4,A[Wu?#%/B!m;Uf*33*H_db[X\[hS2Q<U@5)<(t/%
%g6>U#Nf\MS>r@JE8[9A^SG(kd%7\%LYYh=.Pm+[kO"sL8Vr0qXb`UbePkR.['>D<Z2/F#iLqAnA@I"F0Hgd/3hV^."YQ-BB^M-cn
%%Pk^Z?ZTEij;1Y/\.''SIl14cdVeFn]+<N$fs]*U?TthSmB9uaXjm/5@'D<'O';/f%eG3F:g7%*o!-sR(]UcsfK[I@D0(C&`_\bl
%D7'uYFn0V=lDi'E*t;WNCP(;i1Qs6dc@_&r1Sr1SUYPEg88Y<]l!]bXPTTmjYUN_.+=W6H<*_80QRt-(RAd#6_HG_408!P;*ZL;?
%?uaAp$^0SRoG$,rDDZp'_D&QWd9\B!gXu'B+djgnRjUdW'=%n1Ed=IBTK[CA4V0a3Hjt:[O:Gcujm>=p-H!.f/EF]<gjYRP_Zk?P
%EnFUumn\D'0e2>.cgJA.::">D%XEm(qk`Fs30Nl?iMfR20Rkl;eN,@U'JH)b:!`,VILE3<G)atojm:FW\%]NbCo.p_Y_=<@`t^bA
%V+"7&FV#CklV>rT1Md8XN%m$uLFUZU6tn6Q<)>\f9T/^`1U'3e<,M<P^i6Bj$A'+[6!W@bmmG%"68\A]Qp8>03OM_@MI8U*;_(?m
%-kmBTUGL9i'g!U"S=J!B&@6,e![9ONL,URd/Fbp&1._TVP,4g%;?;@sL8GtXbarbYDq0\\qLU(CBq"aL@Shl*Hm'NQWadkJRYG?f
%Qtk$\@W")OGsoo!c3H0>_GLj$g$l<sKM[nO1Ao=8!!rH!:r`pqUEq?5>CZd.%uMA23`tF:JAh#q-If"n.F\N0E'aOF09h+BH5&n%
%0Ea&cU:SDtbX>`JVF=h$$9OfqN\C/2@h8X]l\W/3h&l_7&<^N*MY"C8VskYDLDIN/$>3-$!j9W>JF-_%QJ)qq&T\'`^Gd4a4t`@a
%mt'=X$VTN(-I@&ZEoU]_E?P^X@n.M4bsLkQL^AJgpRAJ=WBJY6^ie>I$eJ0+=Rgdu66Fg;)*YT;I:8N+(G;Y-NPg?8pK5*<klT"#
%nO^jYEUmpoJ$AM,<Y5HUNnpt%noGHN:\W`)fP?)oI9U,E/m.k<o7d0YC!<up&E:*D(6EnrZ@t6@[C@pT[9aYkI4jghE3Ig,5k)0K
%(05m%,Y-A9G$CX:g6)i55BlOInCR@Lb[1hhYd+;-SleR:V+t&t@B#d+=Zgb#rRDr<M;eu$YpP]K3L$br1#l88YH5uHkps*HeG`&?
%S^q62M.B#+1.SID_pGKLdqOkDAnkJNQ+^@eD'c_f"/oJW=E_!!.::Z^QKBEoG+.3OI?S6^,U#Mk&**UPVV4QkZ+9e(h\'*G>Br^h
%7CjJ;Pt=-pXHda1hO&>hk%E(O>H(geG2e"S%.EcePQ`spN'<u!`C>])=*!DeQcH)<ZUsAGY12Uup8e\dnr@mZe30b$9Ka@Ij]qE9
%O6s<UqeXF3p9,:aDWc9#"5ITupC_\Ypi%R(;V?KDQ$?Val2*=:o'*QJFIBf2DQ3FT&gFieH)`A[pc?))bUe^&#HP$F!@uf9@qCSX
%L_-;\M$6qGb'MIHp^oM$[teW=nfV.n7"r3f",.d1O?p(,$>LahU%N=nD(c9jOp2_%2CpIOFF4N7Di_[;f$/EN/>8sB:-D9&qUS'_
%&qqdZ8]FJ1Yr^Y&fQ(M#VDE\/p1.:X4o$O+),4IYp!P5rF[5+gbO1C`WS"?#%_V1+m9$`5_/r$h%qG4"RHm]tCN9M]7#`:pcj?0[
%H"7J:]KKjW>nfp&:1k8u^(#Cr-emM(R(3]_\=""q0YD((dbJL]"]nOHIVMD=CKQZi@l?!OU(&Y)bN#AQYs"fE6(7,JRYFQtBMc+>
%nD[:;9LG$3DOh:_f_Z,,7e#i2TG][&4V[WDL'hrE</isr4hBrT8Lj.Y7mr,l/_f)D6l"aVdnKBU",3Wr_6s-iUDZXU?6.lRYZq&E
%]Zsp_cT2]fW@<-hH9Q:o-=)UZaRq*R(gKe97'sU-\X-*8Y$*4gF]mRB;a1LC50cZm&!:k@pR>0A=Kh])F5c,[+_r9;+'Fff3lb(T
%W/4F30k*+)WVb?u**#NrI3!YS1,6F!4f8RGQlW>>dth=3m:Ea!_!j>)@`nf^3@4:i,N7*e5F*0rPL.!?,F0P1foD_.lP4>T9il13
%o2pTANg1-I71/A5+)h_@8n[J-!dC`RA#j%Z91^cU&jI:p:!8<:5lru'I]'=4[t?1=9=No]VC8gUj3T5>)-4mu1W9HrEUMl6:$B#6
%..g>Epn'.ATGU+2E+<1jY#)>B!d5'MM=B=rnM/kB^AQC'.:<`@U-+\t'mQiRQ"N3Um]:2NQuR7=E2-eY:hcuJI,NR$dpn-p-ddl]
%NU4n2_,>"G]$8+RZ(Io\Q[kD`m'7Lm%,s((+)46r8W=k)8ZZ(t%06(2Lcbb>1`\QDEIqLtJurb,crDlJ)D6r/#QtTrO736?Kg$K.
%0-+)$[5uu95\=d)94VT'lHrS\b3?0j<EPg*I$boj.r/d\qYgR[`,89@c]]WjfTX6/"WP@a5S!iomPU34h.:%7JKRNL;gVr98en1s
%6V-^6/E@H,TE<\]d,INaDF'iuTO_ai1tP5*mgMQ)*Cqf_kQujr'$6li@&k/!Y[S#2k9Z)kO/oP:!XZn*r8]fE7kA9u/:u`SX%t%q
%Bcmk?II%s:S>=!ji^""ZiMf:Q<`L6[7e]T)kW"pMdY)MBm[R(r-mZ1X92+bXP,9.p/l*b`HnEY[7NLh3M[nFYGmJSD+b7n/<><E5
%`poj)PtY0SRnk&@,j[iSFiZ`Xrc;2KQ,%B=q\Ah/an9m5SAnYoS`d3&PLe47r^7faddnN9cuni.#/Wh[Y\B6hD2fqh6((7_pjhWB
%d3CY99(Fj8YW*7im2Q4)OgtWPe^jYNa%sE#$8_iW3eL;Qa#M]"DQ,7GX3;JC4:(5Z'!3"W@8urP72)ID9O$i:P+iIXphT,hGmjPJ
%]g:"SWN+<2qoF)r6o<<FHS%?@O)8gWs1bnHl+($=ZLb_[rX\J95Yi;[.#F1CM9u>*(e=k!)]-dgFb$tOW2_,a^CSq"RhX2Br-$s$
%G[PG3Sg3cHIm.*Re[$Z?]kK-,_'7SMUlND'J.)pYHOj6;+-e_*X^VUb6\u1DmnIAE=f!>BHg=hmP2#20NpR-3-(XS$AW;fJ(+/dh
%fe%/-C\u;;C!%^*IFpArkAV'FlJ>_gKFd%uIj)X.R+eFlB>i`XAtC;YEMten8B*h)Mn@:=d"65m905H3>X]c)(!"9rK-^Bl<4O30
%U@(3-flUir<\,RgF?T\&4'KIC3rkZL![h>>,ag'4Ju='`ZB"d?@A;q`$*fWW=:RoWL"&n:IJHaWl[A26A/9)[_jVLZb3Fm[l-L0,
%:6%gSX[5*%]("cqkirCeD5R`R]9\$j4cqi?H44kROBU7Y*Su[E'Qi^lO`Gt-[4A4N]Vc_DS??-@.qf<'I+,n[_]8&i)AB6GUN^R8
%fn;dh`3/_e2%<EdXr&M:8(A4>qP.f]"0p2f:"1K)T)M3eodDt1=@u"`>k+E(%X-s"R;^/fCFZQ/(j-!S=-T+L#-G9`dnG3WFJeBZ
%9LCn+N7_-OV8!bVId<TV1=>B-l:Se#CdKLl>9IfOcQCtLi1kdT73Qi)&-LbZi7Os6PpFLAl(@mn,Z'maqQ=`%oH3BGdJ-DkEb\BF
%gT$d]bB4J7m"92TordT2>josUoSpQ@D*s;BP&t8"`q\YVDJ$=SIPF?Jl-Kmk5&hj4IG<pd1P,E;luqqZ;nG'G-Zl])qjd+uq62Wc
%p"n:r\+'85l[FA(.<]o$?a8F`d+<C64S5K-I2&l3`9kc^S&mV#3p#pG>E6??/ZfN]7H[6pm_m],>qCDZP8gBMGAr+FpXY:mAU!G3
%4gk08qS(_?6a8d5pQ1n9I2BX=9l6fCrD@PS1rklena:JYG&ao'jr=8NU,99!Ls@d;P/UQMT3?\(dGUeS)ZbfY*p/^2drmV^rHXXZ
%,8</6ZGG6dMh^e"n2*?(<@Xg_%rJJ#AKT4kM[IckSH"tK\t,^t$/mG\CX[&cT`ELt^Si3R/WEAHBdi4u!)aEbW5Yj:?<YgL?BlO3
%>@#jR'4%8DDIq1a:`G\oL9PFh'e?.J+UgLBU0X*n8QSjXeu#\OT[TV./Z3_fr@kio;)e00#ff5dr2L@\,n,F7M$lVG%>J'_NGl3R
%K1=S\WTQfVmOE*R_PpF[:k`%T[]G,$%*9:-?DuC*1lDLH>Q*\#b&,_:FOlmPZYld*Str@ua/d@4?1Mnj_dLB$D2K)dj+4b]/Q[ig
%``Goj:"8CC(`>LTAkR5<HsmjN_iKNQ1d9]3.#i-Wp=/T7c0-',AMDDah?t"bmbqd>%3mT0K,QN,e:cAnEG\Ye>*^0,4;skGo40OT
%3M2N9(.R[M(%979f5+eh9r1jDI6:3^_2]T!HF()9("&!2@He3/]9_+BELZat12LiYHaO@?!\WaiZBM5.CZ1V@k',HBmerii-i-U/
%lGpEDSEB7dmLhT[3(<8[X8,KX4`55Bgfn4Y_VEmWo@2R-lKuj,pYP'(\bG:L(RcQnMO4f@TIn:OVZnKJ79_P">uKAh`pV!u+g:5b
%:i5H0XC5r^K.o_gKpCo_-11!#^MMS+GE$4Xi4;QAmlW83C\_D_"r$FhqIgaV6cnSS=*@ZB[e-mS?Obm-;Uk+af--8nW.p:Z\"R?@
%jhs<(ldt@h9kc(/^$fWgh,,TUdK#&Cig))SPT:8pKgU9o1(T-YAgSn.Gq=+[Or0rD\flQ2<=H:a/L0hhZ+ffV<Jet\M<rA5f,djE
%LUums<E&SJC[<rQko?_A>MeO>:-R`ohIYkD,Lsi/1qf`S%Q3T?9'T7=hGRF1MYNLp3g@o#H*C.Uhe5T#_F>\toGj'0*sVF/+7W!D
%eN3l%D^+1TV"C[r8rs=_fk\+D\+F'M[)0Gt,*luK$+nV`N<,t;eu^$-?.in`Mp1;Ab9FQDr6[S6H@36DQ6+m*19-*G*AXh;Fi\QK
%Q`\XHE]]ST`a+q%/l[:Hiqn@%$P01MLmU9<IEW_5V$=YKrH!DbPL->ihnOOD@eIq=<O[9<@oacI6*"a;U/ofhJuqX-j&RHbJZF*F
%'=j"?/p&u):=rRgBCID3/pd36G6bk)<Yg.l[X8.\;EQ1+.J=mc[Af!kXXu[Il^.($.+TksK!A@]LL[Fq9d&bgml$?:2LU1_;ESGl
%.<`M.[@rFhXY!7,l^.($Gh+?n!jl"5MeK4e9h9&:l!di2I"):,<q-j'Q!t!L=rVdtf%SIR[XS&OLhro4L:1-fM/B@H?#XRrC8+pJ
%b9qNb`A>5n@LM*t>FGiL0Ag&kCMim#EKtbM\H4O)U0RMR(<dLUIM:neVA%<VdL#/1Ylf,[6P&L?CI((e.rJI85eBoV_-M%bOG.mY
%h]%)IFf'_7*J\GrZr&qq?7C%_YF<QKl;_W;J\@)%D'8.A49JrkfL*An+0hKBD!>A8LJ;fB+]:Ft?R`GAYI13`J#t:s!:4[9NTA53
%IXo5b6e')jetsc"QF_[%Jdn:3%0fJiN.[tZ!lA!?a[O(tVC!"#cmD76/B&8>[OSC+)Rd(2iNT_dMhc.=5^jZ]7mnoI*[J0t3%cPd
%2Dme*KD"rLi1=>]eOFY#Z*gP9N3*OpA8GB(lh`mALlI[>Dh2EOe3_4,Q9IG)`F8=Xa?9Q7jju4!ZJgEj+gU&eZS8[<Y-/WnjUidX
%DDi"P)h'RR-]>u&:_o%_OKt%q:g(kfXR*,DTj!leoSGN]-@nUU<F_4Q)c,NlB@YYqcH=8mO_<(mB@#k0:&6CZqu#,Sc]:RID&&OJ
%g=jtFe*7rJ33C3?_pe1)/O6Fu*XbiGVA?!$PMpmuf1Kl,CY@4tfCG<<#e"R60l5OmUY'TL*0)U6oG5Q7*dWlYqs,^#Lq&`DB0gF3
%:Kj,iL'BceD/JR4DQ,[DYZq+,LV*NXJ36_K.<[\\D!7"#BusI.>T,@=%@>CVnSf@5Z&#o+kqR22e>)%&H3QLKEpGBH\D5fd"6T/%
%4_-1?800ThOX:1">8t03gg?,],>VAn)iLX6DB4M3b@m85eR]$3j6G'^A<D$1]FJ/4*]AqZbE`oNpX_4Z&\C]^UBB@ags8@VetsdA
%\$e-`]="ICi+:us6h%+T"l]Dj*1tlr'K^DC2RN7loW!7k?A;uR7P?pq*i54<C2nRQ8Ih_d0aj&mqs+RXM"%NU(ZJX@d`(u:pu?pQ
%>>kXcbL!X#o4@*138[NOj,*>"Z,-6I"OA=kZDkn@jm6u#^[+dXpWFWKLqegr>0L>2[A^j4c@?3*XD#%r"'1*4!Wqsr4<uVYNs>jN
%o^T0$S3Ri,pto8:FHbUp?k'b;$t`G!)6AUuW571R/8d.sdNSp;,X$<)J(1.sEsd0ii(p_U-`f!t3Y*cH+4<RcoDL5ME,<]%?C5YG
%!JZktAg)mn)3$$7Yf%<(Qq]a?0QfC:5:e,8+:q1qZl$`T5ro]h.HhP&Qs-pg,5ud'THb"Gl(/Zb==H-DUmPbtKdinhl@Fh,14,s/
%ri-2Rrkpto`%\&qa.jKXWQ-`j^V_96ZfrQE)(UKaU)DFDjRJ2^e0>mTJ)rADruDU'&Tq?t-L@+[9+Q6j+8(0)HjpU3XSaXPH;%DI
%LHYVn?o$,k<M3djOJ@WL+X/__b[VhQZ-B$f.gBF%Onld.)4A;aO,_A\(*35.MIN1GB;CG[Ak^PR-S#gDTp'7j(S8hlnF4QDl*CB4
%TB$_LEKqhnaNA>`Z'?2DpZTcBK<Y-nN7<3-AcA^M=B7>479PXe#)BP_kq&4lbK9pp!6eUg'7sAfItB@1&])=<F%'1RB&u`h-t[?t
%(5uCMOV<bcMP#FC'O++?IA$gUjs)ohB&t-p@-626!R8huG(qeOm,=B.4!(&_[@7r+R0o;dBb'P'*Ri5_rB$sGg80R>VG?HnRVPh8
%f?>qX#AiO`:<7#cHS`$32P>\>B"b,JDJ$kFKl4%F4a8c4ElL&e+J/\[1q"EX1L1tA`0l`s$ffHs(<BY+oEjVQ\&o,#VG#"J3Qm3>
%!1hfk5rpMimQd<fh#B+gOQ]9*_9R?[#ONMfA-_NrT<O#nB%YT84DXF6`&$691ZXsBk@'qsTJ]!\ChTN6fe"!+RF>Wb4\&4i<7s1f
%1HWQB4u9EP6(cgZ*qi_[4U_0M:6kq#(U``#n7P3?4T)P&,7X^BA*tM53P$773jt>u$oESS1C0GUb<nRr<7ZXeZ`/Y2(2(Gb6H;[i
%NeCHSi#N0,o?"g8l]ANicjE]RBP>C(*&t=4Q?PGJQ(T!+/`"K57-j^i8@2!M/PNPLr>$f-<,`(#0NI6A(/:c^Mrr?1^h=K*>KCKT
%%0'aLoO%ubfP$.TE&<cP%<OF4hA/5BQDK@tVEJ\qUdqceAXY_JUfCC]@&-pLi..Wf9(5[*FC9>Il/lK$hbtSIdW>LO883CU4K()b
%<ZY;19eESk398rDddk%FE+q@%*PAbLP87P0J2I]h:&h$pR?gKo_G&Dp4bKX)H5:6Vl6e19FAtMo\7l_]42>RTJdFH^daAF_c1c:a
%e#Ep9_:*/cU8Q[+*djE?AB%CM@c/7lXUan5e1*.q+k5d"%n!IukCKSPq=A&n5Jj@!WpAWBooq(jRT%!h;KJp&.!=9ihYf-h?trFo
%$V`3<V$!Vr9++PolTioT[9DVREN;*<4E<;LcXKsG97pQqal`,oeU&XZqQh>j!a>ne_*hLC_t)a:C?si\j.u;IfBQ]ZENK`B+P/p7
%0JV/[q_1=fT21E&IiY_,&[4-u*WnJ6,*.>XOYo/O%0u9_Y_+gnZ*8^@2F(fVn)FAl5N$%8Nf=8nZ6<'+"2!rud+i8C:&.,a@HQU?
%bWeZI-9JPI1rmG<s(1F`1rTAI=aNRDhTGM`nbNQdqOTdj6?QW$.n/CBao_i^<JG]hQX0"e86>/`<=3Y4.Zttj$>.S@&jei,cp&mu
%_l@BI`A%$Mjt*V^go4ra%c.OSo8:t*pqjDJYeR=g7R1(KQ/pO3WBjb#eRHQR#[pUQ6'@AJ;FTde%b)Ok&Zb9XdX-]i`"gs+jZ)lR
%.(4Yt%;Au,hW#7^3sk.kC=\P>[?=(hkQ"-[)HAr`E$FP\)T:e51ru*&b_OK^@_NT>4o>dk%Yb!1cs4<Mp)]7ib*9>GMj+eZYf#lc
%kI-TQ>=_3DJ0T4"f_P2Z%1"P?J_Jen&AgN+qhPm6aXMm#!obft2BY#A.of=0F2b*_aVkt);rL%R+W1nKl3'ZdkNrUX&cT>f=hDPg
%'Pcl(5UjDrUF,(JCP'ZA<O+oa-*"OAeZ7S1(Rt2=a;)nr/nVHT;CTha,h[<sTF&XBP:"s"9SO4'QT;eJJsQpV#CBUgG[.hB\HE6M
%&&sU-<7R?BX,n%jD@.q7:6gc!6Re^_SuJi?$u).Yi8i8I9hanIqOem<&acVH@,gD]/?a!)aE_E9[Q^X+P"alb3I]ee;W%@!1OR\d
%H[W3r`J*#pIf]=!#pejjM8VVdia2K@5[4BF:[^($m@@ar,&0l*V>'sj?92?#an'YBQs!aU@6>i@W1io^7i(oH%MJr\F_i0RoB3o/
%gnu"[oiV+@k9-F@=7-`%GN%+q8=cI#B49`H0]s$p7V2/(1qrPOh84R/E=nle"%aa3Eg(IUoXh@XTuipA)[gjs,6`O$hZtpT#(f*+
%+V]'SM0X"S-s&L<QL>gtd50%)[e"<^</S'-#qFT!b-6ZO*s@I\L;:=T6$#&n+32YTiJu$+n"<[D&P9^Gfd\-oGMJ-WIWjOo2H3)!
%p%lC_J0;7.mJiV;YS:5/`H))##o"-jra%Z[TXN6\dgmHU>QXjeSkg<jeX(\Darj*k24QpOjH6dm&60^.45OWe2-n8c)4af`n`n0]
%L2ol*Yi7(nP9j6I`f\M38l.t_-!=&m<S'S>Ln'K*-l5n,K*OZUAK8F?A(9C/FA28kiDX+JLIbg`'%;K%jAQIY=T!2cJmjEC)"\$W
%:e:AigFBDs5:<tT%f+='&&aH0=,%P[!QN`pnDG>ra(C$a:tlA)poEQ57aL;@N#Tc`l\&ie!iJ?tB:&ghp!StqiOr!4j:dM"^(\4T
%@3=]G-u8e$X)gpB=J9JW7ufukQ'?nh$o:PjR:f\Ld*&taYSkgX$ni'q<)lqQGD&TnAf3#5H6qLHYH?WNHQDr"#aD?^?V[n`?qm.Q
%F$c1FCnM5?Vok`cOSPCQ$YVWUrijPa:4&o&](%rYL(NKI#p.:/r[1kF'Ja!>INYEG[W1XJ3SM;<^cEBc'"4V(7tR#/VuTPsjE?N"
%@8n:D[\:&3.tdeSW_E=,P.(R.@:9,b#(C4g.AYu!NAn#;r<V?on5<fN$i+,<V\>bF?sCVK5n,/kTc'jl;&"!:'[:JaZr6g>6Kqh5
%jghH*6t#=ZAlNP$4p[cPUr-]_<s2unD*7D.!PB^PBI%J.<#_>NBf,i/8&I)?5qFh7KF%*]TDZ]u9,#Rapd.EB`7JZe>$qdqVP7_`
%YuFij^9q$UM2^WrRS7lug,"K?.*0LTg8K-t@@6C$3YpJRa;(iW^In;Fl?"!pCs,Pm+oOmTl-f.PaAYl-bV*XnUT/?'Yde*K0caQ'
%'JiGlRrV<EMgkEfA]>qLYdPFmH&[&GFBHb8^h/o[i=_9M)`X!h0o:Z@0"VZ-#p643:80$jb,,nI8DhS$q,lk1CZtWBa1*3>#*?>t
%[QO^r30W@iN<Kg19:JE;5'1OU$j<siMO)&?a/pn/RO+s#^$COTb#*'rA4VcP;.a[@qTcsCf/?ijBF^)mo$*P]c!0hjX`,Dm_:,ij
%,*?1B!h+<LpIuYF.uC82D=N(T&=m"IE;8@(&NHKYGW_nndCd15Bp8[^_0:p'&!C5MqWN$c-2qNOrntanMp10J&/_#'qkdnJ)S@NE
%o[JD\Kcs!WlH>c1UbA,4<E*U%eL14Wkk'WaD1-Af4+TICdaj24W\cnB(:hbsb_(i/iZb^pKi\s?c$Z[l">@*se#^S)_'7/>4S-:@
%gR<lY"k@;P[tgeR%2e6_]#YD2?)=MgRYaK%Ks=0=CNs/e8/X^F=^%._LfRmrBW8jg[IV>%Ae)#s*--FEP?gL($W&9Hbln+GN*h*?
%X.7'D,4cns+>9U\#4622dY=L',+Xo-YFffGB0NYt&Ij8[VHNJcmr4*TO=0%+95YbUneN=[c>XR@bYWi0>0<QC<+fM#X9Yb:J&EJo
%"VFh]Wsj:!^ad4C]I*;RVFH!.#]7hg[h/\kk>"I$c9jc&<6T6USgH2pnF[*VLn"MR#t)5<mrEPD"fQG-JY;G8i#RuN6rSZ>b(Me]
%GMjjP1YC6>,]#'n-scA3bG#Ur!fbLh[gO_a6HrPGrJb%,^sH-"&m'9j$PZm0<WfN&!T6Kh]81ttO/J9r%MpbD6;T].38mZkDF3<Y
%8LEC2_Gca,m"7!5OoXf=_,tAl'HDZS_5S]);f[Q=LX=;GDhDcEY]?TSX4m5h!XNmoCgh"Ra8jg3/PUKT^tD]s9]:0;)$IFl&oJcU
%^Sm.W9qg(ri57KMO:P=liI#28%1PKhqs36%R,\:jL)U9"*fo:;5BrH8SR^t.KU7EgCIiV.!Gc$_7D9tC0cY1lkAY>?>I0G"HCj[/
%"\eF(h)AF-BPPh`[<F\b@Y1E>!KrUdVLd:/`dEm"#DeJ*Hh9n:7JIn]5(uV8EAV(jn&d!1RAU=G!4Op:3Rsj@NXhis@5;1p&,B&@
%"-rpC>$#HukmBAu6I`i/Jmm:^\5;K@.9m%tkW&BcF<84[?I&$rKrp?W?#4U1Q'N];K(*2spmkuHpaTn>rLi1BM7O71Gf-dj78Mi$
%eQloY?33*4ZHt`^I+\<>iPp6_m,U!/Wrro;Q?\uqYU]:*Rh6G4m@XXcej^1e*YRV.PUq4o>uUID2p:&GeQ17lChXD=h1<&'7SjI1
%/u+EG1VOo7BH:5T?Sc6uhj;]H)&fWi:5Gfcl!n[T@96D'-X8Ch2L^T@m5g$+.Ter]++@)d[O]Ol<-WjXDeGH<4W4B.ht03[@.6]H
%8dYqc@TI#U>#eHZRPd.r&h(K88OqG?k6u`0[&24MFE?6@<00fuFX$DeZZZ0__Un1cpf4hsj(PXGILnZc*7=ajOJMTGI!2Ru\`VWs
%7`2o&C@oJ-9]%gWaQ(M8]Z*#.8Kj@mHTAnn4LaIu`0-mn:LA@M9\>#P5*r^.O.n+j^;a<`^)sQM#_hQfV!PDspNi'HR#ng\KdG%=
%X9JQ1/a_XSZO[I0HZRJ]&fA'(OYfk211T':64MGq[K3Nh(>H:J]LSBf$LuGNm@l61BPW^qq`qGX3a]>s(*$2XCV'c*TA_/Y*<hJJ
%4^Dpb&T[5'7LI\/[QgJ@BQ(5/He:H6>+$MH*:9Cj8E0D9QU?p_]H)5fr2(JJ8)hfFJb48+U2Y9]a5[nG_ou'F7kgI7;X)n,N>J8W
%Hp,s;S2d?(`$$;_-=oV9M>Xkbrs9Z(XH731SOonGP)D6D/X.oD0/Ln^rK95?EWj8ZX+3Mu.<g@O`Zl7ZQJ=[Q%c&-[dH_]8L>Z^T
%L=7*5*E$1_6QU=kHE`hfYVR2h]=&gbAs,(i3^pQ_&9_sYReAIsXqpZL5jZOn"950uPWa]LPu40YDrKDe"ZV@JS;rIFg_Qt,l2'1)
%>g:<knM+5o7A-_2L-(Q1YE)n97.LMbbigN'+Ac-cdmUYqXp>DhFiDDL_8B,Bm0Ah08jrMr&n?"KZ)OTD1IZp`hR$s\BP8_bfj<\B
%=.RZ3-V'>\-:-,8iFljFkc!@e013XVR/oiN>5.e\g'Ve//gV5&AlHJub$=(HHb]ZgF!R6+16%uL.(E$J$4hkD*420hc*kJB..#Uq
%0YDrXXk@E7K0nb]B[T1kjjEpgn6uC4)i8MZXXSk2Zm7ASGg4cPEGjG,[he]!LC15tka(OXM7!"diM$<Aa)A;:dC23FRV")q<^=FH
%BN4$:QYqj3I4UN%dOfS5D7D.6N`X,PTWp3Hjb8G)RK`nK&O:kqcc+e3#gBuDOWL*KH(=a+e^[mb5?WL`q8qP^5$4W^pBj6A87Bmt
%VJr03,,fZ6@j$UopT;CncIDb@$a.'p7pf#k-&Xn3Rrl`sV_:J1]c5qN8`#[64;?kOE7>K/fDu6>XAZP..D74t`k0E*#?T'EkWgcE
%V+).>[o9!LoJRR0lSCjlf0Q%X6>EA%5pU>mIF>uq\Rf[kO>E,/_?8m,.aj"^6XYdg30>U3h%>5`Qe%2>#CE\*R#IH,9_d?7GZDt[
%SN6Kr:8k5,?sSTI$0,kDE.uHV\f`V+Gk'eJ+NA+gcg*3-i.=pdT+l2?&e;`.lKTL&^+DR[W2L+d-8X9CaZB?Ypmp1Di$5?%JQ95M
%;0^(,O^b;ce=nK5>SU@'=e<D2<0^+>6`r^9$"Jf@^E8f%/eN88J2\Z6.8m)&>gA:96!+n'r"Ts35QWO98hQtq;6n7PM!%"d"pWou
%HGmN#?k\T%cSh),ApPNHWg$'YCbB$(K3(Bb&-O8.THb6MSuu'elE%'J!IPV(1Ecseq;'(tU.<<sRtjQ#&e#=`Vnd@Y%UHWPj$kSG
%Kd"*2N-fN5L>YHC!KM(5c+r@ulUE'Z9KEN6.r2g0+/S^p\[a5QH\_$28QbT$f-$QHH&6K--TD^RaHP(8+U;$T_o?NP3p=."lRPuH
%9s4DIU_P&SaaL6/Aj(;Fl-a]:=%TDl[5C+%Q7djB=gu`u(X&ZEKWj.MO>tK>5#W`KmRUk`nXuhdghBXP&fgBpU,H:"m)7#?JD,j\
%qUTn,jM-77UXb'i_*u'dMI06i"j^[mC9jKTbc&slhnNNFN(#(`E#QVJ:D:l8pdr8PU]g;#6>g#^/j^:uCFomGO>9]Q<2%3]<*<b;
%Jg.LE&Hf7-AJ`6-85DTY?rF?8/h+c.+OhDYS4j:++<&:8Q]2uf*3tcgN5S]^qI2,degonANgtN^i[MULnaaR;L-dLc]K\`/0JIO-
%:*YRu9$R^=KL@.]8nT#+<la\X8"[SMd2`Qd-K9HLfO)_J>nqu`E(2&"GEn!]>_n\Ye,lc"?[7dN%\`<m7OA13.=R3jDs5d1aeb^C
%&o^Q;#/sEYK7WWUfST4p8e%p-3"[#:^$UVAr1n;n]o3M/#ace>B4FfnL0Q97c>\OBOXm0%ACuFD7_O;Q[!NVc<ttiUO5UliS_Q&l
%a<i:>K,6C#N-E'C7'fu;iH8,*C_7"Z6b($"=hgL24:l<W98DVT[a6T]R==W[O6)1#]V3CQ2Q2c@gHC+,6L5';Kd:-$\UW:0=tDMX
%;f]>Nrr"gsn%\AjgWNN[,t_kJZW:T'j^gu]]@-",(\$6<][8S?pMENShHNRQHQ1N)-6Gk=^DG^%KfJ;smV>a]_gPY%8.:DfF"_SO
%1:[ReYo1?We!3UD^HhM<IVm!06TZPrmB?,fOKY..R2j(2:DOTbOpK[[U7d/hd]dn&WNIh2J4g=FULpAqZt5%D:N`ATYZc%[l*1b7
%R`RYGYj?.DXU<A`]>M1eCJXfIi7D\t)gP;'=*`\^i'Y3/1@//^X'KGlf3iM/+5F??Y8Tp1-,Vo,&$D3XP\\iSkS.<:%`//dH9`IY
%(BN4`I`BmYPg7lj)m$?XD8YUeW=#f#rtk:QF$!e53P,j:/_b4UJc-?E(3*H-&%Ant[[h-B&=+TKIe;UIQm@)5N^o>*dcEN]U'u-7
%Xbjr]pTg=PI3+SiG!rrqm$]"ikhLF7Cd6Yd@A",RcMu,0I;0Zd4g<KCh<2H4Y"`Fp0X?^kco7%Z-2V4L9)qT5'gk]B_8gf$6J$2=
%+k1hXc$Y5/Z)Pf/6b#Mc:fF6pSsn)L3XM'&f2Y$L`:.g/Xral^QFD(n3[>=BFJD@T1m'K-qdDf-`V1cnWp?]%/Di6]T;^:H][h;V
%Hk?Nd880/'A4CU#Y$:A,9'l8b/(Z9!5cX+sg7F`tP#A+n1jBa'h9,`-hGU1d_%F5VmRgMRZPs_gAe,@5`HB91dqk*R+24IZBr0#u
%e`+)4_Yg(gan!r;j)-?K?a@g2'j6h/M9O\`BeqIq)PR=6;ElAX/6-Io##&:c8bX4l_d+'RY0p#\.',ihOhJiD`[lga`D)]S?!!Qe
%Q\m@N]oC6p^]K@1hW6@t^'$[/l3OBkL6sTf%'q4d44SD1CA(MC)Mu+_d*hB>:S,Y7ODpt)>>q<j%]\u^c*c!ZjrRP=RLkWY];9R7
%1E_?Pgn>ktY>M1+plm&?:\U,YLb^V@Fk/FU^fQrbCRe-3c&CdfH$TTbDCnA4!RuOo_O`Fu;O7r@?)?._dnE8)1KU_a,'1>KYioCY
%,gi9'nAHdX:\9]&K"?UIJfG1>1&-T(2@dG&2cF5XdS'ef+LC2kDd9s^k.gI`O[U2.d=IN3OU/iq#=\#ZTN0_HrD#@>X`_S!W$7Du
%"<C!&%Ds6eh,aQNDJ#)N&r#F_Nnp'W`tE9,CjOj0)YH79"ae?CP<SA.Lk>^ndYjC`M=+-1TpLpfONqqT@u8CZN]kUm/#ukH$q;@(
%\Kg/\iKfKpH_ajPkIjj]"PQ:9Tbc]TU8V[aCoI%^C_%i+TDnW6+TFQB:8*@"IP5=R'RP^n*)pVn]f>/IGX6QY(DJMqV%\^[!d^LP
%/<S#8F`el@ET&WN*3b*=Ol-[A/`sNLThDM5]39;q.:IAckY=ZH;o1:"!e)KM?)bjFO%UB&I]Ee`B)^1W[@O#9d_BE0C(7aqC-!Fe
%4eZ4im8Hh\#;&%`1-M)?*^Wj0'O;.!gCi'6o(>C.*H+`9Fmj[,;L"t'CNp^"$CC\ac3Ws2c":J3n71jjfR&_@2"\$sOX\&+#"o;D
%*ldRdWtI1_kA>;AF]Vm^RfElkS`;h0$ufiNni3BS<beL?mX8Tlmo1(#VW]KK^PpWD-?=C&mBEC/03S;lp_nDu((LV*a0lNE932'F
%^ZVg6_>dMiF^)20I9ildSmuIVbjN.3eUO55U^>`rEPQ@7%6Fk%5@LR-ZQ["qmlOEg`,'el%rpX`)$VP-k/PKo(;?[s=N<L%Yj[Ql
%a)Z&-Wf.3#*C&l[]&hB;UgB%O)>1]mO1Y/3<5ndHag:t*%n?Zr;X#0]$WLg#V$s9E=8M@9CHl1P+8G<-1CkjuU1cW,fSSVs^,kMe
%mD.JG6b=@sMMCD$):$R!\KtfHC%_/^edc_j`sh(#kAY%NV5JGl*:69o?ha*'-cmnu]b"?K,%E'-K/+UJlQu>MTQY,oNi[k^,.I!N
%T"1gTKl5n&nM+c>W.9UeG\sFSTb,'!XA`A]'CV/g(V.US]0_6-Qh%82D5:<("G8!i9OjA1*IlP7@3m"hi)NK87DkkC9Ug?aP(!QX
%6A8s0^EcW5O"K(&1+sHB8K3.u=]DMS8GfA'P*4?m;N1MUKn<'*cNk\E7qd/4&TFdE-Dk_1oum-S&qqe@%e:<a&3K?i&4Y)]fecX[
%KdlRY(Z+,(4?uA+O_2XVZilF"P&`&0!KLJ$G_&Djb"K(ilrO1(9gVls`90P)k&r3KGpq/2@ZD2`YH)-`]]rM/.>"k;1+6!`,R"p"
%ZU1XX2LPn@<FOMna2E\(:r3?/>K0FBiLWol=Y7)q'=9/rjWn2a&RN=s(eNO#4D4(PPR=P)mbll?Bn>h-ERW@U5)NH&Zl<-+#bia3
%pB4hmR1P08PkMB#WXW9=)Nir(WrPPA(lTOeSJ&=UOV+$]nUeOcm8q5;2nUpr#9mI`RVRc\!8WBoXf+G(&mq+R_,ZP5?r_mplofo=
%lgV'T\eJ;X0t]U==S0E=R3pf*R^bshE91*L]"Bs."2%"`6:eKRT.50R+63;I'!TCMTT:?g3'WFQ>r33,l<KS#NEcnR/0Vu@e"bIU
%79MYTpZ?%MBFgC-!jr3_.m;Tje>hrQ1Veu,h!pKZEEt>4RJh.o.S<kJ]7p-oB9_>o7slE+lOXb@_QZK`75<Z(.NAB&;Fp>_KSVAH
%Ek+R]++`b!<`2CrM&c42WdEN)]jHA$jks/WOu4Y.kL)Q3mI1A2O?.q:*Gg:qKePm)R!=9HMSr-1K,7r]Epf'&"F^ZPn/6Ei+3]1;
%e((a]O:R\GnK4/b91p-q]$s#k9M$<fb172]cu5T!/NIjB(mRq8P#<PRQ!IoCd,WOh)+hlZ2=7O<r((Fm5WN)7]QWP^5H9>61Q_N2
%:1+e%[Z<_6McA(-]2N<\^SU9HGI3Rn=>:\I;rklnrVg2(l0N%(^(-@(m,MU&&84()mD5IV?cP3V$je-4n;>#tSSK*h6LJ1!Zc502
%fkiaXTm&l6S`:h,Uq)b=(b"GpX_m:UGTp'BIQ*!%pS",;b^c7,[D"hKh+kmfS?rguX<?jm:;rE`]Cq[qjdr+'Y.Z2@P(=g(3$pkq
%G1ZD(NLW\h3esPbm$u-3Noe:'n*>4(Q.X=T[1%ufgkRG"XDd7bk&&`Se8A:^n??9Hn#VcBfNFG(^8kMGD*TejQTXV3aE1J"8__D)
%(VLmel_]FgksIO*Clc_.hrs=k]-s2b.[=ljD,9$&G@Pl.<QEKO`.R1l2Kn/^DgNQ!J,-+jQ6+Q$M2N1JV;Xh)0PejI#7kUO;Afrl
%W!uTKd#Tk?ob`SS#9@&I_+fa'n=kA:?B371OUC,VV8G!(.O<s2HdIIkPW5H498.Db2\>\U*T_h@Xidi)iuVleNE`'_Jh(RWG+)!.
%H+6uN]FP>R?$;_&-Z2A+)+&YTcrU2f]N!Q(.a<,#!h*?bq9#<lnoh_381;P=[oOTWbD1Z2ANL*mM[2X\;MAS'`Pk$Mrh]_AJd2^A
%*oW0-Ml%,A8$R%+2pIJfc%?D-WL"5hV[YL?>an.ogd,?p>t<Lu2r-BfN-8&#/h1U>c_WHU3UMCd36S?`bn:rS+1g1NT9/)&]"+hU
%?G4<B_Ma@?,=T`-!Y@ZIFt)CD-05\lPHH<G/o(r[Os2s0nEJIg7sL]3,OTlCX:SRY(4tb/UoZYYLf2bQ1\k]agIjubb"tt>R'O><
%fE@MCf9Gr]-VC,%40kRd,3il>l]JX,FPA!FM`FgK!ARKJ4KQ6DB)$%`^)$S0>a=Q]$*Adh4\E&=N_AH&!55\EO&J93>:"F8,pV,4
%#q@OcN(&?q)%QG-Qj2dfT)(ucj,ZTs<b/a(%'@Mh.%L.sqY2F8E5oYBq$n=gQga"o!6+Ot`"A`aA`<t+jAL!i9J[JTnsPFM0Hu^?
%,C#DDa$F4)Nt]2`&T[N?1F"9=e=u"0Z"@ur"<hnY3Fn5sX;lihAm,\lL__Y!QOatP*0P1kAr^b2H`-"fcoZ5gK`&7!3<Bn!ll=m-
%j3Vk%q]SIY%WC!f#s)TuHOLp$D<Xo>GRoeSdGaIG1J&s3BmjXY:i+O$#e0iO4<4Ld4edsS31cKu'[KaL\=;.0lKIL;Ml`\C.3,ck
%D>?TOWT#;>%`K2l8,'taN#fA!-p+j$'5**[RC#o3->SC-B[M";I!9it[H/'AVi%+648^+[\t^/&E-F,h/b0AVI:hs3)^kIlD_?&)
%41]jY,4Mh9a5G@9n.ULG>K=\@iPd)YM+8AX3%Q+gZ5/FTpKu-,*aW_='7"hBKu`9%N=m"l8,#>P>b9mc+3?VZcYOY/%cPf\Uh3_V
%*\')iTgt!k`9<n>U@_8`ZT(*f1%-23p#q]<Mq'$bpdFG1GiJBeC_;!qfDN[W4bU8Ue=JoR:Y_Q"$r>q*a\?qSi-J+D:RIgs^S`u=
%,l$:jT,9bRgD$8e,B9&^j$2LNA7q?]T,>Xn`(u?P"Slc=i=?%^':0S=TH>>?/_#iMR]rF"3`!8XOAEZaR-,O]k;-B9!spAn:,#g9
%0p3jm.)s]r!<pX$+Tg$li\?"oiH\BFK(qJ]&:`4S"+>49qu\X/dMWqP`,F!F*f1pr8GC.Ai#oUnAos-Q'0JgpXW.$X*SL]_L_g8@
%#U+Ah!>1L8bJ=I41-$E>6Fu@&i<rL!o*@^*bB]$il?XL_Li,871W3V*841$4ggCRgGID0P^E3DF#SA`,p+SnA.Qe7SXbmER`66tK
%(m.!uiJ;`jSHU:uh;TK=83LfUM:D/<9Ct&_h``"D7pZeH*jJ7:Zbn>g@;Si!G_N]K/Y_^d+rBM+98d(DGCrC=ik=Co^Za9*i"9b#
%X(MmG&KNhPg5+@Vc>Y"cB=nhq%cF9DF:h#`a]jiO?A\#WN]9EBkX^=fToP_ar6nC"M1J'o7mZ.jb8(>>nHOo)`65VA(6WQM[qJ=D
%AD6#dn]Gd2Lr>F\Qq3jnJ1";/4l.52M6AkuOsHWL8JHNm,l617BG)81fH^oV"]!KLS'X_=>BkoN7>/h"-[e&*1KB9_-BG4Gd$7+%
%ikp"W-$>27=&NC0HmOcD6WdejMm:4@odEJ*kQF]N-&Q@5P/J#a8R&TR@,f&0+A>tE'8@sSmiWs74VSS(FUQ3b&=e;]@P:qNVGB\W
%M:5GC-E0R>#8X@s9g)Yn2-#Rd,aHRs2GqT(Qqc'Q4_bY"HJGAn%/hQDP:S0gkX=1F6TQrN4%#PQepYS"l,+:hM)LTPG*6QT_4>=>
%([o9snc2H(h?i`E2!U^5s,ZLoMEUg"o#E<\'BA!\!K,/QLB5ALodEXo]MBLqMCfGTqqPUGdCJAdTK[?.5=)"X@CIpfFF[PfW7peC
%'h.?qMiu`074CsI!_1Qjll`(a`\sJeFIdd2.#mTsNd;W7:H+;(U6L6b%TA6^,DRbf]>Qk8'VdE)=c0t/Z)*iem*VXH\[)!.*#FYi
%ouRVe!`+OF*Bcj]%%gGC\V$M`>0@um:bbd^,,c^+^k>O`oo,ROq#mF,EX,%P+LhNKqCKPBJPd.kP>W,U&f.B;^#P9UeCnA3Z"muU
%Q#[*V?5:F#YpuL,%^V%^dnHn'(-?T<ZtC?=.W.a4]1QWV'>994O'e_*Z3XLt$B&?3BYR'BijiN<X;LE886.jfB9j8IKpcOAZ,a1K
%R>XM@U5CfaXXKd?<`NsVXV`LYa]8`k:M_P8RiT'T2/e7g74Z1u>g[#K)-7N!PUfpC%d/]ecPGc&JaAeI`@m`q=0*LLGZXN[beu"9
%UM&^("3)DT8l\:qpPRgfR=%Hnbe@Ooe=p;)12?<^kaCuI=S/CL$nOI.4:7CS'-%JtIA8S)MdJHMYisRnBNXVbM2.q*SqpJU%Qd?8
%\tV>;(B*,H(Q7:0N(#tC`Pte$^n>0l?Kgpa+u!^BZImT8A23r@;6n\A'.5<KDksJu:kt;^2u?"diZst;=U^^F`%3g;R9<-"R&F.%
%>MLd<oZ10oCjG@u2RVaOltD<L'fB/)6&U@Z1UJR%-s?rt=WB#I2B7l\"9RF_>!)n"RMHDnO/Kt$_+`@9N3%6#(<%%hMe[jaeP[^#
%7Fn3Ej0?!/g@4<0$q,>f/N0.+>>u,G`YQN7AP5Uu#%oI/mbUN>'Mke^<S^fb/X[pqDi9YFRCG]UbhSB6U2JMY-?i*+!Je<6J%N\V
%@_0-@hic=AiGZ!_9]-7*r]>aj4ogMX,p3-)iMtlb&f84q%Z<t$Cl?;%-d]flU'GE[E`$X-\`AEeW*Js*HX&0]ouLB[':N_i3[?jL
%(OpVjF&>%5](eW6UPm#R;nCUk1T*m[<0PfH[;Ze[9?u[feg7lIl\ZlFO4a,nX8N@cV(,4RjV;?^-Ho,b?(BMC62JWQ?B'["+MH97
%-Ib[r//RWKRUR*"p$8RXhUhTVrq7H"J,P0&I!ks\5QCIr^\tq)s8((A>QnL6lYh:LrP/=(\,Yt_J,eh!rkkB-p=oWCrSt@Os7n<t
%s6]9is0)9+++O.Qmsk63?iKp!a5?mh0E2h$2!POaI/0-/nt5pO+9"K2c'+q~>
%AI9_PrivateDataEnd
